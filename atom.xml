<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DreamMaker-HS</title>
  
  <subtitle>勤思善问，可敌良师益友。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://dhsmp.com/"/>
  <updated>2019-07-02T06:59:49.833Z</updated>
  <id>http://dhsmp.com/</id>
  
  <author>
    <name>HuaShan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019年月度目标与进展</title>
    <link href="http://dhsmp.com/2019/01/02/annual-summary-2019/"/>
    <id>http://dhsmp.com/2019/01/02/annual-summary-2019/</id>
    <published>2019-01-02T07:04:17.000Z</published>
    <updated>2019-07-02T06:59:49.833Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1月"><a href="#1月" class="headerlink" title="1月"></a>1月</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><ul><li>阅读《大败局》第一册、第二册</li><li>阅读《从0到1：开启商业与未来的秘密》</li><li>阅读教材《马克思主义基本原理概论》</li><li>刷题《计算机网络管理》</li><li>提炼《通信概论》重点知识并记忆</li><li>提炼《马克思主义基本原理概论》重点知识并记忆</li></ul><h3 id="进展"><a href="#进展" class="headerlink" title="进展"></a>进展</h3><ul><li><del>阅读《大败局》第一册、第二册</del></li><li><del>阅读《从0到1：开启商业与未来的秘密》</del></li><li><del>阅读教材《马克思主义基本原理概论》</del></li><li><del>提炼《通信概论》重点知识并记忆</del></li><li><del>提炼《马克思主义基本原理概论》重点知识并记忆</del></li></ul><h2 id="2月"><a href="#2月" class="headerlink" title="2月"></a>2月</h2><h3 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h3><ul><li>阅读《具体生活》</li><li>刷题《计算机网络管理》并背诵重点</li><li>刷题《通信概论》并背诵重点</li><li>刷题《马克思主义基本原理概论》并背诵重点</li><li>阅读《激荡十年，水大鱼大》</li></ul><h3 id="进展-1"><a href="#进展-1" class="headerlink" title="进展"></a>进展</h3><ul><li><del>阅读《具体生活》</del></li><li><del>阅读《激荡十年，水大鱼大》</del></li></ul><h2 id="3月"><a href="#3月" class="headerlink" title="3月"></a>3月</h2><h3 id="目标-2"><a href="#目标-2" class="headerlink" title="目标"></a>目标</h3><ul><li>巩固《计算机网络管理》并记忆重点</li><li>巩固《通信概论》并记忆重点</li><li>巩固《马克思主义基本原理概论》并记忆重点</li></ul><h3 id="进展-2"><a href="#进展-2" class="headerlink" title="进展"></a>进展</h3><ul><li><del>巩固《通信概论》并记忆重点</del></li><li><del>巩固《马克思主义基本原理概论》并记忆重点</del></li></ul><h2 id="4月"><a href="#4月" class="headerlink" title="4月"></a>4月</h2><h3 id="目标-3"><a href="#目标-3" class="headerlink" title="目标"></a>目标</h3><ul><li>参加4月自学考试</li><li>阅读《浩荡两千年：中国企业公元前7世纪—1869年》</li><li>阅读《万万没想到：用理工科思维理解世界》</li></ul><h3 id="进展-3"><a href="#进展-3" class="headerlink" title="进展"></a>进展</h3><ul><li><del>参加4月自学考试</del></li><li><del>阅读《浩荡两千年：中国企业公元前7世纪—1869年》</del></li><li><del>阅读《万万没想到：用理工科思维理解世界》</del></li></ul><h2 id="5月"><a href="#5月" class="headerlink" title="5月"></a>5月</h2><h3 id="目标-4"><a href="#目标-4" class="headerlink" title="目标"></a>目标</h3><ul><li>阅读《跌荡一百年：中国企业1870-1977》</li><li>阅读《历代经济变革得失》</li><li>复习《新概念英语一》</li><li>复习《计算机网络管理》</li><li>撰写毕业论文</li><li>11月《系统集成项目管理工程师》软考通过</li></ul><h3 id="进展-4"><a href="#进展-4" class="headerlink" title="进展"></a>进展</h3><ul><li><del>阅读《跌荡一百年：中国企业1870-1977》</del></li><li><del>阅读《历代经济变革得失》</del></li><li><del>复习《新概念英语一》</del></li><li>4月自学考试成绩已通过</li></ul><h2 id="6月"><a href="#6月" class="headerlink" title="6月"></a>6月</h2><h3 id="目标-5"><a href="#目标-5" class="headerlink" title="目标"></a>目标</h3><ul><li>复习《计算机网络管理》</li><li>阅读教材《系统集成项目管理工程师》</li><li>自学教材《高等数学-工本》</li><li>自学《新概念英语二》</li><li>毕业论文开题报告</li><li>阅读《吴敬琏传》</li><li>阅读《全球科技通史》</li></ul><h3 id="进展-5"><a href="#进展-5" class="headerlink" title="进展"></a>进展</h3><ul><li><del>复习《计算机网络管理》</del></li><li><del>毕业论文开题报告</del></li><li><del>阅读《吴敬琏传》</del></li><li><del>阅读《全球科技通史》</del></li></ul><h2 id="7月"><a href="#7月" class="headerlink" title="7月"></a>7月</h2><h3 id="目标-6"><a href="#目标-6" class="headerlink" title="目标"></a>目标</h3><ul><li>刷题《计算机网络管理》</li><li>阅读教材《系统集成项目管理工程师》</li><li>自学教材《高等数学-工本》</li><li>自学《新概念英语二》</li><li>撰写毕业论文</li><li>阅读《精进2：解锁万物的心智进化法》</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1月&quot;&gt;&lt;a href=&quot;#1月&quot; class=&quot;headerlink&quot; title=&quot;1月&quot;&gt;&lt;/a&gt;1月&lt;/h2&gt;&lt;h3 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h3&gt;&lt;ul&gt;
&lt;
      
    
    </summary>
    
      <category term="随想" scheme="http://dhsmp.com/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>回望2018</title>
    <link href="http://dhsmp.com/2018/12/29/look-back-2018/"/>
    <id>http://dhsmp.com/2018/12/29/look-back-2018/</id>
    <published>2018-12-29T02:27:05.000Z</published>
    <updated>2019-01-08T01:06:43.203Z</updated>
    
    <content type="html"><![CDATA[<h2 id="回忆多似伤感"><a href="#回忆多似伤感" class="headerlink" title="回忆多似伤感"></a>回忆多似伤感</h2><p>2018即将消逝，经历了很多，成长了很多。但是这些成长却是用痛苦跟折磨堆积起来的。我不知道什么是幸福，因为我一直在追赶。5月份以前，每天也就按部就班的推进学习计划。到了6月开始，因为家庭的一些事情，整个心情、心态都一直处于紧绷状态。我觉得自己是一个凡人，甚至一个庸人。这些事情的处理、应对，让我深深感受到，无知才是我这种家庭最大的敌人。我一直在想，知识到底是什么？近半年的时间，完全没有上半年那样能够踏实的静下心来看会书。朋友说是压力。其实想想，也是。压力一直都有，之前只是某一单方面的压力，能够很好的转化为学习的动力。而5月之后，压力的陡增，导致心态一直都处于扭曲的状态。但是至少有一件事情，没有落下。那就是每天的学习。我并不认为自己很厉害，也并不认为自己很自律。对于学习，我只是不敢再放弃。在求学的道路上，十二年的赛跑中，最后三年的自暴自弃，一直到现在都在影响着我的人生。</p><h2 id="展望未来"><a href="#展望未来" class="headerlink" title="展望未来"></a>展望未来</h2><p>未来到底是什么？我到现在还清晰的记得，以前小学五年级时，一个人放学回家，走在路上，傻傻的在想，我往左走两下，往右走两下，会不会影响明天发生在我身上的一些未知事情或别人身上的事情呢？小时候铁臂阿童木、哆啦A梦看多了。到现在，特别的笃定因果关系。撞的南墙太多了，所以特别的笃定。对于未来，也没有特别的设想。能够按照心里既定的计划路线去走好接下来的两年，已是最大的幸福。<br>所以，为了幸福。加油啊，小伙子。<br><img src="http://dhsmp.nos-eastchina1.126.net/20190107050528-211821.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;回忆多似伤感&quot;&gt;&lt;a href=&quot;#回忆多似伤感&quot; class=&quot;headerlink&quot; title=&quot;回忆多似伤感&quot;&gt;&lt;/a&gt;回忆多似伤感&lt;/h2&gt;&lt;p&gt;2018即将消逝，经历了很多，成长了很多。但是这些成长却是用痛苦跟折磨堆积起来的。我不知道什么是幸福，因为我
      
    
    </summary>
    
      <category term="随笔" scheme="http://dhsmp.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>2018年月度目标与进展</title>
    <link href="http://dhsmp.com/2018/10/15/annual-summary-2018/"/>
    <id>http://dhsmp.com/2018/10/15/annual-summary-2018/</id>
    <published>2018-10-15T07:04:17.000Z</published>
    <updated>2018-12-29T02:10:58.736Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1月"><a href="#1月" class="headerlink" title="1月"></a>1月</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><ul><li>完成自考4月报考</li><li>阅读《大学之路》第一册</li><li>阅读《文明之光》第二册</li><li>阅读教材《数据结构》</li></ul><h3 id="进展"><a href="#进展" class="headerlink" title="进展"></a>进展</h3><ul><li><del>完成一篇博客文章的输出</del></li><li><del>完成自考4月报考</del></li><li><del>阅读《大学之路》第一册</del></li><li><del>阅读《文明之光》第二册</del></li><li><del>阅读教材《数据结构》</del></li></ul><h2 id="2月"><a href="#2月" class="headerlink" title="2月"></a>2月</h2><h3 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h3><ul><li>刷题《数据结构》，提炼重点知识</li><li>阅读教材《网络工程》</li><li>阅读教材《计算机网络安全》</li><li>记忆理解《计算机网络原理》重点知识</li><li>阅读《大学之路》第二册</li><li>阅读《文明之光》第三册</li></ul><h3 id="进展-1"><a href="#进展-1" class="headerlink" title="进展"></a>进展</h3><ul><li><del>完成一篇博客文章的输出</del></li><li><del>刷题《数据结构》，提炼重点知识</del></li><li><del>阅读教材《网络工程》</del></li><li><del>阅读教材《计算机网络安全》</del></li><li><del>记忆理解《计算机网络原理》重点知识</del></li><li><del>阅读《大学之路》第二册</del></li><li><del>阅读《文明之光》第三册</del></li></ul><h2 id="3月"><a href="#3月" class="headerlink" title="3月"></a>3月</h2><h3 id="目标-2"><a href="#目标-2" class="headerlink" title="目标"></a>目标</h3><ul><li>刷题《计算机网络安全》，提炼重点知识</li><li>刷题《网络工程》，提炼重点知识</li><li>记忆理解《计算机网络原理》重点知识</li><li>记忆理解《数据结构》重点知识</li><li>阅读《数学之美》</li><li>阅读《文明之光》第四册</li><li>阅读《见识》</li><li>阅读《智能时代》</li><li>泛读《大话数据结构》</li></ul><h3 id="进展-2"><a href="#进展-2" class="headerlink" title="进展"></a>进展</h3><ul><li><del>完成一篇博客文章的输出</del></li><li><del>刷题《计算机网络安全》，提炼重点知识</del></li><li><del>刷题《网络工程》，提炼重点知识</del></li><li><del>记忆理解《计算机网络原理》重点知识</del></li><li><del>记忆理解《数据结构》重点知识</del></li><li><del>阅读《数学之美》</del></li><li><del>阅读《文明之光》第四册</del></li><li><del>阅读《见识》</del></li><li><del>阅读《智能时代》</del></li><li><del>泛读《大话数据结构》</del></li></ul><h2 id="4月"><a href="#4月" class="headerlink" title="4月"></a>4月</h2><h3 id="目标-3"><a href="#目标-3" class="headerlink" title="目标"></a>目标</h3><ul><li>刷题《计算机网络安全》，提炼重点知识</li><li>记忆理解《计算机网络安全》重点知识</li><li>参加4月自学考试</li><li>再次阅读《深入理解Java虚拟机:JVM高级特性与最佳实践》</li></ul><h3 id="进展-3"><a href="#进展-3" class="headerlink" title="进展"></a>进展</h3><ul><li><del>完成一篇博客文章的输出</del></li><li><del>刷题《计算机网络安全》，提炼重点知识</del></li><li><del>记忆理解《计算机网络安全》重点知识</del></li><li><del>参加4月自学考试</del></li><li><del>再次阅读《深入理解Java虚拟机:JVM高级特性与最佳实践》</del></li></ul><h2 id="5月"><a href="#5月" class="headerlink" title="5月"></a>5月</h2><h3 id="目标-4"><a href="#目标-4" class="headerlink" title="目标"></a>目标</h3><ul><li>阅读《计算机组成原理》</li><li>阅读《智识分子：做个复杂的现代人》</li><li>阅读《高手：精英的见识和我们的时代》</li><li>阅读《如何有效阅读一本书》</li><li>阅读《学会学习：从认知自我到高效学习》</li><li>阅读《抗压力：逆境重生法则》</li></ul><h3 id="进展-4"><a href="#进展-4" class="headerlink" title="进展"></a>进展</h3><ul><li><del>完成一篇博客文章的输出</del></li><li><del>阅读《计算机组成原理》</del></li><li><del>阅读《智识分子：做个复杂的现代人》</del></li><li><del>阅读《高手：精英的见识和我们的时代》</del></li><li><del>阅读《如何有效阅读一本书》</del></li><li><del>阅读《学会学习：从认知自我到高效学习》</del></li><li><del>阅读《抗压力：逆境重生法则》<br><img src="https://dhsmp.nos-eastchina1.126.net/80165275.jpg" alt=""></del></li></ul><h2 id="6月"><a href="#6月" class="headerlink" title="6月"></a>6月</h2><h3 id="目标-5"><a href="#目标-5" class="headerlink" title="目标"></a>目标</h3><ul><li>阅读教材《数据库系统原理》</li><li>阅读教材《互联网及其应用》</li></ul><h3 id="进展-5"><a href="#进展-5" class="headerlink" title="进展"></a>进展</h3><ul><li><del>阅读教材《数据库系统原理》</del></li><li><del>阅读教材《互联网及其应用》</del></li><li><del>完成一篇博客文章的输出</del></li><li><del>《新概念英语一》进展的很缓慢，到目前为止推进到第55课。</del></li></ul><h2 id="7月"><a href="#7月" class="headerlink" title="7月"></a>7月</h2><h3 id="目标-6"><a href="#目标-6" class="headerlink" title="目标"></a>目标</h3><ul><li>阅读教材《网络操作系统》</li><li>提炼《数据库系统原理》重点知识</li><li>阅读《踏踏实实学英语》</li><li>阅读《记忆的窍门》</li><li>阅读《学习贵在开窍》</li><li>报考10月考试《网络操作系统》《数据库系统原理》《计算机网络管理》《互联网及其应用》</li></ul><h3 id="进展-6"><a href="#进展-6" class="headerlink" title="进展"></a>进展</h3><ul><li><del>阅读教材《网络操作系统》</del></li><li><del>提炼《数据库系统原理》重点知识</del></li><li><del>阅读《踏踏实实学英语》</del></li><li><del>阅读《记忆的窍门》</del></li><li><del>阅读《学习贵在开窍》</del></li></ul><h2 id="8月"><a href="#8月" class="headerlink" title="8月"></a>8月</h2><h3 id="目标-7"><a href="#目标-7" class="headerlink" title="目标"></a>目标</h3><ul><li>提炼《网络操作系统》重点知识</li><li>刷题《数据库系统原理》</li><li>阅读教材《计算机网络管理》</li><li>阅读《硅谷钢铁侠》</li><li>阅读《天涯若比邻》</li><li>阅读《整理的艺术》</li><li>阅读《零秒思考》</li></ul><h3 id="进展-7"><a href="#进展-7" class="headerlink" title="进展"></a>进展</h3><ul><li><del>提炼《网络操作系统》重点知识</del></li><li><del>刷题《数据库系统原理》</del></li><li><del>阅读《硅谷钢铁侠》</del></li><li><del>阅读《天涯若比邻》</del></li><li><del>阅读《整理的艺术》</del></li><li><del>阅读《零秒思考》</del></li></ul><h2 id="9月"><a href="#9月" class="headerlink" title="9月"></a>9月</h2><h3 id="目标-8"><a href="#目标-8" class="headerlink" title="目标"></a>目标</h3><ul><li>刷题《网络操作系统》，记忆理解重点知识点</li><li>刷题《数据库系统原理》，记忆理解重点知识点</li><li>阅读《雷军:世界需要我的突围》</li><li>阅读《麦肯锡教我的思考武器》</li><li>阅读《麦肯锡入职培训第一课》</li></ul><h3 id="进展-8"><a href="#进展-8" class="headerlink" title="进展"></a>进展</h3><ul><li><del>刷题《网络操作系统》，记忆理解重点知识点</del></li><li><del>刷题《数据库系统原理》，记忆理解重点知识点</del></li><li><del>阅读《雷军:世界需要我的突围》</del></li><li><del>阅读《麦肯锡教我的思考武器》</del></li><li><del>阅读《麦肯锡入职培训第一课》</del></li></ul><h2 id="10月"><a href="#10月" class="headerlink" title="10月"></a>10月</h2><h3 id="目标-9"><a href="#目标-9" class="headerlink" title="目标"></a>目标</h3><ul><li>记忆理解《网络操作系统》重点知识点</li><li>记忆理解《数据库系统原理》重点知识点</li><li>记忆理解《互联网及其应用》重点知识点</li><li>阅读《人类简史》</li><li>参加10月自学考试</li></ul><h3 id="进展-9"><a href="#进展-9" class="headerlink" title="进展"></a>进展</h3><ul><li><del>记忆理解《网络操作系统》重点知识点</del></li><li><del>记忆理解《数据库系统原理》重点知识点</del></li><li><del>记忆理解《互联网及其应用》重点知识点</del></li><li><del>阅读《人类简史》</del></li><li><del>参加10月自学考试</del></li></ul><h2 id="11月"><a href="#11月" class="headerlink" title="11月"></a>11月</h2><h3 id="目标-10"><a href="#目标-10" class="headerlink" title="目标"></a>目标</h3><ul><li>阅读教材《计算机网络管理》</li><li>阅读《高性能网站建设指南》</li><li>阅读教材《通信概论》</li><li>阅读《态度》</li><li>阅读《番茄工作法图解》</li></ul><h3 id="进展-10"><a href="#进展-10" class="headerlink" title="进展"></a>进展</h3><ul><li><del>10月考试《网络操作系统》、《数据库系统原理》、《互联网及其应用》顺利通过</del></li><li><del>阅读教材《计算机网络管理》</del></li><li><del>阅读《态度》</del></li><li><del>阅读《腾讯传》</del></li><li>这个月过的比较迷糊，自我感觉有点变懒了。精神状态不佳。</li></ul><h2 id="12月"><a href="#12月" class="headerlink" title="12月"></a>12月</h2><h3 id="目标-11"><a href="#目标-11" class="headerlink" title="目标"></a>目标</h3><ul><li>阅读教材《通信概论》</li><li>阅读《高性能网站建设指南》</li><li>阅读《番茄工作法图解》</li><li>刷题《计算机网络管理》，记忆理解重点知识点</li></ul><h3 id="进展-11"><a href="#进展-11" class="headerlink" title="进展"></a>进展</h3><ul><li><del>阅读教材《通信概论》</del></li><li><del>阅读《番茄工作法图解》</del></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1月&quot;&gt;&lt;a href=&quot;#1月&quot; class=&quot;headerlink&quot; title=&quot;1月&quot;&gt;&lt;/a&gt;1月&lt;/h2&gt;&lt;h3 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h3&gt;&lt;ul&gt;
&lt;
      
    
    </summary>
    
      <category term="随想" scheme="http://dhsmp.com/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>计算机网络原理学习部分的总结</title>
    <link href="http://dhsmp.com/2018/07/30/network/"/>
    <id>http://dhsmp.com/2018/07/30/network/</id>
    <published>2018-07-30T08:48:57.000Z</published>
    <updated>2018-10-28T00:40:25.462Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前沿"><a href="#前沿" class="headerlink" title="前沿"></a>前沿</h2><p>从去年9月开始，看教材《计算机网络原理》到4月考试通过，前前后后花了大半年时间。必须得承认，我不是神童，也不是学霸，不是那种一学就会的体质。《计算机网络原理》绝对是我啃得最慢，也是我认为最枯燥的一本教科书。但是我还是靠自学把它啃下来了，磨炼了心性。对于计算机网络世界的理解，真的上升了不少，不仅仅只是编程。<br>曾国藩对于学习，提出过四点要求，个人觉得非常有意思。<br><strong>一曰看生书宜求速，不多读则太陋。<br>一曰温旧书宜求熟，不背诵则易忘。<br>一曰习字宜有恒，不善写则如身之无衣，山之无木。<br>一曰作文宜苦思，不善作则如人之哑不能言，马之肢不能行。</strong></p><h2 id="计算机网络概述"><a href="#计算机网络概述" class="headerlink" title="计算机网络概述"></a>计算机网络概述</h2><p>在教科书中，有一段话是需要背的。什么是计算机网络？只有当你能够很顺的背下来，你才会去回味、去理解概述的含义。这里再借鉴一下教科书上的内容。<br><strong>计算机网络，是指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。</strong><br>在整个计算机网络发展史中，早期60年代的计算机网络是美国军方研制的ARPNET网，主要是科研机构为实现资源共享。到了80年代诞生出统一的标准-OSI参考模型。也就是常说的七层模型。教科书都是以七层模型来讲，但是事实上的标准是TCP/IP四层模型。七层模型从高往低依次是：<strong>应、表、会、传、网、数、物</strong>（记第一个字，刚好是一句七言绝句诗，方便记忆）。四层模型从高往低依次：<strong>应、传、互、主</strong>。<br><img src="https://dhsmp.nos-eastchina1.126.net/40277440.jpg" alt=""><br>每一层中所包含的协议：（两张图都是网上找的，跟教科书上也是一样的，隔个三五天翻看一下，一回生二回熟，慢慢就记住了）<br><img src="https://dhsmp.nos-eastchina1.126.net/83019517.jpg" alt=""><br>发送端在将数据进行发送时，需要经过一系列的封装。<br><img src="https://dhsmp.nos-eastchina1.126.net/28381599.jpg" alt=""><br>接收端在接收数据的时候，再进行相应的解封。<br><img src="https://dhsmp.nos-eastchina1.126.net/37102701.jpg" alt=""><br><img src="https://dhsmp.nos-eastchina1.126.net/65343908.jpg" alt=""></p><h2 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h2><p>总结的方式也按教科书章节的划分，从底层往上层温习。<strong>物理层主要是实现比特流的透明传输，为数据链路层提供数据传输服务，直接面向实际承担数据传输的物理介质。其实就是最原始的二进制位数据的传输。</strong><br>传输介质主要是有线、无线两大类。有线传输介质中有双绞线、同轴电缆、光钎。双绞线跟同轴电缆不可避免的就需要把二进制数据，转换成电频进行传输。专业术语叫调制解调器，俗称猫（MODEL）。在接收方中，再把电信号还原成二进制数据。而光纤传输的是光信号，需要发送端将其转成光信号，接收端再还原成电信号。<br>数据在传输过程中无可避免的就会出现传输速率，信道容量，误码率，通信方式的问题。就类似现实社会中，公司有一堆的货物要运到某个地方，货物就是数据，运输的路径其实就是传输过程，是走汽车运输还是火车运输，货物所运达的时间，传输的速率是不同的。在传输过程中可能会出现少了某一个物品。货物很多，是一次一次的运输，还是一次找10个承运人来运输…等等这些问题。这里不得不提一位伟人-香农。香农提出了信息熵的概念，为信息论和数字通信奠定了基础。<br>物理层的主要任务确定传输媒体接口的一些特性。主要是机械特性、电气特性、功能特性、规程特性。</p><ul><li>机械特性：例如网卡接口的数目、形状、大小等。</li><li>电气特性：电压的范围-5V到+5V。</li><li>功能特性：用电压的取值范围来表示比特数据。-5V到0V表示0，+5V到0V表示1.</li><li>规程特性：规定建立连接时各个相关部件的工作步骤。<br><img src="https://dhsmp.nos-eastchina1.126.net/25960527.jpg" alt=""><br><img src="https://dhsmp.nos-eastchina1.126.net/68226925.jpg" alt=""><br>信号的编码方式<br><img src="https://dhsmp.nos-eastchina1.126.net/14023142.jpg" alt=""><br><strong>曼彻斯特编码：bit中间有信号跳变，从低到高的跳变表示0，从高到低的跳变表示1。</strong><br><img src="https://dhsmp.nos-eastchina1.126.net/80606994.jpg" alt=""><br><strong>差分曼彻斯特编码：bit中间有信号跳变，bit与bit之间也有信号跳变表示下一bit为0。bit与bit之间无信号跳变，表示下一bit为1。</strong><br><img src="https://dhsmp.nos-eastchina1.126.net/88120148.jpg" alt=""><br><img src="https://dhsmp.nos-eastchina1.126.net/42908405.jpg" alt=""><h2 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h2>数据链路层主要是对物理层传输原始bit流功能的加强，将物理层提供的可能出错的物理连接改造成为逻辑上无差错的数据链路，使之对网络层表现为一条无差错的链路。数据链路层的传送单位称为帧。<br><img src="https://dhsmp.nos-eastchina1.126.net/743647.jpg" alt=""><br>数据链路层主要是要解决三个问题：</li><li>封装成帧：就是在一段数据的前后分别添加首部和尾部，然后就构成了一个帧，确定帧的界限。首部和尾部的一个重要作用就是进行帧定界。<br><img src="https://dhsmp.nos-eastchina1.126.net/48033311.jpg" alt=""></li><li>透明传输：是指不管所传数据是什么样的比特组合，都应当能够在链路上传送。当所传数据中的比特组合恰巧与某一个控制信息完全一样时，就必须采取适当的措施，使接收方不会将这样的数据误认为是某种控制信息。<br><img src="https://dhsmp.nos-eastchina1.126.net/96367096.jpg" alt=""></li><li>差错控制：传输过程中可能会产生比特差错：1 可能会变成 0 而 0 也可能变成 1。为了保证数据传输的可靠性，在计算机网络传输数据时，必须采用各种差错检测措施。在数据链路层传送的帧中，广泛使用了循环冗余检验CRC的检错技术。<h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2>网络层的目的是实现两个端系统之间的数据透明传送，具体功能包括路由选择、拥塞控制、网际互连等。<br><img src="https://dhsmp.nos-eastchina1.126.net/21516818.jpg" alt=""><br><img src="https://dhsmp.nos-eastchina1.126.net/78452877.jpg" alt=""></li><li>RIP协议：路由信息协议，简单的距离向量路由协议。每个RIP路由器都保存了一张路由表，每一项对应着一个目的地。其中每项包括了目的地的IP地址、到目的地的路径距离的度量1、到目的地的路径的下一个路由表的IP地址、路由改变标志以及和这条路由有关的一些计时器。其采用的距离度量是一种非常简单的到目的地距离的测量方式：站点计数度量，也就是该路由要经过的路由器个数。</li><li>OSPF协议：链路状态路由协议，每个路由器通过维护它自己的本地链路状态信息，即路由器到子网的链路状态和可以到达的邻居路由器，通过扩散的方法把更新了的本地链路状态信息广播给自治系统中的每个路由器。这样每个路由器都知道自治系统内部的拓扑结构和链路状态信息。路由器根据这个链路状态库计算出到每个目的地的最短路径。所有路由器都采用相同的算法来计算最短路由，而且这个计算是在路由器本地进行的。动态的路由算法，能够自动而快速地适应拓扑结构的变化。</li><li>IP协议：互连网协议，将多个网络连成一个互连网，把高层的数据以多个数据报的形式通过互连网分发出去。<br><img src="https://dhsmp.nos-eastchina1.126.net/7500754.jpg" alt=""></li><li>ARP协议：地址转换协议。在TCP/IP网络环境下，每个主机都分配了一个32位的IP地址，这种互联网地址是在网际范围标识主机的一种逻辑地址。为了让报文在物理网上传送，必须知道彼此的物理地址。以以太网环境为例，为了正确地向目的站传送报文，必须把目的站32位IP地址转换成48位以太网目的地址，此时所需要的协议就是ARP协议。<br><img src="https://dhsmp.nos-eastchina1.126.net/89098859.jpg" alt=""></li><li>RARP协议：反向地址转换协议，使用与一种特殊的情况，如果站点初始化以后，只有自己的物理网络地址而没有IP地址，则可以通过RARP协议发出广播请求，征求自己的IP地址。而RARP服务器负责回答。无IP地址的站点可以通过RARP协议取得自己的IP地址。</li><li>ICMP协议：互联网控制报文协议。</li><li>IGMP协议：因特网组管理协议。<h2 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h2><img src="https://dhsmp.nos-eastchina1.126.net/95311087.jpg" alt=""></li><li>TCP协议：需要将传输的数据进行分段传输，建立会话，可靠传输，流量控制。<br><img src="https://dhsmp.nos-eastchina1.126.net/71000992.jpg" alt=""><br>传输层协议和应用层协议之间的关系：端口号加使用的传输层协议，用以标识应用程序。<br><img src="https://dhsmp.nos-eastchina1.126.net/50225753.jpg" alt=""><br>可靠传输原理：ARQ自动请求重传，采用确认和重传机制。<br><img src="https://dhsmp.nos-eastchina1.126.net/61114084.jpg" alt=""><br><img src="https://dhsmp.nos-eastchina1.126.net/9071104.jpg" alt=""><br>TCP报文格式：<br><img src="https://dhsmp.nos-eastchina1.126.net/57953401.jpg" alt=""><br>TCP建立连接三次握手的过程：<br><img src="https://dhsmp.nos-eastchina1.126.net/77880357.jpg" alt=""><br>TCP释放连接四次挥手的过程：<br><img src="https://dhsmp.nos-eastchina1.126.net/45858470.jpg" alt=""></li><li>UDP协议：一个数据包就能够完成数据通信，不分段，不需要建立会话，不需要流量控制，不可靠传输。<br><img src="https://dhsmp.nos-eastchina1.126.net/97210689.jpg" alt=""></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前沿&quot;&gt;&lt;a href=&quot;#前沿&quot; class=&quot;headerlink&quot; title=&quot;前沿&quot;&gt;&lt;/a&gt;前沿&lt;/h2&gt;&lt;p&gt;从去年9月开始，看教材《计算机网络原理》到4月考试通过，前前后后花了大半年时间。必须得承认，我不是神童，也不是学霸，不是那种一学就会的体质。
      
    
    </summary>
    
      <category term="计算机理论" scheme="http://dhsmp.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>Shell脚本的回顾</title>
    <link href="http://dhsmp.com/2018/05/12/shell/"/>
    <id>http://dhsmp.com/2018/05/12/shell/</id>
    <published>2018-05-12T14:16:08.000Z</published>
    <updated>2018-10-28T00:40:25.494Z</updated>
    
    <content type="html"><![CDATA[<h2 id="对新的编程语言学习的一些感想"><a href="#对新的编程语言学习的一些感想" class="headerlink" title="对新的编程语言学习的一些感想"></a>对新的编程语言学习的一些感想</h2><p>最近重新温习了一下Shell，系统的学习了一遍。发现其实以前对Shell的理解与认知仅仅只是停留在马上用的层面。仔细想了想，任何一种编程语言或者是其他新知识的学习，个人觉得应该离不开几个要素。这样才能在自己学习中，建立对新知识一个系统的认知。</p><ol><li>了解Shell的基本历史，可以很快速的浏览一遍，有个大概轮廓或印象。</li><li>Shell编程中的变量、流程、语法、函数（重点）</li><li>掌握知识，并运用自如-&gt;大量的练习</li></ol><p>重点其实是在第二点，掌握一门编程语言最基本的四个点，其实基本能上手了。至于熟练程度，那都是靠不停的使用堆砌起来的。掌握了系统的学习过程，遇到问题-&gt;解决问题，才能知其然。</p><h2 id="shell历史"><a href="#shell历史" class="headerlink" title="shell历史"></a>shell历史</h2><p>Shell目前是一种统称，UNIX系统上有多种Shell。目前各种Linux发行版标配的Shell都是bash。Shell脚本不需要编译，属于解释执行的，一行一行读取并执行这些命令。类似的解释执行的还有JS脚本、HTML等，都是一行一行顺序执行的。<br><img src="https://dhsmp.nos-eastchina1.126.net/9591267.jpg" alt=""><br>已进入Linux的黑窗，敲一行命令，就刚好能执行。其实就是因为系统在启动的时候，就已经运行了一个shell解释器，等着用户的输入再来解释执行。</p><h2 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#! /bin/sh</div><div class="line">#这是注释</div><div class="line">cd ..</div><div class="line">ls</div></pre></td></tr></table></figure><p>#表示注释，#!表示该脚本指定的某解释器进行解释执行<br>编写好以后，得运行一遍吧。在Linux操作系统中，启动shell脚本有4种方式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">source ./test.sh</div><div class="line">. ./test.sh</div><div class="line">sh test.sh</div><div class="line">./test.sh</div></pre></td></tr></table></figure></p><p>以上4种方式的区别在于，source跟.是属于shell的内建命令，也就是说用这两种方式启动，是不会产生新进程的。用sh命令，则会产生在当前进程上产生一个子进程来运行该脚本。提示：权限不够。表示该新建的文件没有执行权，需要执行chmod +x test.sh，为test.sh添加执行权。</p><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>Shell中的变量主要有两种。</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>环境变量：以从父进程传给子进程。env命令可以直接打印查看当前系统的环境变量。<br>本地变量：只存在于当前Shell进程，格式是：VARNAME=value（等号之间没有空格）。可使用export命令可以把本地变量导出为环境变量。export VARNAME=value</p><h3 id="命令代换"><a href="#命令代换" class="headerlink" title="命令代换"></a>命令代换</h3><p>用一个自定义的变量名承载系统命令。例如：DATE=`date`，echo $DATE则可以实现直接敲命令date的效果。</p><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><p>有些特殊意义的字符，如果只想取它字面值，可以\进行转义，用于去除紧跟其后的单个字符的特殊意义。</p><h3 id="单引号"><a href="#单引号" class="headerlink" title="单引号"></a>单引号</h3><p>字符串的界定符，单引号中的内容会原样输出。<br>echo ‘$SHELL’则会输出$SHELL</p><h3 id="双引号"><a href="#双引号" class="headerlink" title="双引号"></a>双引号</h3><p>字符串的界定符，被双引号用括住的内容，将被视为单一字串。它防止通配符扩展，但允许变量扩展。<br>echo “$PATH”则会输出环境变量PATH的值。作为一种好的Shell编程习惯，应该总是把变量的取值放在双引号之中。</p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>命令test或 [] 可以测试一个条件是否成立，0表示成功，1表示失败。可以用特殊变量$?读出。</p><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><h4 id="if-then-elif-else-fi"><a href="#if-then-elif-else-fi" class="headerlink" title="if/then/elif/else/fi"></a>if/then/elif/else/fi</h4><p>在Shell中用if、then、elif、else、fi这几条命令实现分支控制。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if [ -f ~/.bashrc ]; then</div><div class="line">. ~/.bashrc</div><div class="line">fi</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">#! /bin/sh</div><div class="line"></div><div class="line">echo &quot;Is it morning? Please answer yes or no.&quot;</div><div class="line">read YES_OR_NO</div><div class="line">if [ &quot;$YES_OR_NO&quot; = &quot;yes&quot; ]; then</div><div class="line">echo &quot;Good morning!&quot;</div><div class="line">elif [ &quot;$YES_OR_NO&quot; = &quot;no&quot; ]; then</div><div class="line">echo &quot;Good afternoon!&quot;</div><div class="line">else</div><div class="line">echo &quot;Sorry, $YES_OR_NO not recognized. Enter yes or no.&quot;</div><div class="line">fi</div></pre></td></tr></table></figure><p>read命令的作用是等待用户输入一行字符串，将该字符串存到一个Shell变量中。</p><h4 id="case-esac"><a href="#case-esac" class="headerlink" title="case/esac"></a>case/esac</h4><p>Shell脚本的case可以匹配字符串和Wildcard，每个匹配分支可以有若干条命令，末尾必须以;;结束，执行时找到第一个匹配的分支并执行相应的命令，然后直接跳到esac之后。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#! /bin/sh</div><div class="line"></div><div class="line">echo &quot;Is it morning? Please answer yes or no.&quot;</div><div class="line">read YES_OR_NO</div><div class="line">case &quot;$YES_OR_NO&quot; in</div><div class="line">yes|y|Yes|YES)</div><div class="line">echo &quot;Good Morning!&quot;;;</div><div class="line">[nN]*)</div><div class="line">echo &quot;Good Afternoon!&quot;;;</div><div class="line">*)</div><div class="line">echo &quot;Sorry, $YES_OR_NO not recognized. Enter yes or no.&quot;;;</div><div class="line">esac</div></pre></td></tr></table></figure></p><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><h4 id="for-do-done"><a href="#for-do-done" class="headerlink" title="for/do/done"></a>for/do/done</h4><p>Shell脚本的for循环结构，类似于某些编程语言的foreach循环。也就是遍历。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#! /bin/sh</div><div class="line"></div><div class="line">for FRUIT in apple banana pear; do</div><div class="line">echo &quot;I like $FRUIT&quot;</div><div class="line">done</div></pre></td></tr></table></figure></p><h4 id="while-do-done"><a href="#while-do-done" class="headerlink" title="while/do/done"></a>while/do/done</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#! /bin/sh</div><div class="line"></div><div class="line">echo &quot;Enter password:&quot;</div><div class="line">read TRY</div><div class="line">while [ &quot;$TRY&quot; != &quot;secret&quot; ]; do</div><div class="line">echo &quot;Sorry, try again&quot;</div><div class="line">read TRY</div><div class="line">done</div></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>Shell中的函数，在其定义中是没有返回值也没有参数列表。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#! /bin/sh</div><div class="line"></div><div class="line">foo()&#123; echo &quot;Function foo is called&quot;;&#125;</div><div class="line">echo &quot;-=start=-&quot;</div><div class="line">foo</div><div class="line">echo &quot;-=end=-&quot;</div></pre></td></tr></table></figure></p><h2 id="位置参数和特殊变量"><a href="#位置参数和特殊变量" class="headerlink" title="位置参数和特殊变量"></a>位置参数和特殊变量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$0 相当于C语言main函数的argv[0]</div><div class="line">$1、$2...这些称为位置参数（Positional Parameter），相当于C语言main函数的argv[1]、argv[2]...</div><div class="line">$# 相当于C语言main函数的argc - 1，注意这里的#后面不表示注释</div><div class="line">$@ 表示参数列表&quot;$1&quot; &quot;$2&quot; ...，例如可以用在for循环中的in后面。</div><div class="line">$* 表示参数列表&quot;$1&quot; &quot;$2&quot; ...，同上</div><div class="line">$? 上一条命令的Exit Status</div><div class="line">$$ 当前进程号</div></pre></td></tr></table></figure><h2 id="Shell脚本调试方法"><a href="#Shell脚本调试方法" class="headerlink" title="Shell脚本调试方法"></a>Shell脚本调试方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-n读一遍脚本中的命令但不执行，用于检查脚本中的语法错误。</div><div class="line">-v一边执行脚本，一边将执行过的脚本命令打印到标准错误输出。</div><div class="line">-x提供跟踪执行信息，将执行的每一条命令和结果依次打印出来。</div></pre></td></tr></table></figure><p>$ sh -x ./test.sh</p><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>正则表达式分为Basic正则和Extended正则，也就是基本正则和扩展正则。Linux操作系统中，grep命令，默认使用的是基本正则。egrep命令使用的是扩展正则。</p><h3 id="基本语法-字符类"><a href="#基本语法-字符类" class="headerlink" title="基本语法-字符类"></a>基本语法-字符类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.匹配任意一个字符abc.可以匹配abcd、abc9等</div><div class="line">[]匹配括号中的任意一个字符[abc]可以匹配ad、bd、cd</div><div class="line">-在[]括号内表示字符范围[0-9a-fA-F]可以匹配一位十六进制数字</div><div class="line">^位于[]括号的开头，匹配除括号内字符之外的任意一个字符[^xy]可以匹配a1、b1，不匹配x1、y1</div></pre></td></tr></table></figure><h3 id="基本语法-数量限定符"><a href="#基本语法-数量限定符" class="headerlink" title="基本语法-数量限定符"></a>基本语法-数量限定符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">?紧跟它前面的单元，匹配零次或一次[0-9]?\.[0-9]匹配0.0、2.3、.5等，.号是特殊字符，用\转义一下。</div><div class="line">+紧跟它前面的单元，匹配一次或多次[a-zA-z0-9_.-]+@[a-zA-z0-9_.-]+\.[a-zA-z0-9_.-]匹配email地址</div><div class="line">*紧跟它前面的单元，匹配零次或多次[0-9][0-9]*匹配至少一位数字</div><div class="line">&#123;N&#125;大括号，精确匹配N次[0-9][0-9]&#123;2&#125;匹配从100到999的整数</div><div class="line">&#123;N,&#125;匹配至少N次[0-9][0-9]&#123;2,&#125;匹配三位以上的整数</div><div class="line">&#123;,M&#125;匹配最多M次[0-9]&#123;,1&#125;相当于[0-9]?</div><div class="line">&#123;N,M&#125;至少N次，最多M次^[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;$匹配IP地址</div></pre></td></tr></table></figure><h3 id="基本语法-位置限定符"><a href="#基本语法-位置限定符" class="headerlink" title="基本语法-位置限定符"></a>基本语法-位置限定符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">^匹配行首的位置</div><div class="line">$匹配行末的位置</div></pre></td></tr></table></figure><h3 id="基本语法-其他特殊定符"><a href="#基本语法-其他特殊定符" class="headerlink" title="基本语法-其他特殊定符"></a>基本语法-其他特殊定符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">\转义字符，普通字符转义为特殊字符，特殊字符转义为普通字符</div><div class="line">()将正则表达式的一部分括起来组成一个单元，可以对整个单元使用数量限定符([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1-3&#125;匹配IP地址</div><div class="line">|连接两个子表达式，表示或的关系n(o|either)匹配no或neither</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;对新的编程语言学习的一些感想&quot;&gt;&lt;a href=&quot;#对新的编程语言学习的一些感想&quot; class=&quot;headerlink&quot; title=&quot;对新的编程语言学习的一些感想&quot;&gt;&lt;/a&gt;对新的编程语言学习的一些感想&lt;/h2&gt;&lt;p&gt;最近重新温习了一下Shell，系统的学习了一
      
    
    </summary>
    
      <category term="Shell" scheme="http://dhsmp.com/categories/Shell/"/>
    
    
  </entry>
  
</feed>
