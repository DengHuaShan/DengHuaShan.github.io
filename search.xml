<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[WebService??RPC?????????��???]]></title>
    <url>%2F2018%2F10%2F28%2Fwebservice-summary%2F</url>
    <content type="text"><![CDATA[??????????????????????????????????????????????????????????????????????????????????????��???????????,??????????????????????��??? Socket??????????IE??????SocketServer??????��???HTTP��???????????????????????????????????????????socket???????????��???��???????????????????????????????Web Service???????????? Web ServiceWebService???????????��???????Web???????????��???????�e???????????Web????????API????????????????????????????????��???????????Java???????????��??????????????????C++???????????��????????????????????? WebService????? xml:soap??????xml???????��?????��???????http��?????? soap??simple object access��?��????????��?��??http��???????????????Map?????????????????��??? wsdl??WebService??????????????xml????????????????? WebService???????????soap1.1??soap1.2??http-get??http-post wsimportWebService??????????????��?????????WebService?????????????????????WebService?? ???wsimport???????? jdk?��???jdk1.6.21?????? ???????????jdk?��??eclipse????????��???? wsimport?????12345????wsimport [options] &lt;wsdl_uri&gt;-wsdl_uri??wsdl????????????-d??????????????��??-s??????????Java???????????????????class????????-p????????????? Java????webservice?????JAX-WS??JAX-WS(Java API for XML Web Services)?�Z?????XML web services??JAVA API??JAX-WS??????????????RPC-oriented????message-oriented ??????????web services?? ????????????��??WebService???? ??????????????????????????????@WebService ???Endpoint????????????????WebService????Endpoint.publish(address, implementor);address?????????????implementor?????????????????��???????????????????????????????IP?????????????????? ???jar?????jar -cvf jar????.jar ?��?????????????????????????jar??????????????��???��????????????��??????????????��?????????jar???�� ?????????????? WDSL?????????????????????????????123456789service name????????tns:??targetNameSpace????��??tns??????????????port name????????????binding name??????type????????WebService?????????????????transport???????????????operation name????????WebService???????input message?????????output message????????? ??????????12345678910@WebService??????????????????????????public???��???????��?????serviceName???????????????targetNamespace??????????????@WebMethod?????��????????operationName?????????????exclude????????@WebResult?????��?????????name??????????????????@WebParam?????��????????name???????????????? ????????WebService???????????? ????????????@WebService??? ???????????????????????@WebService????????��?????????????????????????endpointInterface=”???????��??”?? ?????????????????????????��?????????��? ???CXF??????WebService ServerFactoryBean?????????????????????????????WebService???????????????????????????? JaxWsServerFactoryBean???????????????????????????????? WebService????????????CXF????????? ??????????????WSDL??????????WSDL???????????? ???soap��?????????????post???????????????soap?????xml?��? ?????????????soap???????????????soap?????xml?��?CXF??Spring?????????WebService web.xml????????��???CXFServlet?????????/ws/*??????????? spring??applicationContext.xml??????��? ?????? ?????????????? ????????????????wsimport?????????????????????????��????????? RPC??????RPC?????????????????????????????????????????????????????????????????????????????????????��?Windows??Linux?????????????????????????????????????????????????????????Android???��????????????????JNI??????????????????��??????????????????????????????????????????RPC???????????????????????????????WebService??????��?????????? ????????? ???????????????????API???????????WebService??WSDL???????????????? ?????????????????????????????????????????? RPC????????????��?????? ??????????????????????????????????????��??????????????��??????��???????? ???RPC??????????Java???????��?????socket???????????????????????????????RPC???? RPC????????123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102package rpc.exporter;import java.io.IOException;import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.lang.reflect.Method;import java.net.InetSocketAddress;import java.net.ServerSocket;import java.net.Socket;import java.util.concurrent.Executor;import java.util.concurrent.Executors;/** * @Company * @author dhs * @date 2017??1??31?? ????7:58:27 * @version 1.0 * @description ????????? */public class RpcExporter &#123; // ???????????? static Executor executor = Executors.newFixedThreadPool(Runtime .getRuntime().availableProcessors()); public static void exporter(String hostName, int port) throws Exception &#123; ServerSocket server = new ServerSocket(); server.bind(new InetSocketAddress(hostName, port)); try &#123; while (true) &#123; executor.execute(new ExecutorTask(server.accept())); &#125; &#125; finally &#123; server.close(); &#125; &#125; // ?????????????????????????????????????? private static class ExecutorTask implements Runnable &#123; Socket client = null; public ExecutorTask(Socket client) &#123; this.client = client; &#125; @Override public void run() &#123; ObjectInputStream input = null; ObjectOutputStream output = null; try &#123; // ???????????socket?��???????????? input = new ObjectInputStream(client.getInputStream()); // ?????????? String interfaceName = input.readUTF(); Class&lt;?&gt; service = Class.forName(interfaceName); System.out.println(interfaceName); // ??????????? String methodName = input.readUTF(); System.out.println(methodName); // ?????????????????? Class&lt;?&gt;[] parameterTypes = (Class&lt;?&gt;[]) input.readObject(); // ??????????????? Object[] arguments = (Object[]) input.readObject(); // ??????????��???? Method method = service.getMethod(methodName, parameterTypes); // ??�ڡ�??????????? Object result = method.invoke(service.newInstance(), arguments); output = new ObjectOutputStream(client.getOutputStream()); output.writeObject(result); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; finally &#123; //???? if (input != null) &#123; try &#123; input.close(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; if (output != null) &#123; try &#123; output.close(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; if (client != null) &#123; try &#123; client.close(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; &#125; &#125; &#125;&#125; 123456789101112package rpc.service;/** * @Company * @author dhs * @date 2017??1??31?? ????7:50:01 * @version 1.0 * @description ??????????? */public interface EchoService &#123; public String echo(String ping);&#125; 12345678910111213141516171819package rpc.service.impl;import rpc.service.EchoService;/** * @Company * @author dhs * @date 2017??1??31?? ????6:59:51 * @version 1.0 * @description ???????????????? */public class EchoServiceImpl implements EchoService &#123; @Override public String echo(String ping) &#123; return ping != null ? ping + "---&gt;I am OK":"I am OK"; &#125; &#125; 12345678910111213141516171819202122232425262728package rpc;import rpc.exporter.RpcExporter;/** * @Company * @author dhs * @date 2017??1??31?? ????10:00:06 * @version 1.0 * @description ????? */public class RpcTest &#123; public static void main(String[] args) &#123; //?????????????? new Thread(new Runnable() &#123; @Override public void run() &#123; try &#123; RpcExporter.exporter("localhost", 8088); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; &#125;).start(); &#125;&#125; RPC????????123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960package rpc.importer;import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.lang.reflect.InvocationHandler;import java.lang.reflect.Method;import java.lang.reflect.Proxy;import java.net.InetSocketAddress;import java.net.Socket;/** * @Company * @author dhs * @date 2017??1??31?? ????9:41:13 * @version 1.0 * @description RPC????? */public class RpcImporter&lt;T&gt; &#123; @SuppressWarnings("unchecked") public T importer(final Class&lt;?&gt; serviceClass, final InetSocketAddress addr) &#123; //????JDK????????????????????????????????????????????????????????????��????? return (T) Proxy.newProxyInstance(serviceClass.getClassLoader(), new Class&lt;?&gt;[] &#123; serviceClass.getInterfaces()[0] &#125;, new InvocationHandler() &#123; @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable &#123; Socket socket = null; ObjectInputStream input = null; ObjectOutputStream output = null; try &#123; socket = new Socket(); //?????????? socket.connect(addr); output = new ObjectOutputStream(socket .getOutputStream()); output.writeUTF(serviceClass.getName()); output.writeUTF(method.getName()); output.writeObject(method.getParameterTypes()); output.writeObject(args); input = new ObjectInputStream(socket .getInputStream()); return input.readObject(); &#125; finally &#123; if (socket != null) &#123; socket.close(); &#125; if (input != null) &#123; input.close(); &#125; if (output != null) &#123; output.close(); &#125; &#125; &#125; &#125;); &#125;&#125; 123456789101112131415161718192021222324package rpc.test;import java.net.InetSocketAddress;import rpc.importer.RpcImporter;import rpc.service.EchoService;import rpc.service.impl.EchoServiceImpl;/** * @Company * @author dhs * @date 2017??1??31?? ????10:10:06 * @version 1.0 * @description ????? */public class RpcTest &#123; public static void main(String[] args) &#123; RpcImporter&lt;EchoService&gt; importer = new RpcImporter&lt;EchoService&gt;(); EchoService echoService = importer.importer(EchoServiceImpl.class, new InetSocketAddress("localhost", 8088)); System.out.println(echoService.echo("Are you OK?")); &#125;&#125; ??????? ??????????????????????????jar?? ?????????????? ??????????????? ?????????????????????????]]></content>
      <categories>
        <category>???</category>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[���ܴ����㶫�ֻ�����]]></title>
    <url>%2F2018%2F10%2F28%2Fthoughts%2F</url>
    <content type="text"><![CDATA[���Ҳμ���2017�����ܴ����㶫�ֻᣬ��ʵ�տ�ʼ��û��ô��̫���������������Ǳ��ŷ���Ҳ�����ɹ��ˣ�����������һ�Ρ��ջ��ܴ󣬶������ջ񲻽���ֻ�Ǽ���֪ʶ���ջ񣬶���˼���ϵ��ջ��� һλ��ѧ��������������˹�������ϯ��ѧ�ҡ���ѧ�ң���ǰ���ú�ңԶ��Ҳ��֪����ѧ�ҵ�����ɶģ�����ǲ�����Сʱ����ʦ˵�ģ���ѧ�Ҷ��ܹŰ塢�ܰ�����ֻ��һ���ӵ���ʵ�顣������������ѧ�ҽ��꣬�о�����ʦ�������ˡ�������������ET���д��Ե�������ʵ�����������ݽ�̸���У�˲����һ�����崺���С��������ɣ�˼·�߼��������ܣ����ֲ�ȱ����������˼��������ǧ��ǰ�����׵µ����ԣ�������ʧ�ĳ��У���������˹��¥���ųǣ������ɺ��ϵĵ�һ�������������ɼ��ɲ�ʿ���Ķ�֮�ࡢ˼��֮�˲���߸��������ж��ڿ�ѧ�ҵĶ��塣���������е㸡�����棬��������Ҫ���߶�λ��ѡ�������ѡ����ɲ�ʿ�������ڳ��������������о���ʵ��ʱ���ֲ��ò������˿�ѧ�Ҷ���������׷���������е��Ƿ��ƶ�����ʿ�ڷ���ʱ���ǿ��ֵġ����ĵġ�����˼���𣬳���ʱ��ʦ��˵��һ�仰�����Եÿ��п෽Ϊ�����ˡ���ֱ�����죬���в��������˴𰸡���ʦ��˵�Ǿ仰�ĳ�������������Ҫ���ܳ��������Ŀ������ǵ��������Ǿ仰֮����һֱ���ɻ������ĵס���������������ô�࣬���һ�Ҫ����ô���꣬�������������Ǻ��ڣ�����̤����������ѧϰ���п�����֪ʶ���ѷ������������ס���ʿ�Ŀ��֣���ʽ������֪�����ƶ���̽��ȥ������֮�󡣶��ң���С����Ϊ�Լ������ȱ��˲���ഺ����ʱ��δ�������������ӡ��Լ�������һ�������µĹ��䣬�ɳ�����Ŀǰ�������켣�����ң����������ɲ�ʿһϯ������ǰ�����Ļ����������ա� һ�ΰ佱�������ش����ݾ����İ佱������������Ŀ�й�ע�ѾõĶ������������������Ƽ���һ�ΰ佱�������ܹ��μӵĿ϶����Ǹ��֣��ܹ���ʤ�Ŀ϶����Ƕ������֡����ֶ��������ľ���������ȼ���������е������������ԣ�Ϊ�����ĵ�������ÿ��ÿҹ��ѧϰ����һ�����ֵ����顣�����Ҳ�������������]]></content>
      <categories>
        <category>����</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[��������ģʽ]]></title>
    <url>%2F2018%2F10%2F28%2Fsingle-design%2F</url>
    <content type="text"><![CDATA[Java����23������ģʽ������ģʽ��������������Ч�Ľ�����������������ģʽ������һ�������ڴ���ֻ����һ��ʵ������Ӧ�ó������£� �ڶ��߳�֮�䣬ֻ��ʼ��һ�ε���Դ����socket��Դ��servlet�����ȡ� �����������ռ�ʹ��ȫ�ֱ�����������Դ�� ��ʡ�����Ĵ���ʱ���ȵȡ� ʵ�ֲ��� ��ֹ������Ӧ�ó�����ͨ������������������˽�л����캯���� �ڱ������洴�������� Ϊ������Ӧ�ó����ܹ����ʱ�����������Ҫ�������ṩһ�ַ��ʷ�ʽ�� ����ʽ1234567891011class Single &#123; private static Single s = new Single(); private Single() &#123; &#125; public static Single getInstance() &#123; return s; &#125;&#125; ��̬��Ա���������ļ��ض������ء������ڼ��ؽ��ڴ�ʱ�򣬾��Ѿ���ʼ��һ���������׳ƣ�����ʽ��ͨ��getInstance()���ɻ�ȡ�ö��󣬲�ʹ�øö����� ����ʽ123456789101112131415161718class Single &#123; private static Single s = null; private Single() &#123; &#125; public static Single getInstance() &#123; if (s == null) &#123; synchronized (Single.class) &#123; if (s == null) &#123; s = new Single(); &#125; &#125; &#125; return s; &#125;&#125; ��̬��Ա���������ļ��ض������ء������ڼ��ؽ��ڴ�ʱ�򣬶��󻹲����ڡ�ͨ��getInstance()��ȡ�ö�����ʱ���Ż���ʼ������ô��ʱ�ͻ������̰߳�ȫ���⡣������Ҫ��ȷһ�㣺�̰߳�ȫ���⣺ֻ����дû�и����⣬�ж���д���и���������Ҳ�Ƕ���ʽΪʲôû���̰߳�ȫ������ԭ���� synchronized������ʹ�õ������Ǹ������ֽ�����������getInstance()���κεط����ã����ᷢ�����⡣getInstance()������������if�жϣ�Ϊʲô��ֱ��ʹ�������Ĵ����أ�123456public static Single getInstance() &#123; synchronized (Single.class) &#123; s = new Single(); &#125; return s;&#125; ���߳���ÿһ���̵߳���getInstance()���ᷢ�����⡣ ���е�һ���߳̽��뵽ͬ�������鴴��һ��������ʱ�򣬸��ߵ�return�������Ѿ��������ڶ����߳̽��뵽ͬ�������飬��ʱ�ֻᴴ��һ�����������ڴ��оͻ���������������������˫��if��ͬ��Ч�ʽϸ�һ�㡣Java�е�ʾ��Runtime�࣬����ʽSystem�࣬����ʽ]]></content>
      <categories>
        <category>����ģʽ</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[redis���ܽ����ع�]]></title>
    <url>%2F2018%2F10%2F28%2Fredis-summary%2F</url>
    <content type="text"><![CDATA[��ϵ�����ݿ⣨Mysql��Oracle���ŵ� ����֮���й�ϵ���������ݵĲ���ʱ�ǳ����㡣 ��������������֤�����ݵ������ԡ� ȱ�� ��Ϊ���ݺ�����֮���й�ϵ�ģ������ֹ�ϵ���ɵײ������㷨����֤�� ���ݵĴ洢��ʹ�ã���������ʱIO����Դ���Ľϴ��� �����㷨������ϵͳ�������ٶȣ����һ�����ϵͳ��Դ�� �ں������ݵ���ɾ�Ĳ�ʱ���Ե�����Ϊ�����ܿ��ܻ�崻��� �ں������ݻ����¶����ݱ�����ά������չ��Ҳ����������Ϊ�� ���磺 update product set cname = ���ֻ����롯;//�޸��������� ����Ʒ����cname�ֶΣ���varchar(64),char(100);//���ı��ֶ������ǹ�ϵ�����ݿ⣨NoSQL��No���ǵ���no����not only����д������֮����Ϊ��������ϵ�����ݿ⡣������Ұ�ġ��ŵ� �������ݵ���ɾ�Ĳ飬�ǳ����� �������ݵ�ά���ǳ����� ȱ�� ����������֮��û�й�ϵ�����Բ���һĿ��Ȼ û��ǿ�������񣬱�֤���ݵ������Ͱ�ȫ redis����key-value�ṹ�����ݣ�����Java�е�Map��Ĭ��ռ��6379�˿ڡ�����5���������͡�string��hash��list��set��������set���ϡ� redis��Linux�еİ�װredis��C���Կ�������������gcc������������Linux�����Ƿ��а�װgcc������ʾ”bash: gcc: command not found”������Ҫ��װgcc���������yum install gcc-c++������ʾ�Ƿ����أ�����y��������ʾ�Ƿ���װ������y�� ��redis��ѹ���ļ��ϴ���Linux����������ѹ���ļ�Ŀ¼�����б��� ִ�а�װ ���������ļ�����װĿ¼��redis������Ҫһ�������ļ��������޸Ķ˿ںŵ����á�����û�������ļ�redisҲ�������������õ���Ĭ�����ã������޸Ķ˿ںŵ����á� bin�ļ����µ��ļ� redis-benchmark —-���ܲ��Թ��� redis-check-aof —-AOF�ļ��޸����� redis-check-dump —-RDB�ļ����鹤�ߣ����ճ־û��ļ��� redis-cli —-�����пͻ��� redis-server —-redis�������������� ǰ������������������ʽ��Ӳ�ˣ��޷����м�Ⱥ���� ����redis��������ͼ�������м������� -h ip��ַ -p �˿ڽ���ָ������ �������������޸�redis.conf�����ļ���daemonizeΪyes���������޷������޸�����supervised yesΪsupervised no������ͼ���к��������� redis��5���������� String �ַ���������redis����Ϊ���������õ����ݴ洢���ͣ�����redis���Ƕ����ư�ȫ����value�����������ɵ����ݳ�����512M�� �����ư�ȫ�����ݰ�ȫ��û�й�ϵ�ġ� ��ϵ�����ݿ⣬�������ǲ���ȫ�ġ����������붪ʧ���ݡ�������Ƶ���� ��MySQLΪ��������ָ�����ݵĴ洢���ַ��������������õ����е�����ʱ���ܿ�����Ϊ������������һ�£����³������ݵ����롣 redisֱ�Ӵ洢�Ķ��������ݣ������������ٽ��б��������������õ�����12345678set key value����ֵ���޸Ĳ�����key��ͬ�򸲸ǣ���ֵ���Ǿ�ֵ��del key��ɾ���ɹ�����1��integer����key�����ڷ���0��integer��getset key value����ȡ����ֵincr key������1���������򱨴�decr key���ݼ�1���������򱨴�append key value������StringBuffer��appendincrby key number������ָ������ֵdecrby key number���ݼ�ָ������ֵ hashhash���Ϳ��Կ����Ǿ���String key��String value��map�������ǳ��ʺ��ڴ洢ֵ��������Ϣ��ռ�õĴ��̿ռ伫�١���������ʽ��{uname:”zhangsna”,age:”19”,sex:”man”} ���õ�����1234567hset key field value����ֵ������Ϊkey��ĳ���ֶθ�ֵ��hset key field value [field2 value2 ...]��Ϊkey�Ķ����ֶν��и�ֵ��hmget key field1 field2 ...����ȡkey�ж���field��ֵhgetall key����ȡkey�����е�filed-valuedel key��ɾ������hashhkeys key����ȡkey���е�filedhvals key����ȡkey���е�value list�����ṹ��redis�Ĳ����У������Ĳ������ǽ���Ԫ�ص���ɾ������ʹ�û������������ݼ��ϵ���ɾ���������С����������ṹ���ɲ鿴��Java��List��Set��Map������һ�� ���õ�����1234567lpush key value [value2 ...]����ֵ�������࿪ʼ���ӣ�ÿ�����Ӷ��Ǵ����࿪ʼ��rpush key value [value2 ...]����ֵ�����Ҳ࿪ʼ���ӣ�ÿ�����Ӷ��Ǵ��Ҳ࿪ʼ��lrange key start end����ȡkey�����д�start��end��Ԫ��ֵ����ͷ�ֺ�β����startΪ0��endΪ-1ʱ����ʾȡ����������Ԫ��ֵ��lpop key�������࿪ʼɾ��rpop key�����Ҳ࿪ʼɾ��llen key������ָ����key������������Ԫ������rpoplpush source destination���������е�β��Ԫ�ص��������ӵ�ͷ����ѭ���� set��redis�У����Խ�set���Ϳ���Ϊû���������ַ����ϡ�set�ɰ���������Ԫ��������4294967295��set�����в����������ظ���Ԫ�أ����ڷ��������ɶ���set֮���ľۺϼ���������Ч�ʼ��ߡ� ���õ�����1234567891011sadd key value [value2 ...]����ֵsmembers key����ȡset����key�����еĳ�Աsismember key member���жϲ�����ָ���ĳ�Ա�Ƿ��ڸ�set�У�����1��ʾ���ڡ�0��ʾ������srem key member [member2 ...]��ɾ��set��ָ���ĳ�Աsdiff key1 key2 ...������key1��key2�������ĳ�Ա��������key��˳���йء����زsinter key1 key2 ...�����ؽ���sunion key1 key2 ...�����ز���scard key����ȡset����key�г�Ա������srandmember key����������set�е�һ����Աsdiffstore destination key1 key2 ...�������صĲ��Ա�洢��destination��sunionstore destination key1 key2 ...�������صĲ��Ա�洢��destination�� ����set���򣬲��ظ����ڼ���Ԫ���Ϸ���������ÿ��Ԫ�ض���Ҫ�ֶ�����һ�������� ���õ�����12345678910zadd key score member score2 member ...����ֵzscore key member������ָ����Ա�ķ���zrange key start end [withscores]����ȡ�����нǱ�Ϊstart-end�ĳ�Ա��������С����zrevrange key start end [withscores]����ȡ�����нǱ�Ϊstart-end�ĳ�Ա�������ɴ���Сzrem key member [member2 ...]���Ƴ�������ָ���ĳ�Աzremrangebyrank key start stop������������Χɾ��Ԫ��zremrangebyscore key min max�����շ�����Χɾ��Ԫ��zcount key min max����ȡ������min-max֮���ĳ�Աzrank key member�����س�Ա�ڼ�����������������С����zrevrank key member�����س�Ա�ڼ����е������������Ӵ���С ͨ������1234567891011keys *��*�ű�ʾ0�������������ַ�keys ?��?�ű�ʾ1���ַ������⣩del key1 key2 ...��ɾ����Ӧ��keyexists key���ж�key�Ƿ����ڣ�1��ʾ���ڣ�0��ʾ������rename key newkey��Ϊkey������type key����ȡָ��key��ֵ����expire key������key������ʱ��ttl key���鿴key��ʣ�ĳ�ʱʱ�䡣����û�����ó�ʱ������-1����������-2����ʾ��ʱ�����ڡ�quit���˳��ͻ���dbsize�����ص�ǰ���ݿ���key����Ŀinfo���鿴redis����Ϣ ��Ϣ�����뷢��subscribe channel������Ƶ��psubscribe channel*����������Ƶ����*��ͨ������������channel���ֵ�ֵΪ��ͷ��Ƶ��publish channel content����ָ����Ƶ���з�����Ϣ �����ݿ�redisĬ����16�����ݿ⣬���ƴ�0��1��2…15����redis���������������ݲ�����Ĭ����0�����ݿ��ϲ����ġ�����config get databases�ɲ鿴���ݵĸ��������ݿ������ݿ�֮�䣬�ǲ��ܹ�����ֵ�ԡ�����select ���ݿ������л����ݿ⡣move key dbname������ǰ����key��ֲ��ָ�������ݿ��С�flushdb�����յ�ǰ���ݿ⡣flushall������redis�����������ݡ� ������ϵ�����ݿ�����������Ϊ�˱�֤���ݵ������ԡ���֤���ݰ�ȫ���ɲ鿴����ϵ�����ݿ���������һ�ġ�redis����������Ϊ�˽���redis����������ִ�С�multi���������������ڱ��������Ŀ�ʼ������ִ�е�������������������С�exec���ύ������ִ������������discard�������ع�����ִ������������ redis�����ֳ־û�����RDBredisĬ�ϵĳ־û����ơ���װĿ¼�µ�dump.rdb�ļ����൱���տ��գ���������һ��״̬���ŵ㣺���ձ����ٶȼ��죬��ԭ�����ٶȼ��졣�������ѱ��ݡ�ȱ�㣺С�ڴ��������ʺ�ʹ�á�RDB���ƣ�����Ҫ���ͻ��տ��գ���ʱ��������������ռ��һ����ϵͳ��Դ��ͻȻ�ģ����ܿ����ڴ治��ֱ��崻����������ڴ������������ر�ʱ���տ��ա�./bin/redis-cli shutdownkey����һ���������տ��ա� redis.conf�����ã��ڶ�����ʱ�䣨�룩���������Ƿ����仯��key�ĸ������ﵽ��������ʱ�䵽�����տ��ա� AOFʹ����־���ܱ������ݲ�����Ĭ��AOF�����ǹرյġ�AOF������ֻ�ᱣ�浼�¶�Ӧkey�����仯�����䣨����ɾ���ģ��������������䲻�����ݡ�һ��key�ڲ����п��ܳ���10�εı仯����key������value���ˣ���־�ͻ��ж�Ӧ��ÿ�η����仯�����䡣�ŵ㣺����ռ�ü��������ڴ���Դ��ȱ�㣺��־�ļ����ر��󣬲����������ѻָ������ݻָ�Ч��ԶԶ����RDB���������ڴ���С�ļ������� 1234redis.conf�ļ��а�appendonly no�޸�Ϊappendonly yes������AOF����appendfsync always --ÿ�޸�ͬ����ֻҪ��key�仯���䣬�ͽ���AOF�������ݡ��Ƚϰ�ȫ���˷�Ч��appendfsync everysec --ÿ������һ��AOF�������ݡ���ȫ�Եͣ���ʡϵͳ��Դ��Ĭ�ϻ��ƣ�appendfsync no --��ͬ�����������κγ־û�����������ȫ Java�з���redis���� ʾ������123456789101112131415161718192021222324252627282930313233343536373839404142434445package redis;import redis.clients.jedis.Jedis;import redis.clients.jedis.JedisPool;import redis.clients.jedis.JedisPoolConfig;/** * @description * @version 1.0,2017��8��19�� ����6:11:25,Denghs * @remark */public class TestJedisConnection &#123; public static void main(String[] args) &#123; poolConnection(); &#125; /** * ��ʵ������redis���ݿ� */ public static void instanceConnection()&#123; Jedis jedis = new Jedis("192.168.17.128", 6379); //jedis.set("name", "����"); System.out.println(jedis.get("name")); &#125; /** * �����Ӽ��� */ public static void poolConnection()&#123; //���ӳ����� JedisPoolConfig config = new JedisPoolConfig(); //������������ config.setMaxTotal(50); //�������������� config.setMaxIdle(10); //Jedis���ӳ� JedisPool jedisPool = new JedisPool(config, "192.168.17.128", 6379); //��ȡ������Դ Jedis jedis = jedisPool.getResource(); System.out.println(jedis.get("name")); //�ͷ���Դ jedis.close(); &#125;&#125;]]></content>
      <categories>
        <category>NOSQL</category>
        <category>Redis</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[�����޸ĵĲ�����¼ OperateLog]]></title>
    <url>%2F2018%2F10%2F28%2Foperate-log%2F</url>
    <content type="text"><![CDATA[�ڱ�����������ʱ�������޸ġ���¼ס���޸ĵ��ֶΣ���ֵ����ֵ�� ʵ��˼· ���÷���+ע�⡣д��һ�������ࡣ��ǰ�˰ѱ������ݴ�ǰ̨���뵽��̨�󡣰�request������ԭʼ��¼�����������бȽϡ� �������еķ������÷��䣬��ȡԭʼ�����ϵ��ֶε�ֵ���ٸ�request�е���������ֵ���бȽϡ���ԭʼ�������У�ʹ��ע�⣬����Ҫ���бȽϵ��ֶΣ�����ע�⣬�������ֶ��������� �������еıȽ�ֻ�ܶԻ����������͡������������͵İ�װ���͡�Date���ͽ��бȽϡ����顢���ϡ����������ǲ������бȽϵġ�����Ƿȱ�ĵط�����ӭ���䡣 ʾ��ͼ������ѯ����ģ����Ŀ�в�ѯ���ݣ� �������ݣ���ģ����Ŀ�б����������ݣ� �޸����ݣ���ģ����Ŀ�б����޸����ݣ��޸���4������޸ģ��ύ����̨ �޸����ݵĲ�����¼ ����һ�� ��ʾ������¼ ����ʾ��ͼ�������ϼ���ע�⣬ָ�����Ե����������������еĴ��룬���Բ�������˼·ȥ��չ�� �ܽ� �����ѷŵ��ֿ��С�https://github.com/denghuashan/OperateLog ��ӭָ����������չ��]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Java������ʼ���Ĺ���]]></title>
    <url>%2F2018%2F10%2F28%2Fobjectinit%2F</url>
    <content type="text"><![CDATA[��ѧJava��ʼ����һֱ���εļ�ס��һ�仰��”��������������������·�����߶�Զ��”����Ȼ��ʱ���Ǻ����ס������ҵ���һֱ�������������ϰһ��Java������ʼ���Ĺ��̣������������Ե�֪ʶ����ͼ�ĵķ�ʽȥ���������� һ���ܼ򵥵�Java��123456789101112131415161718192021222324252627282930313233343536373839404142434445464748public class Student &#123; private String name = "haha"; private int age; private static String country = "cn"; //�޲ι��캯�� Student() &#123; &#125; //�вι��캯�� Student(String name, int age) &#123; System.out.println("�вι��캯����" + name + ".." + age); this.name = name; this.age = age; &#125; //���������� &#123; System.out.println("���������飺" + name + ".." + age); &#125; //��̬������ static &#123; System.out.println("��̬�����飺static.."); &#125; public void setName(String name) &#123; this.name = name; &#125; public void speak() &#123; System.out.println(this.name + "..." + this.age); &#125; public void listen() &#123; speak(); &#125; public static void showCountry() &#123; System.out.println("country=" + country); method(); &#125; public static void method() &#123; System.out.println("method run"); &#125;&#125; Student s = new Student(“zhangsan”, 19);��ͼ�У�������ʹ�õ�ʱ�򣬸þ仰������ʲô���飿��̸ֻ���ڴ��еĶѡ�ջ���򣬲��漰���������� ���ֽ��� ����������ȡ�����仰��ʱ�������ȿ��Ⱥŵ����ߡ�Student s��s��һ������������������ջ�ڴ��п��ٿռ䣬����s���������� ����ȡ���Ⱥŵ��ұ�new Student(“zhangsan”, 19)����Ϊ�õ���Student�࣬������������Student.java�ļ�������Student.class�ļ����׳��ֽ����ļ���һ����ֻ��һ���ֽ����ļ���������������.java�ļ������ĸ�� ����Student���������ֽ�����Ӳ�̼��ؽ��ڴ档������һ�죬JVM�е���������Classloader�� �����о�̬�����飬�ͻ��������ļ��ض�ִ�С���̬��Ա����̬�����뾲̬���ԣ�רҵ˵����������������ͨ����Ҳ���������ļ��ض������ء� �ڶ��ڴ��п��ٿռ䣬�������ڴ���ַ�����ڴ���ַ��ʮ���������� �ڶ��ڴ��н��������������ԣ���ͬʱ���������Խ���Ĭ�ϳ�ʼ���� �Զ������Խ�����ʾ��ʼ���� ִ�й��������飬�����ж������г�ʼ���� ִ�ж�Ӧ�Ĺ��캯�����Զ������г�ʼ���� ���ڴ���ַ����ջ�ڴ��е�s��������ջ�ڴ��еı���ָ�����ڴ��еı�����������Java�е�ָ�룩 ��̬��Ա�����ڷ����������ڴ���ֻ��һ�ݡ��������ĵļ��ض������أ������ڶ������ڣ������еĶ��������������Ա�����ֱ�ӵ��ã�Ҳ���Ա��������á�showCountry()�����е���method()������ֱ��ʡ���ˣ�Student.��ͬ���ģ�listen()�����е���speak()������ֱ��ʡ���ˣ�this.�� �������������д��������ظ�֪��лл��������ʼ���Ĺ���Զ�ȱ������������������ĸ��ӡ�Classloader���ڴ��ռ��������ԡ��ڴ�ģ�͵�һϵ�����⡣����ֻ�������֣��򵥲���ǳ��ȥ��������ôһ�����̡����ڸ��õ����������䡣��JVM����Ȥ�ģ�����Ĥ�ݡ���������Java��������һ�顣]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[MySQL�Ĵ洢����]]></title>
    <url>%2F2018%2F10%2F28%2Fmysql-store-engine%2F</url>
    <content type="text"><![CDATA[���ݿ��洢���������ݿ��ײ�������������ͬ�Ĵ洢�����ṩ��ͬ�Ĵ洢���ơ��������ɡ�����ˮƽ�ȹ��ܡ�MySQL�ĺ��ľ��Ǵ洢���档 �鿴MySQL֧�ֵ�����������MySQL�У�����Ҫ��������������ʹ��ͬһ�ִ洢���棬���Ծ���Ҫ�󣬿��Զ�ÿһ����ʹ�ò�ͬ�Ĵ洢���档MySQL5.6֧�ֵĴ洢�����У�InnoDB��MyISAM��Memory��Merge��Archive��Federated��CSV��BLACKHOLE�ȡ�����ʹ��SHOW ENGINES�����鿴ϵͳ��֧�ֵ��������͡�Support�е�ֵ��ʾĳ�������Ƿ���ʹ�á�DEFAULTΪĬ�ϴ洢���档 InnoDB�洢����MySQL5.5.5֮����Ĭ�ϵĴ洢���档֧��������ȫ����ACID����֧������������������Ҫ�����У� InnoDB��MySQL�ṩ�˾����ύ���ع��ͱ����ָ�������������ȫ��ACID���ݣ��洢���档InnoDB�������м�����Ҳ��SELECT�������ṩһ������Oracle�ķ�����������SQL��ѯ�У����Խ�InnoDB���͵ı�������MySQL�ı������ͻ��������� InnoDB��Ϊ�����޴��������������������ơ�����CPUЧ�ʿ������κ��������ڴ��̵Ĺ�ϵ���ݿ�����������ƥ�еġ� InnoDB�洢������ȫ��MySQL���������ϣ�InnoDB�洢����Ϊ�����ڴ��л������ݺ�������ά�����Լ��Ļ�������InnoDB�����ı���������һ���߼����ռ��У����ռ����԰��������ļ��� InnoDB֧������������Լ�����洢���е�����ʱ��ÿ�ű��Ĵ洢���ǰ�����˳�����ţ�����û����ʾָ��������InnoDB��Ϊÿһ������һ�����ص�6���ֽڵ�ROWID�����Դ���Ϊ����������InnoDB�������������ݿ��������ԡ������ٲ���InnoDB������ MyISAM�洢����MyISAM����ISAM�洢���棬������������չ��MyISAMӵ�нϸߵĲ��롢��ѯ�ٶȣ�����֧����������MySQL5.5.5֮ǰ�İ汾�У�MyISAM��Ĭ�ϴ洢���档��Ҫ�����У� ���ļ�����63λ�ļ����ȣ���֧�ִ��ļ����ļ�ϵͳ�Ͳ���ϵͳ�ϱ�֧�֡� ����ɾ���͸��¼�������������ʹ�õ�ʱ�򣬶�̬�ߴ����в���������Ƭ����Ҫͨ���ϲ����ڱ�ɾ���Ŀ顣����һ���鱻ɾ��������չ��һ�����Զ����ɡ� ÿ��MyISAM��������������64��������ͨ�����±������ı䡣ÿ������������������16���� �����ļ�������1000�ֽڣ�����ͨ���������ı䡣�Լ����ȳ���250�ֽڵ�������һ������1024�ֽڵļ��������ϡ� BLOB��TEXT�п��Ա������� NULLֵ�����������������У�����ֵռÿ������0~1���ֽڡ� �������ּ�ֵ�Ը��ֽ����ȱ��洢��������һ�����ߵ�����ѹ���� ÿ��MyISAM���͵ı�����һ��AUTO_INCREMENT���ڲ��У���INSERT��UPDATEʱ�����б�����ͬʱ��ˢ�¡� ���԰������ļ��������ļ����ڲ�ͬĿ¼�� ÿ���ַ��п����в�ͬ���ַ����� ��VARCHAR�ı����Թ̶�����̬��¼���ȡ� VARCHAR��CHAR�п��Զ���64KB�� Memory�洢����Memory�洢���潫���е����ݣ��洢���ڴ��С�Ϊ��ѯ�����������������ṩ���ٷ��ʡ���Ҫ�����У� ÿһ���������ж���32��������ÿ������16�У��Լ�500�ֽڵ����������ȡ� ִ�й�ϣ��Hash��������BTree������ ��һ��Memory���п����з�Ψһ���� ʹ��һ���̶��ļ�¼���ȸ�ʽ�� ��֧��BLOB��TEXT�С� ֧��AUTO_INCREMENT�С����Զ԰���NULLֵ���н��������� �����ݱ������ڴ��С� ��������Ҫ��������ʱ��Ҫ�ͷű���ʹ�õ��ڴ棬Ӧ��ִ��DELETE FROM��TRAUNCATE TABLE����ɾ����������DROP TABLE���������ﲻ����DELETE��TRAUNCATE��DROP֮���������� �洢������ѡ�� �������ݱ��洢�����鿴���ݱ��洢���棬ʹ��SHOW CREATE TABLE &lt;����\G&gt;���������鿴������\G���ǲ�����ʹ��������ֱ�ۣ����ڲ鿴���������ݱ��洢���棬ʹ��ALTER TABLE &lt;����&gt; ENGINE=&lt;�洢������&gt;; ע��MySQL������Լ����������֤���ݵĲ��������ԣ�������֮����Ҫ����������ȴָ���˲�ͬ�Ĵ洢���棬��Щ��֮���ǲ��ܴ�������Լ���ġ�]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[MySQL�������Ż�]]></title>
    <url>%2F2018%2F10%2F28%2Fmysql-optimize%2F</url>
    <content type="text"><![CDATA[MySQL�������Ż�������ѯ�ٶ��Ż��������ٶ��Ż���MySQL�������Ż��ȡ�������SQL��ѯ���������Կ���MySQL������ѯ��־��ͨ������ѯ��־�������ҳ�ִ��ʱ���ϳ���ִ��Ч�ʽϵ͵����䣬Ȼ�������Ż��� EXPLAIN����ͨ��EXPLAIN�����Բ�ѯ�������з������ҳ���ѯ������ִ��ƿ������һ����΢���ܹ�EXPLAIN���䣬��������ϸ����һ�¡������﷨��EXPLAIN SELECT select_options id��SELECTʶ������SELECT�Ĳ�ѯ���кš� select_type��SELECT���������͡�ȡֵ˵�����£�SIMPLE��ʾ�򵥲�ѯ�����������Ӳ�ѯ���Ӳ�ѯ�� PRIMARY��ʾ����ѯ���������������Ĳ�ѯ���䡣 UNION��ʾ���Ӳ�ѯ�ĵڶ����������Ĳ�ѯ���䡣 DEPENDENT UNION��ʾ���Ӳ�ѯ�еĵڶ�����������SELECT���䣬ȡ���������Ĳ�ѯ�� UNION RESULT��ʾ���Ӳ�ѯ�Ľ����� SUBQUERY��ʾ�Ӳ�ѯ�еĵ�һ��SELECT���䡣 DERIVED��ʾ��������SELECT�е��Ӳ�ѯ�� table����ʾ��ѯ�ı� type����ʾ�����������͡�ȡֵ˵�����£������������͵���������������system���ñ�ʾ����һ�е�ϵͳ���� const�����ݱ�����ֻ��һ��ƥ���У������ڲ�ѯ��ʼʱ����ȡ����ѯ�ٶȺܿ죬��Ϊֻ��ȡһ�Ρ� 123ʾ��SQL��SELECT * FROM tb_name WHERE primary_key=?;SELECT * FROM tb_name WHERE primary_key_part1=? AND primary_key_part2=?; eq_ref������ÿ������ǰ���ı��������ϣ��Ӹñ��ж�ȡһ�С���������ʹ��”=”�������Ƚϴ��������С�123ʾ��SQL��SELECT * FROM ref_tb,other_tb WHERE ref_tb.key_column=other_tb.column;SELECT * FROM ref_tb,other_tb WHERE ref_tb.key_column_part1=other_tb.column AND ref_tb.key_column_part2=?; ref����������ǰ���ı������������ϣ����Ӹñ��ж�ȡ����ƥ�����С���������ʹ��”=”��”&lt;=&gt;”���������������С�1234ʾ��SQL��SELECT * FROM ref_tb WHERE key_column=expr;SELECT * FROM ref_tb,other_tb WHERE ref_tb.key_column=other_tb.column;SELECT * FROM ref_tb,other_tb WHERE ref_tb.key_column_part1=other_tb.column AND ref_tb.key_column_part2=?; ref_or_null����ͬref��ר����������NULLֵ���С�12ʾ��SQL��SELECT * FROM ref_tb WHERE key_column=expr OR key_column IS NULL; index_merge��ʹ���������ϲ��Ż�������key���а�����ʹ�õ������嵥��unique_subquery���������Һ�����������ȫ�滻�Ӳ�ѯ������������ʽ��IN�Ӳ�ѯ1value IN(SELECT primary_key FROM tb WHERE some_expr) index_subquery�������滻IN�Ӳ�ѯ��ֻ�ʺ�������ʽ���Ӳ�ѯ�еķ�Ψһ������1value IN(SELECT key_column FROM tb WHERE some_expr) range��ֻ����������Χ���У�ʹ��һ��������ѡ���С�key����ʾʹ�����ĸ���������ʹ��”=”��”&lt;&gt;”��”&gt;”��”&gt;=”��”&lt;”��”&lt;=”��”IS NULL”��”&lt;=&gt;”��”BETWEEN”��”IN”���������ó����ȽϹؼ�����ʱ������Ϊrange��index��ֻɨ����������ALL������ǰ���ı������������ϣ�����������ȫ��ɨ�衣 possible_keys����ʹ���ĸ������ڸñ����ҵ��С�NULL��û�����ص������� key��ʵ�ʲ�ѯʱʹ�õ���������NULL��û��ѡ�����С� key_len�������Զ����ֽڼ����ĳ��ȡ���ֵԽС����ʾԽ�졣 ref��ʹ���ĸ��л�����������һ������ѯ��¼�� rows���ڱ��н��в�ѯʱ���������������� Extra��������ѯʱ����ϸ��Ϣ�� ���ƺ�������������ͼ��û����f_name�ֶ����������������Է���ִ����ȫ������ѯ��f_name�ֶ�������������ѡ���ԡ�ѡ����Խ�ߵ�������ֵԽ���������������������� ����δ�����õ��������� ��ʹ��LIKE�ؼ��ֵĲ�ѯ�����У�����ƥ���ַ����ĵ�һ���ַ�Ϊ”%”�����������������á�ֻ��”%”���ڵ�һ��λ�ã������Ż������á� ʹ�ö���������Ҳ����������������ѭ����ǰ׺���ϡ�������f_id��f_name��f_price�����ֶδ���������������ô�ڲ�ѯ��������f_id��f_name��f_price��f_id��f_name��f_idʱ��ʹ�õ���������f_name��f_price���������������������á� ��ѯ�����Ĳ�ѯ������ֻ��OR�ؼ��֣���ORǰ�������������е��ж�������ʱ����ѯ�Ż�ʹ�õ������� �Ӳ�ѯ˵���Ӳ�ѯ��Ȼ����ʹ��ѯ�����������ִ��Ч�ʲ��ߡ�������ΪMySQL��ִ���Ӳ�ѯʱ����Ϊ�ڲ���ѯ�����Ĳ�ѯ��������һ����ʱ����Ȼ��������ѯ��������ʱ���в�ѯ��¼����ѯ���Ϻ����ٳ�����Щ��ʱ��������ʹ�����Ӳ�ѯ�������Ӳ�ѯ�����Ӳ�ѯ����Ҫ������ʱ����SELECT�����б���ʹ��*��ͨ���������ݿ��ڽ����Ĺ����У��Ὣ*������ת�������е�����������������ͨ����ѯ�����ֵ����ɵġ���ζ�źķѸ�����ʱ�䡣 ���ݿ��Ľṹ�Ż������ֶν϶��ı���������Щ�ֶε�ʹ��Ƶ�ʺܵͣ����Խ���Щ�ֶη��������γ��µı��� ��ʽ ��ʽ��Ϊ�������ݵĴ洢���Ż����������ݵĴ洢�󣬷����ܹ�ͨ����ϵѰ�ҳ��������ݣ����������ظ��洢���ռ�Ŀ����Ϊ�˼������ݵ����ࡣ��ʽ��һ�ֲַ��ṹ�Ĺ淶����Ϊ���㡣ÿһ�㶼����һ�������ϸ�����Ҫ������һ�㷶ʽ��ǰ����������һ�㷶ʽ�� ���㷶ʽ��1NF��2NF��3NF��4NF��5NF��6NF MySQL���ڹ�ϵ�����ݿ⣬�пռ��ϵ��˷ѣ��䱾��Ҳ�������ڽ�ʡ�洢�ռ䣬�뷶ʽ�����������ⲻı���ϣ����������ݿ���ʱ�򣬻����÷�ʽ��ָ�����ƣ�������ǿ�ƹ淶���������ݿⲻ����Ҫ�����ռ����⣬��Ҫ��֤Ч�����⡣��ʽֻΪ�����ռ����⣬�������ݿ��������ֲ�����ȫ���շ�ʽ��Ҫ��ʵ�֡�һ�������£�����3NF���ɡ� 1NF�������Ʊ��洢���ݵ�ʱ���������������Ƶ��ֶδ洢�����ݣ���ȡ����ʹ��֮ǰ������Ҫ�����Ĵ��������֣���ô�ñ������Ʋ�������һ��ʽ����һ��ʽҪ���ֶε����ݾ���ԭ���ԣ������ٷ֡� 2NF�������ݱ����ƵĹ����У������и������������ֶ����������ұ������ֶβ�����������������ȷ�����������������е�ĳ���ֶΣ������Ĳ��֣����������ֶ����������Ĳ��֣���֮Ϊ�����������ڶ���ʽ����Ҫ�����������Ʋ��������ֲ��������� 3NF�������Ͻ���Ӧ��һ�ű��е������ֶζ�ֱ�������������߼���������������ҵ���������������������д���һ���ֶΣ�����ֱ����������������ͨ��ĳ���������ֶ�����������ʵ�����������������ֲ���ֱ���������������������������ֶε�������ϵ��֮Ϊ����������������ʽ����Ҫ�����������������⡣ ���淶���������Ʊ���ʱ��������һ�ű����м����ֶ�����Ҫ�������ı���ȥ��ȡ��Ϣ�������Ͻ�����ȷ���Ի�ȡ����Ҫ�����ݣ�����Ч�ʵ�һ�㡣��ʱ������������ĳЩ���У���ȥ�������������������߼�������������ֱ�ӱ�����Ҫ��������Ϣ������һ�����ڲ�ѯ����ʱ��һ�ű�����ֱ���ṩ���ݣ�������Ҫ������ѯ��Ч�ʵͣ������ǻᵼ�������������ӡ�ͬʱ���豣֤���ݵ�һ���ԡ� �����Ż�MySQL���ݿ������Ż������Ͳ�˵�ˡ������ص㲻����һ�飬�����˽���һ�¡�]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[MySQL��InnoDB�洢����������]]></title>
    <url>%2F2018%2F10%2F28%2Fmysql-index%2F</url>
    <content type="text"><![CDATA[�����Ƕ����ݿ⣬����һ�л����е�ֵ����������һ�ֽṹ��ʹ���������������ݿ����ض����ݵĲ�ѯ�ٶȡ�������һ�������ġ��洢�ڴ����ϵ����ݿ��ṹ���������Ŷ����ݱ������м�¼������ָ�롣MySQL�ٷ��������Ķ���Ϊ��������Index���ǰ���MySQL��Ч��ȡ���ݵ����ݽṹ�������ı��ʣ����������ݽṹ�� �洢����֧�ֵ����� MyISAM��InnoDBֻ֧��BTree������Memory��Heap�洢��������֧��Hash��BTree������ �����ķ��� ��ͨ������MySQL�еĻ����������ͣ������ڶ������Ե����в����ظ�ֵ�Ϳ�ֵ�� Ψһ�����������е�ֵ����Ψһ���������п�ֵ����������������������ֵ�����ϱ���Ψһ������������һ��������Ψһ�������������п�ֵ�� ����������һ������ֻ���������У�һ���������ж������������� �����������ڱ��Ķ����ֶ������ϴ�����������ֻ���ڲ�ѯ������ʹ������Щ�ֶε������ֶ�ʱ�������Żᱻʹ�á�ʹ����������ʱ��ѭ����ǰ׺���ϡ� ȫ���������ڶ�������������֧��ֵ��ȫ�Ĳ��ң���������Щ�������в����ظ�ֵ�Ϳ�ֵ��ȫ������������CHAR��VARCHAR��TEXT���͵����ϴ�����ֻ��MyISAM�洢����֧��ȫ�������� �ռ��������ǶԿռ��������͵��ֶν����������������ռ��������У��������п�ֵ��ֻ��MyISAM�洢����֧�ֿռ������� �������ŵ� ͨ������Ψһ���������Ա�֤���ݿ�����ÿһ�����ݵ�Ψһ�ԡ� ���Դ����ӿ����ݵĲ�ѯ�ٶȣ���Ҳ�Ǵ�������������Ҫԭ���� ������ȱ�� ����������ά������Ҫ�ķ�ʱ�䣬�����������������������ķѵ�ʱ��Ҳ�����ӡ� ������Ҫռ�ô��̿ռ䣬�������ռ䡣�����д����������������ļ����ܱ������ļ������ﵽ�����ļ��ߴ硣 ���Ա��е����ݽ������ӡ�ɾ�����޸�ʱ������ҲҪ��̬��ά�������������ݵ�ά���ٶȡ� InnoDB�洢����������ʵ�� InnoDB�洢����ʹ��B+Tree��Ϊ�����ṹ����InnoDB�У��������ļ��������ǰ�B+Tree��֯��һ�������ṹ������������key�����ݱ�������������InnoDB�������ļ����������������� InnoDB�������ļ�����Ҫ�������ۼ�������InnoDBҪ��������������������û����ʾָ��������InnoDB��Ϊÿһ������һ�����ص�6���ֽڵ�ROWID�����Դ���Ϊ��������MySQL�Ĵ洢���桷һ�����ᵽ�ġ� ��ʹ��InnoDB�洢����ʱ������û���ر�����Ҫ��ʹ��һ����ҵ���޹ص������ֶ���Ϊ��������һ���ܺõ�ѡ���� �ۼ��������Ǿۼ����� �ۼ���������¼������˳��������������˳��һ�£��ŵ��ǲ�ѯ�ٶȿ죬��Ϊһ�����е�һ������ֵ�ļ�¼���ҵ���������������ֵ�ļ�¼Ҳһ�������Ľ����������ۼ�������ȱ���ǶԱ������޸��ٶȽ���������Ϊ�˱��ֱ��еļ�¼������˳����������˳��һ�£����Ѽ�¼���뵽����ҳ����Ӧλ�ã�����������ҳ�н����������ţ�������ִ���ٶȡ����������顣 �Ǿۼ�����ָ���˱��м�¼���߼�˳�򣬵���¼������˳����������˳����һ�£��ۼ������ͷǾۼ�������������B+Tree�Ľṹ���Ǿۼ������Ⱦۼ��������ζ࣬���Ӽ�¼������������˳�������顣������������ �ۼ������ͷǾۼ����������� ���ߵĸ��������Ǳ���¼������˳����������������˳���Ƿ�һ�¡� �ۼ�����һ����ֻ����һ�������Ǿۼ�����һ�������Դ��ڶ����� �ۼ������洢��¼���������������ڣ����Ǿۼ��������߼��ϵ������������洢���������� �ۼ�������ѯ�����ٶȿ죬���������ٶ������Ǿۼ�������֮�� ����������ԭ�� ��������Խ��Խ�ã����ﲻ�ٲ���ԭ���� �����Ծ������µı����й����������������е��о������٣����Ծ������ڲ�ѯ���ֶ�Ӧ�ô��������� ������С�ı����ò�Ҫʹ����������ѯ���ѵ�ʱ�����ܱȱ���������ʱ�仹Ҫ�̡� ������ѡ���Խϵ�ʱ����Ӧ���������� ������ѡ������ν������ѡ���ԣ�Selectivity������ָ���ظ�������ֵ��Ҳ�л�����Cardinality��������¼����#T���ı�ֵ��Index Selectivity = Cardinality / #T��Ȼѡ���Ե�ȡֵ��ΧΪ(0, 1]��ѡ����Խ�ߵ�������ֵԽ����������B+Tree�����ʾ����ġ���������ͼ����dept_no��Ϊ����������ѡ���ԣ�SELECT count(DISTINCT(dept_no))/count() AS Selectivity FROM employee;��e_no��Ϊ����������ѡ���ԣ�SELECT count(DISTINCT(e_no))/count() AS Selectivity FROM employee;���ԶԱȳ�����e_no���Ͻ���������ѡ���Ը��ߡ�����e_no���Ͻ��������󣬿���ʹ��EXPLAIN�����鿴�����Ƿ�����ʹ�á� EXPLAIN�������������ĸ����н���12345678select_type��ָ����ʹ�õ�SELECT��ѯ���͡�table��ָ�����ݿ���ȡ�����ݱ����֣����ǰ��ձ���ȡ���Ⱥ�˳�����С�type��ָ���˱����ݱ����������ݱ�֮���Ĺ�����ϵ�����ܵ�ȡֵ�У�system��const��eq_ref��ref��range��index��All��possible_keys�����������ݼ�¼ʱ��ѡ�õĸ���������key_len�������������ֽڼ����ĳ��ȣ�key_len��ֵԽС����ʾԽ�졣ref�������˹�����ϵ����һ�����ݱ����������ơ�rows��ִ��������ѯʱԤ�ƻ����������ݱ��ж�ȡ�������еĸ�����extra�����������������йص���Ϣ��]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Java��synchronized�ؼ�����JDK1.5����ʾLock����]]></title>
    <url>%2F2018%2F10%2F28%2Flock%2F</url>
    <content type="text"><![CDATA[������Ҫ���ܽ�synchronized�ؼ�����JDK1.5��Lock�Ĳ��������ﲻ̸���̰߳�ȫ���⣬�̰߳�ȫ������һ���ȽϹ����������⣨volatile�ؼ��֡�JMM�ڴ�ģ�͡��߳������ڴ��͹����ڴ��Ľ�����ϵ�ȣ���ͬ��ʹ�õ�ǰ�᣺ ���������������������ϵ��̡߳� �����Ƕ����߳�ʹ��ͬһ������ ��ʱ�ſ��Գ�Ϊ��Щ�̱߳�ͬ���ˡ� synchronized�ؼ���12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273class Resource &#123; public void methodOne(Object obj) &#123; System.out.println("����methodOne()��" + obj); synchronized (obj) &#123; System.out .println(System.currentTimeMillis() + "-ͬ�������飺" + Thread.currentThread().getName() + "����=" + obj.toString()); sleep(); &#125; &#125; public synchronized void methodTwo(String str) &#123; System.out.println("����methodTwo()��" + str); System.out.println(System.currentTimeMillis() + "-ͬ��������" + Thread.currentThread().getName()); sleep(); &#125; public static synchronized void methodThree(String str) &#123; System.out.println("����methodThree()��" + str); System.out.println(System.currentTimeMillis() + "-��̬ͬ��������" + Thread.currentThread().getName()); sleep(); &#125; private static void sleep() &#123; try &#123; Thread.sleep(10000); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125;&#125;class Thread1 extends Thread &#123; private Resource res; public Thread1(Resource res) &#123; this.res = res; &#125; public void run() &#123; res.methodOne("lockA"); &#125;&#125;class Thread2 extends Thread &#123; private Resource res; public Thread2(Resource res) &#123; this.res = res; &#125; public void run() &#123; res.methodOne("lockA"); &#125;&#125;public class TestMain &#123; public static void main(String[] args) &#123; Resource r1 = new Resource(); //Resource r2 = new Resource(); Thread1 t1 = new Thread1(r1); Thread2 t2 = new Thread2(r1); t1.start(); t2.start(); &#125;&#125; ����һ�μ򵥵Ĵ��룬�ֱ���˵��synchronized�ؼ��ּ��ڴ���Ƭ���С����ڷ��������ϡ����ھ�̬���������ϣ�����ʹ�õ�����������Щ�� synchronized�ؼ��ּ��ڴ���Ƭ����Thread1��Thread2ʹ�õ���ͬһ����������lockA�����ַ�����ʼ��ʱ�����ڷ��������ַ��������ء�“lockA”��new String(“lockA”)������������ͬ�Ķ��������ﲻ������˵����Thread1��Thread2�����˻��⣬˵��ͬ���������Ĺؼ���synchronized�ؼ��������е������󣬿���������������������������ͬһ����ʱ��synchronized�������򲻻ᷢ�����⡣ synchronized�ؼ��ּ��ڷ���������������Ҫ���������ã���������һ���������������ã�����this��ͬ������ʹ�õ�������this��������������������ͼ����ͼ�У�ʹ�õ��ǲ�ͬ��������û�з������⡣����res�����Լ����ݸ�methodOne()ʱ������ͬ����������ͬ��������ʼ�����ˡ� ����ͬ������ʹ�õ�������this���� synchronized�ؼ��ּ��ھ�̬������������֮ǰ�Ķ�����ʼ����������������̬��Ա����̬�����뾲̬���ԣ�רҵ˵����������������ͨ����Ҳ���������ļ��ض������ء�this�ؼ��ֱ�ʾһ���������á����Ծ�̬ͬ�������϶������õ�this�����������У�methodThree()�����˻��⡣���ַ�ʽ��methodOne()����Resource���ֽ���������Ϊ����������methodThree()�����˻��⡣ ����֮ǰ˵��һ����ֻ��һ���ֽ����ļ����ڼ��ؽ��ڴ�ʱ��һ����ֻ��һ���ֽ����ļ���������̬ͬ������ʹ�õ����Ǹ÷������������ֽ����ļ�������������.class������.getClass()��һ���£����ǻ�ȡ��ǰ�����ֽ��������� ���� ԭ����ͬ����Ƕ��ͬ�����˴�������Ҫ�������š�1234567891011121314151617181920212223242526272829303132333435class Lock implements Runnable&#123; private boolean flag; Lock(boolean flag)&#123; this.flag=flag; &#125; public void run() &#123; if(flag)&#123; synchronized (Mylock.locka) &#123; System.out.println("if..locka"); synchronized (Mylock.lockb) &#123; System.out.println("if..lockb"); &#125; &#125; &#125; else&#123; synchronized (Mylock.lockb) &#123; System.out.println("else..lockb"); synchronized (Mylock.locka) &#123; System.out.println("else..locka"); &#125; &#125; &#125; &#125;&#125;class Mylock&#123; static Object locka=new Object(); static Object lockb=new Object();&#125;public class Deadlock &#123; public static void main(String[] args)&#123; Thread t1=new Thread(new Lock(true)); Thread t2=new Thread(new Lock(false)); t1.start(); t2.start(); &#125;&#125; Lock��ʾ������12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061import java.util.concurrent.locks.Lock;import java.util.concurrent.locks.ReentrantLock;class Resource &#123; private Lock lock = new ReentrantLock(); public void set(String name) &#123; lock.lock(); try &#123; System.out.println(System.currentTimeMillis() + "��" + Thread.currentThread().getName() + "��" + name); try &#123; Thread.sleep(10000); &#125; catch (InterruptedException e) &#123; e.printStackTrace(); &#125; &#125; finally &#123; // �ͷ����Ĳ���һ��Ҫִ�� lock.unlock(); &#125; &#125;&#125;class Producer implements Runnable &#123; private Resource res; public Producer(Resource res) &#123; this.res = res; &#125; public void run() &#123; res.set("����"); &#125;&#125;class Consumer implements Runnable &#123; private Resource res; public Consumer(Resource res) &#123; this.res = res; &#125; public void run() &#123; res.set("����"); &#125;&#125;public class TestMain &#123; public static void main(String[] args) &#123; Resource r = new Resource(); Producer pro = new Producer(r); Consumer con = new Consumer(r); Thread t1 = new Thread(pro); Thread t2 = new Thread(con); t1.start(); t2.start(); &#125;&#125; ����һ���⣬�����ͷ������������С� ���ж����⣬Thread-0δ�ͷ�����Thread-1��һֱ������]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Java��List��Set��Map����]]></title>
    <url>%2F2018%2F10%2F28%2Flist-set-map%2F</url>
    <content type="text"><![CDATA[�������ص� ���ݶ����ö����洢���������˾��������򼯺ϴ洢��ʹ�������������������� �����ĳ��ȱ�������ָ������һ�������Ͳ����ٸ��ġ� �����Ĵ洢�����������ǹ̶������ͣ���һ�������ݵĴ洢�� �������ڴ����䣬һ���Է���һƬ�������ڴ��ռ䡣�������ڴ��ռ��ж��󣬾����������ĳ����ж೤�� Ϊʲô��������ô���������أ���Ϊÿһ�����������ݵĴ洢��ʽ���в�ͬ�������洢��ʽ��֮Ϊ�����ݽṹ�� List�г��õ�������������ϵ����Ԫ���������ģ�Ԫ�ؿ����ظ�����Ϊ�ü�����ϵ��������List�����ж�Ԫ���Ƿ���ͬ�����ݵ���Ԫ�ص�equals()������������Ҫ�����Լ������������ж��Ƿ�Ϊͬ��ͬԪ�أ�����Ҫ��дequals()������ ArrayList �ײ�ʹ�������ṹ��elementData���Ǹü��ϴ������ݵĵط����������ڴ���ַ�ռ���������һƬ�� �ص㣺��ѯ�ٶȺܿ졣������ɾ�������̲߳���ȫ�����ŽǱ꣬���ɻ�ȡ��Ԫ�ء�����������ʵ�����е����ƺš�”ȥ�ҵ�С����”����ô����С���ģ���ô�ң�”ȥ�ҵ�С���ң���סXX��5��”���ڽǱ�4��λ�Ӳ���һ����Ԫ�أ���ζ�ýǱ�λ����������Ԫ�ض���ҪŲ��һ�¡����輯�ϵ������ܴ���1000��10000��100000����1000000����Ȼ���ܳ���int������ֵ��������һ���򵥵Ĳ��������ڴ��������Ƿǳ����ġ�ɾ��Ҳ��ͬ���� �Զ����ݣ�ÿ�ζ��ǰ�ԭ�������鸴�ƽ�һ���������У��������ĳ�����������ԭ����size��50%����һ��ArrayList��Դ�룺�Զ������Ƿ��������ӵ�ʱ��������Ϊ��ǰsize+1modCount���ﲻ����ϸ˵����ConcurrentModificationException�쳣������ԭ��������Ϊ��������size+1��ȥ��ǰԪ�������ĳ��ȴ���0������ʾ��Ҫ���ݡ���һ�����ߣ��µ�����Ϊ�ɵ��������Ͼɵ�����ֵ����һλ��int��ֵ�Ķ���������һλ������ԭ����ֵ��һ�롣���ԣ����ݵ���������ԭ����size��50%���ڶ������ߣ�����Arrays.copyOf()����������ͼ����ԭ�����Ļ����ϣ�����һ�����顣LinkedList �ײ�ʹ�������ṹ��˫�������������ڴ���ַ�ռ��ǿ�������Ƭ���ռ䡣 �ص㣺��ɾ�ܿ죬��ѯ�������̲߳���ȫ�����ӣ�������һ��Ԫ�ص�next��¼ס��ǰ����Ԫ�صĿռ���ַ������ǰ����Ԫ�ص�prev��¼��һ��Ԫ�أ�lastΪ��ǰԪ�ص�ַ��ɾ��Ҳ��ͬ����ֱ������һ��Ԫ�ص�nextΪnull��lastΪ��һ��Ԫ�ص�ַ����ͼ��get(int index)��remove(int index)�����У��۰�������˳������Ԫ�ء�ListIteratorList�������еĵ��������ڵ���ʱ��������ͨ�����϶����ķ������������е�Ԫ�ء���Ϊ�ᷢ��ConcurrentModificationException�쳣�����ԣ��ڵ�����ʱ��ֻ���õ������ķ�ʽ����Ԫ�أ�����Iterator���������޵ģ�ֻ�ܶ�Ԫ�ؽ����жϣ�ȡ����ɾ���Ĳ�����������Ҫ�����Ĳ��������ӣ��޸ĵȣ�����Ҫʹ�����ӽӿڣ�ListIterator���ýӿ�ֻ��ͨ��List���ϵ�listIterator������ȡ��ʵ�ּ򵥵Ķ���123456789101112131415161718192021222324252627class MyQueue &#123; private LinkedList&lt;Object&gt; link; MyQueue() &#123; link = new LinkedList&lt;Object&gt;(); &#125; public void myAdd(Object obj) &#123; link.offerFirst(obj); &#125; public Object myGet() &#123; return link.pollLast(); &#125; public boolean isNull() &#123; return link.isEmpty(); &#125;&#125;public class LinkedListTest &#123; public static void main(String[] args) &#123; MyQueue mq = new MyQueue(); mq.myAdd("java01"); mq.myAdd("java02"); mq.myAdd("java03"); mq.myAdd("java04"); while (!mq.isNull()) &#123; System.out.println(mq.myGet()); &#125; &#125;&#125; Set�г��õ�����Ԫ��������(������ȡ����˳����һ��һ��)��Ԫ�ز������ظ����ײ㶼��ʹ��Map���ϴ洢Ԫ�ء� HashSet �ײ����ݽṹ�ǹ�ϣ����ʹ��HashMap�洢Ԫ�أ�ֻʹ����HashMap��Key���֣�δʹ��Value���֡����̲߳���ȫ�ġ� HashSet�����α�֤Ԫ��Ψһ�Ե��أ�12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758class Person &#123; private String name; private int age; Person() &#123; &#125; Person1(String name, int age) &#123; this.name = name; this.age = age; &#125; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; public int getAge() &#123; return age; &#125; public void setAge(int age) &#123; this.age = age; &#125; public boolean equals(Object obj) &#123; if (!(obj instanceof Person1)) &#123; return false; &#125; Person p = (Person) obj; System.out.println(this.name + "-equals-" + p.name); return this.name.equals(p.name) &amp;&amp; this.age == p.age; &#125; public int hashCode() &#123; // System.out.println(this.name+"...hashCode"); return name.hashCode() + age * 27; //return age * 27; &#125;&#125;public class HashSetTest &#123; public static void main(String[] args) &#123; HashSet&lt;Person&gt; hs = new HashSet&lt;Person&gt;(); hs.add(new Person("����", 21)); hs.add(new Person("����", 22)); hs.add(new Person("����", 19)); hs.add(new Person("����", 22)); for (Iterator&lt;Person&gt; it = hs.iterator(); it.hasNext();) &#123; Person p = it.next(); System.out.println(p.getName() + "��" + p.getAge()); &#125; &#125;&#125; hashCodeֵ����name.hashCode() + age * 27 hashCodeֵ����age * 27��age��ͬ�ͻ����бȽϣ�������equals��Ϊtrue����Ϊ��ͬԪ�ء� hashCodeֵ����age * 27��age��ͬ�ͻ����бȽϣ��Ƚ������Σ�equalsΪtrue����Ϊ��ͬԪ�أ������롣 ����HashSet��ͨ��Ԫ�ص�����������hashCode��equals�����ɡ�����Ԫ�ص�HashCodeֵ��ͬ���Ż��ж�equals�Ƿ�Ϊtrue������Ԫ�ص�hashcodeֵ��ͬ����������equals��ע��,�����ж�Ԫ���Ƿ����ڣ��Լ�ɾ���Ȳ����������ķ�����Ԫ�ص�hashcode��equals������ TreeSet �ײ����ݽṹ�Ƕ�����������ʹ��TreeMap�洢Ԫ�ء����̲߳���ȫ�ġ�ʹ��TreeMap�е�K�������ݣ�V��һ������Object������ �ص㣺���ԶԼ����ڵ�Ԫ�ؽ��������� Ĭ�ϵ����������ǣ�����Ȼ��������С�Ҵ󣩡���ͼ��put�����е�һ�δ��롣 �����ص㣬�Ƚ������ȽϽӿ�123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172//��������TreeSetӵ��������������ʽ�������ӷ�ʽ��public class TreeSetDemo &#123; public static void main(String[] args) &#123; //TreeSet&lt;Student&gt; ts = new TreeSet&lt;Student&gt;(); //�ڶ��ַ�ʽ���ü��Ͼ߱��Ƚ��ԣ����Ƚ���������Ϊ�������ݸ�TreeSet���ϵĹ��캯�� TreeSet&lt;Student&gt; ts = new TreeSet&lt;Student&gt;(new MyComparator()); ts.add(new Student("����", 21)); ts.add(new Student("����", 20)); ts.add(new Student("����", 23)); ts.add(new Student("����", 21)); ts.add(new Student("����", 19)); ts.add(new Student("����", 19)); for (Iterator&lt;Student&gt; it = ts.iterator(); it.hasNext();) &#123; Student s = it.next(); System.out.println(s.getName() + "��" + s.getAge()); &#125; &#125;&#125;//��һ�ַ�ʽ����Student��ʵ��Comparable�ӿڣ���дcompareTo������ǿ����ѧ���߱��ɱ���class Student implements Comparable&lt;Student&gt; &#123; private String name; private int age; Student() &#123; &#125; Student(String name, int age) &#123; this.name = name; this.age = age; &#125; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; public int getAge() &#123; return age; &#125; public void setAge(int age) &#123; this.age = age; &#125; //��дcompareTo()���������ж����ȽϹ��� public int compareTo(Student o) &#123; if (this.age &gt; o.age) return 1; if (this.age == o.age) &#123; // ����Ҫ��������ʱ���жϴ�Ҫ���� return this.name.compareTo(o.name); &#125; return -1; &#125;&#125;//�Զ����Ƚ�����ʵ��Comparator�ӿ�class MyComparator implements Comparator&lt;Student&gt; &#123; public int compare(Student o1, Student o2) &#123; //���ж����ȽϹ��� int num = o1.getName().compareTo(o2.getName()); if (num == 0) // ������װ������compareTo()�������жϴ�Ҫ���� return new Integer(o1.getAge()).compareTo(new Integer(o2.getAge())); return num; &#125;&#125; TreeSet��֤Ԫ��Ψһ�Ե����ݾ���compareTo()������returnֵ����С�жϵ�����Ҳ�Ǹ÷����ķ���ֵ�����������󣬸�������С��0����ʾ����ͬԪ�ء�1234567891011//ʹ�������ڲ����ķ�ʽ�����ݱȽ���TreeSet&lt;String&gt; ts = new TreeSet&lt;String&gt;(new Comparator&lt;Student&gt;()&#123; public int compare(Student o1, Student o2) &#123; //���ж����ȽϹ��� int num = o1.getName().compareTo(o2.getName()); if (num == 0) // ������װ������compareTo()�������жϴ�Ҫ���� return new Integer(o1.getAge()).compareTo(new Integer(o2.getAge())); return num; &#125;&#125;); Map�г��õ����������Ѿ�˵����Set���ϵײ�����ʹ��Map���ϴ洢��Map���ϱ�ʹ������Ϊ�߱�ӳ����ϵ��Map�����У���������ͬ���ͻ�������ֵ���Ǿ�ֵ�� Map���ϵ�ȡֵԭ������Map����ת��Set���ϣ���ͨ��������ȡ����ȡֵ�����ַ�ʽ�� entrySet()������ֵ����ΪSet]]></content>
      <categories>
        <category>Java</category>
        <category>���ݽṹ</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ʹ�ö�̬����ʵ��һ���򵥵����ݿ����ӳ�]]></title>
    <url>%2F2018%2F10%2F28%2Fjdbc-pool%2F</url>
    <content type="text"><![CDATA[��ȷһ�㣺���ݿ�������һ���������Ķ�����ÿһ�����ӵĽ�����һ�������Һ�������Դ�����顣Ϊ�˸����Ѿ������õ����ӣ������˳ؼ��������ӳء��̳߳ء������صȵȡ��������ö�̬����ʵ��һ���򵥵����ݿ����ӳء� ����123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132import java.io.InputStream;import java.io.PrintWriter;import java.lang.reflect.InvocationHandler;import java.lang.reflect.Method;import java.lang.reflect.Proxy;import java.sql.Connection;import java.sql.DriverManager;import java.sql.SQLException;import java.sql.SQLFeatureNotSupportedException;import java.util.LinkedList;import java.util.Properties;import java.util.logging.Logger;import javax.sql.DataSource;public class JdbcPool implements DataSource &#123; //ʹ��LinkedList����,��ʹ�õ���������ɾ�Ĳ� private static LinkedList&lt;Connection&gt; list = new LinkedList&lt;Connection&gt;(); static&#123; try&#123; //��ȡ���ݿ����ӵı�Ҫ���� InputStream in = JdbcPool.class.getClassLoader().getResourceAsStream("db.properties"); Properties prop = new Properties(); prop.load(in); String driver= prop.getProperty("driver"); String url = prop.getProperty("url"); String username = prop.getProperty("username"); String password = prop.getProperty("password"); //�������� Class.forName(driver); //������Ҫ���ٸ�����,��ѭ�����ٴ� for(int i=0;i&lt;10;i++)&#123; Connection conn = DriverManager.getConnection(url, username, password); //�����Ӵ��뼯���� System.out.println("��ȡ��������:"+conn); list.add(conn); &#125; &#125;catch (Exception e) &#123; throw new ExceptionInInitializerError(e); &#125; &#125; /* 1.дһ������,����close���� 2.дһ��Connection�İ�װ��,��ǿclose���� 3.�ö�̬����,����һ������������ȥ,����close�����ĵ���,��close����������ǿ */ public Connection getConnection() throws SQLException &#123; //proxyConnection.commit() proxyConnection.rollback if(list.size()&gt;0)&#123; final Connection conn = list.removeFirst(); //myconnection.commit System.out.println("�ش�С��:" + list.size()); //ʹ�ö�̬���� return (Connection) Proxy.newProxyInstance( JdbcPool.class.getClassLoader(), conn.getClass().getInterfaces(), new InvocationHandler()&#123; @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable &#123; if(!method.getName().equals("close"))&#123; return method.invoke(conn, args); &#125;else&#123; list.add(conn); System.out.println(conn + "���������ˣ���"); System.out.println("�ش�СΪ" + list.size()); return null; &#125; &#125; &#125;); &#125;else&#123; throw new RuntimeException("�Բ��������ݿ�æ"); &#125; &#125; @Override public PrintWriter getLogWriter() throws SQLException &#123; // TODO Auto-generated method stub return null; &#125; @Override public void setLogWriter(PrintWriter out) throws SQLException &#123; // TODO Auto-generated method stub &#125; @Override public void setLoginTimeout(int seconds) throws SQLException &#123; // TODO Auto-generated method stub &#125; @Override public int getLoginTimeout() throws SQLException &#123; // TODO Auto-generated method stub return 0; &#125; @Override public Logger getParentLogger() throws SQLFeatureNotSupportedException &#123; // TODO Auto-generated method stub return null; &#125; @Override public &lt;T&gt; T unwrap(Class&lt;T&gt; iface) throws SQLException &#123; // TODO Auto-generated method stub return null; &#125; @Override public boolean isWrapperFor(Class&lt;?&gt; iface) throws SQLException &#123; // TODO Auto-generated method stub return false; &#125; @Override public Connection getConnection(String username, String password) throws SQLException &#123; // TODO Auto-generated method stub return null; &#125;&#125; ԭ��DataSource�ӿ��Ǳ���Ҫʵ�ֵģ�������Щδʵ�ֵķ������ﲻ��˵��������DataSource�ӿ�����Ҫʵ�ֵķ�����JdbcPool�ڼ��ؽ��ڴ�ʱ�򣬾��Ѿ������ݿ���ȡ��10�����ݿ����ӡ�getConnection()��ȡ���ݿ����ӣ����صľ���Connection��һ������������ȥ������Ҫ���������ǣ����ض�close()�����Ĵ����������ֵ��õ���close()����ʱ������ȥִ���ͷ����ӣ����ǰ����ӷ��ص���LinkedList��������ȥ�ˡ�]]></content>
      <categories>
        <category>SQL</category>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[���ݽṹ��һЩʾ��������ʵ��]]></title>
    <url>%2F2018%2F10%2F28%2Fimplement%2F</url>
    <content type="text"><![CDATA[��ѧ���о�������ժ¼������֮��һ�飩 ��ä�ӣ��������κ��Լ���������������������ʲôȨ���Ľ��ۣ�ֻҪû�о����Լ����о��������Ի��ɡ� ���ڸ��ӵ����⣬�����ֽ�Ϊ�����򵥵�С�������о���һ��һ���طֿ������� ������ЩС����ʱ��Ӧ�ð������׺��ѵĴ������𲽽����� ����ÿ��С����֮�������ۺ������������Ƿ񳹵׽�����ԭ�������⡣ �ڴ��������ڴ�й¶�ڴ������ڴ�������Ҫ��ָ��Ҫװ������Ҫ�������������ˣ��������ᵼ�������������������е�ˮͰ�����ӵȣ����������޵ģ����Բ��ܽ������޵���װ����Java�е�OOM���������ڴ���������ΪJava��GC�Ĵ��ڣ����Բ����ᷢ���ڴ�й¶�� �ڴ�й¶��һ���õ�C�����������������������н�����ɾ������������һ��free()�����ĵ��á�free()�������������ͷ��ڴ��ռ䡣��ν���ͷ��ڴ��ռ䣬��ָ�Ѷ��ڴ���ַ�Ĳ���Ȩ���ƽ�������ϵͳ������û����free()����������ɾ���ý���ʱ���ᵼ�¸ý������Ѿ��޷��ҵ��ˣ���ȴ��ӵ�п���Ȩ�ޡ�����ϵͳ�ڷ����ڴ�ʱ������Ϊ��ǰ�ڴ���ַ���˻���ʹ�ã��Ͳ���������������Ӧ�ó��򣬴Ӷ��ᵼ���ڴ��ռ䣬Խ��Խ�١� �����������ȶ�����ν�ȶ�����ָ��������������������Ԫ�����ȣ���r[i]==r[j]������ǰr[i]��r[j]ǰ��������r[i]��Ȼ��r[j]ǰ�������������㷨���ȶ��ģ���֮�ǲ��ȶ��ġ� ѡ������������˼���ǴӴ����������������ҳ���С��Ԫ�أ�����Ԫ���������еĵ�һ��Ԫ�ؽ���λ�á��������㷨�ǲ��ȶ��ġ�1234567891011121314151617181920212223242526272829303132333435363738394041424344454647package datastructure.part.sort;import java.util.Arrays;/** * @description * @author Denghs * @version 1.0,2018��2��27�� ����9:27:32 * @remark * ѡ��������ÿһ����������������ѡ���ؼ�����С�ļ�¼�����δ��������ź����ļ�¼���������� * ԭʼ ���ݣ�5 4 9 87 1 2 14 26 * ��һ�� 1 5 4 9 87 2 14 26 * �ڶ��� 1 2 5 4 9 87 14 26 * ������ 1 2 4 5 9 87 14 26 * ������ 1 2 4 5 9 87 14 26 * ������ 1 2 4 5 9 87 14 26 * ������ 1 2 4 5 9 14 87 26 * ������ 1 2 4 5 9 14 26 87 */public class ChooseSort &#123; public static void main(String[] args) &#123; //ͳ�����д��� int count = 0; int[] array = &#123; 5, 4, 9, 87, 1, 2, 14, 26 &#125;; chooseSort(array, count); &#125; /** * ѡ������ * @param array * @param count */ public static void chooseSort(int[] array, int count) &#123; for (int i = 0; i &lt; array.length; i++) &#123; for (int j = i + 1; j &lt; array.length; j++) &#123; if(array[j] &lt; array[i])&#123; int temp = array[i]; array[i] = array[j]; array[j] = temp; &#125; count++; &#125; &#125; System.out.println(Arrays.toString(array) + "---&gt;ChooseSort��" + count); &#125;&#125; ��������������˼���ǰѴ��������еĵ�һ��Ԫ���ó�������λ�ø��ճ�����Ȼ���ø�Ԫ�أ����������е�Ԫ�ؽ��бȽϡ������Ǵ�С�������������ȸ�Ԫ�ش��ģ������ƶ�һ�Ρ����ν��м��ɡ��Ѹ�Ԫ�ز��뵽�����ƶ���Ԫ�غ��ߵĿռ��С��������㷨���ȶ��ġ�12345678910111213141516171819202122232425262728293031323334353637383940414243package datastructure.part.sort;import java.util.Arrays;/** * @description * @author Denghs * @version 1.0,2018��2��27�� ����9:57:20 * @remark ����������1��Ԫ���ó�����2������������Ԫ�غ��� */public class InsertSort &#123; public static void main(String[] args) &#123; // ͳ�����д��� int count = 0; int[] array = &#123; 5, 4, 9, 87, 1, 2, 14, 26 &#125;; insertSort(array, count); &#125; /** * �������� * @param array * @param count */ public static void insertSort(int[] array, int count) &#123; int pos = 0; for (int i = 2; i &lt; array.length; i++) &#123; // ��������λ�� pos = i; // Ԫ���ó��� int temp = array[i]; for (int j = i - 1; j &gt;= 0 &amp;&amp; array[j] &gt; temp; j--) &#123; // ����������Ԫ�غ��� array[j + 1] = array[j]; // ��Ҫ������λ�� pos = j; count++; &#125; array[pos] = temp; &#125; System.out.println(Arrays.toString(array) + "---&gt;InsertSort��" + count); &#125;&#125; ð������������˼����ͨ������Ԫ��֮���ıȽϺͽ�����������������������ð�ݺ������³����������㷨���ȶ��ġ�123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130package datastructure.part.sort;import java.util.Arrays;/** * @description * @author Denghs * @version 1.0,2018��2��27�� ����10:41:21 * @remark ð������������Ԫ��֮���ıȽϽ�����һ��������ð�ݣ�һ���������³� */public class BubbleSort &#123; public static void main(String[] args) &#123; // ͳ�����д��� int count = 0; int[] array1 = &#123; 5, 4, 9, 87, 1, 2, 14, 26 &#125;; int[] array2 = &#123; 5, 4, 9, 87, 1, 2, 14, 26 &#125;; int[] array3 = &#123; 5, 4, 9, 87, 1, 2, 14, 26 &#125;; int[] array4 = &#123; 5, 4, 9, 87, 1, 2, 14, 26 &#125;; count = bubbleSort1(array1, 0); System.out.println(Arrays.toString(array1) + "---&gt;bubbleSort1��" + count); count = bubbleSort2(array2, 0); System.out.println(Arrays.toString(array2) + "---&gt;bubbleSort2��" + count); count = bubbleSort3(array3, 0); System.out.println(Arrays.toString(array3) + "---&gt;bubbleSort3��" + count); count = bubbleSort4(array4, 0); System.out.println(Arrays.toString(array4) + "---&gt;bubbleSort4��" + count); int[] array5 = &#123; 1, 2, 4, 3, 5, 6, 7, 8 &#125;; count = bubbleSort4(array5, 0); System.out .println(Arrays.toString(array5) + "---&gt;bubbleSort4��" + count); &#125; /** * ����ð�� * * @param array * @param count */ public static int bubbleSort1(int[] array, int count) &#123; for (int i = 0; i &lt; array.length - 1; i++) &#123; for (int j = 1; j &lt; array.length - i; j++) &#123; if (array[j] &lt; array[j - 1]) &#123; int temp = array[j]; array[j] = array[j - 1]; array[j - 1] = temp; &#125; count++; &#125; &#125; return count; &#125; /** * �����³� * * @param array * @param count */ public static int bubbleSort2(int[] array, int count) &#123; for (int i = 0; i &lt; array.length - 1; i++) &#123; for (int j = array.length - 1; j &gt; i; j--) &#123; if (array[j] &lt; array[j - 1]) &#123; int temp = array[j]; array[j] = array[j - 1]; array[j - 1] = temp; &#125; count++; &#125; &#125; return count; &#125; /** * ����ð�ݣ��Ż� * * @param array * @param count */ public static int bubbleSort3(int[] array, int count) &#123; // ���ǣ�true��ʾ��Ԫ�ػ�û���ź��� boolean flag = true; for (int i = 0; i &lt; array.length - 1 &amp;&amp; flag; i++) &#123; // ��Ϊ�Ѿ��ź��� flag = false; for (int j = 1; j &lt; array.length - i; j++) &#123; if (array[j] &lt; array[j - 1]) &#123; int temp = array[j]; array[j] = array[j - 1]; array[j - 1] = temp; // Ԫ��ִ���˽�������˵�����ݻ�û���ź��� flag = true; &#125; count++; &#125; &#125; return count; &#125; /** * �����³����Ż� * * @param array * @param count */ public static int bubbleSort4(int[] array, int count) &#123; // ���ǣ�true��ʾ��Ԫ�ػ�û���ź��� boolean flag = true; for (int i = 0; i &lt; array.length - 1 &amp;&amp; flag; i++) &#123; // ��Ϊ�Ѿ��ź��� flag = false; for (int j = array.length - 1; j &gt; i; j--) &#123; if (array[j] &lt; array[j - 1]) &#123; int temp = array[j]; array[j] = array[j - 1]; array[j - 1] = temp; // Ԫ��ִ���˽�������˵�����ݻ�û���ź��� flag = true; &#125; count++; &#125; &#125; return count; &#125;&#125; ϣ������������˼���Ƕ����ݽ��з��飬Ȼ���ٶԷ����������ݽ��в��������㷨���������㷨�ǲ��ȶ��ġ�123456789101112131415161718192021222324252627282930313233343536373839404142434445464748package datastructure.part.sort;import java.util.Arrays;/** * @description * @author Denghs * @version 1.0,2018��2��27�� ����3:23:48 * @remark ϣ�����򣺶����ݽ��з��飬Ȼ���ٽ��в��������㷨 */public class ShellSort &#123; public static void main(String[] args) &#123; // ͳ�����д��� int count = 0; int[] array = &#123; 5, 4, 9, 87, 1, 2, 14, 26 &#125;; shellSort(array, count); &#125; /** * ϣ������ * @param array * @param count */ public static void shellSort(int[] array, int count) &#123; int gap = array.length; int pos = 0; do &#123; //ҵ��ͳһʵ�� ƽ�����ü������� gap = gap / 3 + 1; for (int i = gap; i &lt; array.length; i += gap) &#123; // ��������λ�� pos = i; // Ԫ���ó��� int temp = array[i]; for (int j = i - gap; j &gt;= 0 &amp;&amp; array[j] &gt; temp; j -= gap) &#123; // ����������Ԫ�غ��� array[j + gap] = array[j]; // ��Ҫ������λ�� pos = j; count++; &#125; array[pos] = temp; &#125; &#125; while (gap &gt; 1); System.out.println(Arrays.toString(array) + "---&gt;ShellSort��" + count); &#125;&#125; ��������������˼���ǴӴ�������������һ����׼�����Ի�׼���������ҷ���������һ���ֵ��������ݶ�������һ������������С����׼�������������������м䡣Ȼ���ٰ��˷����������������ݷֱ����п������򣬵ݹ����У��ﵽ�����������С��������㷨�ǲ��ȶ��ġ�1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374package datastructure.part.sort;import java.util.Arrays;/** * @description * @author Denghs * @version 1.0,2018��2��27�� ����4:30:56 * @remark ������������һ��PVֵ����PVֵ���бȽ���������С�ķ����ߣ����ķ��ұߡ��Էֹ����ģ�����PVֵ���з�����ֱ������ֻ��һ��Ԫ�� */public class QuickSort &#123; public static void main(String[] args) &#123; int[] array = &#123; 5, 4, 9, 87, 1, 2, 14, 26 &#125;; quickSort(array); System.out.println(Arrays.toString(array) + "---&gt;QuickSort"); &#125; /** * @param array */ public static void quickSort(int[] array) &#123; qSort(array, 0, array.length - 1); &#125; /** * * @param array * @param low * @param hight */ public static void qSort(int[] array, int low, int hight) &#123; if (low &lt; hight) &#123; int pivot = partition(array, low, hight); // ���������������� qSort(array, low, pivot - 1); // ���������������� qSort(array, pivot + 1, hight); &#125; &#125; /** * ���� * @param array * @param low * @param hight * @return */ public static int partition(int[] array, int low, int hight) &#123; // �÷������ĵ�һ��Ԫ����ΪPVֵ int pv = array[low]; while (low &lt; hight) &#123; while (low &lt; hight &amp;&amp; array[hight] &gt;= pv) &#123; // �Ȼ�׼���󣬱��������ұߣ�����hight��ǰ�ƶ� hight--; &#125; if (low &lt; hight) &#123; array[low] = array[hight]; low++; &#125; while (low &lt; hight &amp;&amp; array[low] &lt;= pv) &#123; // �Ȼ�׼��С�������������ߣ�����low��ǰ�ƶ� low++; &#125; if (low &lt; hight) &#123; array[hight] = array[low]; hight--; &#125; &#125; //���ó�����PV�����Żص�low��λ�� array[low] = pv; return low; &#125;&#125; �鲢����������˼����ʹ�ø����ռ䣬�����ǶԴ��������н��в��֣��Եݹ��ķ�ʽ������ֻʣ��һ����ʱ�������������й鲢��������ָ��������������������ִ������һ�ι鲢ʱ����������һ�αȽϺ���ĳ���������ж�����Ԫ�أ���ֱ�Ӳ��뵽�����ռ����档123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778package datastructure.part.sort;import java.util.Arrays;/** * @description * @author Denghs * @version 1.0,2018��2��27�� ����7:24:42 * @remark �鲢�����������鲢 */public class MergeSort &#123; public static void main(String[] args) &#123; int[] array = &#123; 5, 4, 9, 87, 1, 2, 14, 26 &#125;; mergeSort(array); System.out.println(Arrays.toString(array) + "---&gt;MergeSort"); &#125; /** * @param array */ public static void mergeSort(int[] array) &#123; mSort(array, array, 0, array.length - 1, array.length); &#125; /** * �鲢���� * @param src��Դ���� * @param des��Ŀ������ * @param low������λ * @param hight������λ * @param max������ֵ */ public static void mSort(int[] src, int[] des, int low, int hight, int max) &#123; if (low == hight) &#123; // ֻ��һ��Ԫ�أ�����Ҫ�鲢 des[low] = src[low]; &#125; else &#123; // ��������Ԫ�أ�������·���� int[] space = new int[max]; int mid = (low + hight) / 2; mSort(src, space, low, mid, max); mSort(src, space, mid + 1, hight, max); // ��ʣ��һ��Ԫ��ʱ���ݹ黮�ֽ�������ʼ����merge�鲢���� merge(space, des, low, mid, hight); &#125; &#125; /** * �����ϲ� * @param src * @param des * @param low * @param mid * @param hight */ public static void merge(int[] src, int[] des, int low, int mid, int hight) &#123; int i = low; int j = mid + 1; int k = low; // ��С�ķŵ�Ŀ�ĵ��� while (i &lt;= mid &amp;&amp; j &lt;= hight) &#123; if (src[i] &lt; src[j]) &#123; des[k++] = src[i++]; &#125; else &#123; des[k++] = src[j++]; &#125; &#125; // ����ʣ����β��Ԫ�� while (i &lt;= mid) &#123; des[k++] = src[i++]; &#125; // ����ʣ����β��Ԫ�� while (j &lt;= hight) &#123; des[k++] = src[j++]; &#125; &#125;&#125; �������ֲ��ҷ����ֲ����ֳ��۰����ң�Ч�ʽϸߣ���������������ֻ�ܶ����Ա���˳���洢�ṹ����Ԫ���������в��ҡ��ɲ��õݹ顢�ǵݹ鷽ʽ��123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263package datastructure.part.sort;/** * @description * @author Denghs * @version 1.0,2018��2��28�� ����3:18:58 * @remark ���ֲ��ҷ� */public class BinarySearch &#123; public static void main(String[] args) &#123; int[] array = &#123; 1, 2, 3, 4, 5, 6, 7, 8 &#125;; int index = binarySearch(array, 1, 0, array.length - 1); System.out.println("index��" + index); index = binarySearch(array, 1); System.out.println("index��" + index); &#125; /** * �ǵݹ鷽ʽ * @param array * @param keyword * @return */ private static int binarySearch(int[] array, int keyword) &#123; int low = 0; int hight = array.length - 1; int mid; while (low &lt;= hight) &#123; mid = (low + hight) / 2; if (keyword == array[mid]) &#123; return mid; &#125; else if (keyword &lt; array[mid]) &#123; hight = mid - 1; &#125; else &#123; low = mid + 1; &#125; &#125; return -1; &#125; /** * �ݹ鷽ʽ * @param array * @param keyword * @param low * @param hight * @return */ private static int binarySearch(int[] array, int keyword, int low, int hight) &#123; if (low &lt;= hight) &#123; int mid = (low + hight) / 2; if (keyword == array[mid]) &#123; return mid; &#125; else if (keyword &gt; array[mid]) &#123; return binarySearch(array, keyword, mid + 1, hight); &#125; else &#123; return binarySearch(array, keyword, low, mid - 1); &#125; &#125; return -1; &#125;&#125; �����������ֳƶ��������������ص��������������ǿգ������������н�����ֵ�����ڸ��ڵ���ֵ�������������ǿգ������������н�����ֵ��С�ڸ�������ֵ�����������ָ���һ�ö����������������������ɻ���һ���������С�Java�е�TreeSet����ʵ����һ��������������������С�Ҵ�������Ԫ�ء� ��������ʵ��˳��ջ1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374package datastructure.part.one;/** * @description * @author Denghs * @version 1.0,2018��2��8�� ����9:37:53 * @remark �����ṹ��˳��ջ */public class Stack&lt;T&gt; &#123; private int maxSize; // ջ�ռ��Ĵ�С private T[] stackArray;// ˳��ջ�����÷���ȷ��ջ�ռ��Ĵ��ŵ��������� private int top; // ջ��ָ�� public Stack(int size) &#123; maxSize = size; stackArray = (T[]) new Object[maxSize]; top = -1; &#125; /** * ��ջ * @param element */ public void push(T element) &#123; stackArray[++top] = element; if (top &gt; (maxSize - 1))&#123; top = maxSize - 1; &#125; &#125; public void pretendedPush() &#123; ++top; if (top &gt; (maxSize - 1)) &#123; top = maxSize - 1; &#125; &#125; /** * ��ջ * @return */ public T pop() &#123; if (top == -1) &#123; return null; &#125; else &#123; return stackArray[top--]; &#125; &#125; /** * �鿴ջ��Ԫ�أ����ǲ���ջ * @return */ public T peek() &#123; return stackArray[top]; &#125; /** * �ж�ջ�Ƿ��� * @return */ public boolean isEmpty() &#123; return top == -1; &#125; /** * �ж�ջ�Ƿ��� * @return */ public boolean isFull() &#123; return top == maxSize - 1; &#125;&#125; ����ת������ջ�ռ䣬���ݻ�����ԭ��ȡ��������ȡ��������ջ���ٶ�ԭ��ȡ����ѭ���ù��̣�ֱ��ȡ������Ϊ0ʱֹͣ��������ջ��Ԫ��ȫ����ջ��12345678910111213141516171819202122232425262728293031323334package datastructure.part.one;/** * @description * @author Denghs * @version 1.0,2018��4��7�� ����9:17:33 * @remark ����ת�� */public class BinaryConversion &#123; public static void main(String[] args) &#123; conversion(6, 2); &#125; /** * ����ת����˼���ǣ���һ��ԭ����ͣ��ȡ���� * @param number��ԭʼ��ֵ * @param decimalBinary��ת���Ľ��ƣ����� */ public static void conversion(int number, int decimalBinary) &#123; // ��ʼ��ջ�ռ䣬ջ�Ĵ�С��ȡ��ֵ���������ټ�1 Stack&lt;Integer&gt; stack = new Stack&lt;Integer&gt;(number / decimalBinary + 1); while (number != 0) &#123; // ����������ջ�� stack.push(number % decimalBinary); // ȡ�� number = number / decimalBinary; &#125; while (!stack.isEmpty()) &#123; System.out.print(stack.pop()); &#125; &#125;&#125; �жϻ��������ĵ��ص��ǣ�����д��ԭ����һ���ġ�������ʵ�֣��������ַ�ʽ����һ�����жϷǸ������Ƿ��Ǹ������������õķ�ʽ���ǰ�ԭ������ֵ����ת�������ٸ�ԭ��ֵ����һ�αȽϣ��������ǻ��������ڶ����ǲ���ջ������ֵ�ĳ��Ƚ������棬��ǰһ������ֵһ����ջ��Ȼ���ٽ��г�ջ��������һ����ֵ���бȽϣ����������ǻ��������÷�ʽ��һ��BUG��������������ʱ��ǰһ�����ݵĳ��ȸ���һ�����ݵĳ��Ȳ������ȣ��ᵼ��12321�������͵����ݣ��жϳ������ǻ��������������ǻ�ȡ���ݵ��ֽ����飬����ͷָ����βָ�룬ÿѭ��һ�Σ���ͷָ���ϵ�������βָ���ϵ����ݽ��бȽϣ�������ͷָ����ǰŲһλ��βָ������Ųһλ��ֱ��ͷָ��С�ڵ���βָ�룬ѭ��������123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384package datastructure.part.one;/** * @description * @author Denghs * @version 1.0,2018��3��5�� ����4:52:12 * @remark �жϻ����� */public class Symmetry &#123; public static void main(String[] args) &#123; System.out.println(symmetry(1221)); System.out.println(symmetry("��������")); System.out.println(symmetry("456654")); System.out.println(symmetryStr("45654")); &#125; /** * �ж�һ����ֵ�Ƿ��ǻ����������ĵ��ص��ǣ�����д��ԭ����һ���ġ� * * @param number */ public static boolean symmetry(int number) &#123; int i = 0; int sum = 0; int record = number;// ����ԭ��¼�� while (true) &#123; i = number % 10; sum = sum * 10 + i; number /= 10; if (number == 0) break; &#125; // �жϵ�����д�������Ƿ���ԭ��������һ���ġ� if (sum == record) &#123; return true; &#125; else &#123; return false; &#125; &#125; /** * �ж�һ�����Ƿ��ǻ��Ĵ������ĵ��ص��ǣ�����д��ԭ����һ���ġ� * ʹ��ջ�ķ�ʽ�����бȽϡ��������ĳ�����һ��������������һ���м���û�ж�Ӧ�������бȽϡ� * ���᷵��false * @param string */ public static boolean symmetry(String string) &#123; // ��ȡ���ַ��ĳ��� char[] charArray = string.toCharArray(); // ��ʼ��ջ Stack&lt;Character&gt; stack = new Stack&lt;Character&gt;(charArray.length / 2 + 1); for (int i = 0; i &lt; charArray.length / 2; i++) &#123; // ǰһ�����ַ�����ջ�� stack.push(charArray[i]); &#125; for (int j = charArray.length / 2; j &lt; charArray.length; j++) &#123; Character character = stack.pop(); // ջ���Ѿ�û��Ԫ���˻������ַ�����ͬ if (null == character || character != charArray[j]) &#123; return false; &#125; &#125; return true; &#125; /** * �ж�һ�����Ƿ��ǻ��Ĵ������ĵ��ص��ǣ�����д��ԭ����һ���ġ� * @param string */ public static boolean symmetryStr(String string) &#123; char[] charArray = string.toCharArray(); int start = 0; int end = charArray.length - 1; while (start &lt;= end) &#123; if (charArray[start] != charArray[end]) &#123; return false; &#125; start++; end--; &#125; return true; &#125;&#125; ��ŵ������1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950package datastructure.part.one;import java.util.Scanner;/** * @description * @author Denghs * @version 1.0,2018��2��7�� ����9:37:53 * @remark ��ŵ������ */public class HanNuoTa &#123; public static void main(String[] args) &#123; System.out.println("����һ�����֣�"); Scanner scanner = new Scanner(System.in); //������ int number = scanner.nextInt(); //�������� String poleA = "����A"; String poleB = "����B"; String poleC = "����C"; //A�����ϵ����ӣ�����B���ӣ��ƶ���C���� hanNuoTa(number, poleA, poleB, poleC); scanner.close(); &#125; /** * @param number ������ * @param poleA �������ڵ����� * @param poleB ��Ҫ���������� * @param poleC �����ƶ��������� */ private static void hanNuoTa(int number, String poleA, String poleB, String poleC) &#123; /* ������1������ ֱ�ӽ�A�����ϵ����Ӵ�A�ƶ���C ���� �Ƚ�A�����ϵ�n-1�����ӣ�����C�ƶ�B ֱ�ӽ�A�����ϵ����Ӵ�A�ƶ���C ������B�����ϵ�n-1�����ӣ�����A�ƶ�C*/ if(1 == number)&#123; System.out.println("������Ϊ-" + number + "�����ӣ�ֱ�Ӵ�����-" + poleA + "�ƶ�������-" + poleC); &#125;else&#123; hanNuoTa(number-1, poleA, poleC, poleB); System.out.println("������Ϊ-" + number + "�����ӣ�ֱ�Ӵ�����-" + poleA + "�ƶ�������-" + poleC); hanNuoTa(number-1, poleB, poleA, poleC); &#125; &#125; &#125;]]></content>
      <categories>
        <category>���ݽṹ</category>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[HTTPЭ���������ع�]]></title>
    <url>%2F2018%2F10%2F28%2Fhttp-protocol%2F</url>
    <content type="text"><![CDATA[HTTP HTTP�����ı�����Э�飩��һ��������������Ӧģʽ�ġ���״̬�ġ�Ӧ�ò���Э�飬������TCP�����ӷ�ʽ��HTTP1.1�汾�и���һ�ֳ������ӵĻ��ƣ�����������Web���������ǹ�����HTTPЭ��֮�ϵ�WebӦ�á�HTTP���������������ֽ������ӣ��Ĵλ��ֶϿ����ӡ����ն���Ϊ�˽��пɿ��������������ﲻ������˵����������Ȥ�������ġ�TCP/IP���⡷�������顣 HTTPЭ���İ汾��HTTP/1.0��HTTP/1.1�汾 HTTP/1.1�汾�����汾�����˳־����ӣ�����˵֮ǰ�汾��Э��һ����������һ��TCP���ӣ��������ɺ��������Ӿ͹رյ��ˡ�������֪TCPЭ���ǿɿ��ģ�����������Ҫ3�����֣��Ͽ�������Ҫ4�λ��֣�����TCP���������ƺ�ӵ�����ƣ�������ʼ���ƣ��ս�������ʱ�����Ƚ��������ǱȽϺķ���Դ�ġ�һ���ḻ��ҳ����������ͼƬ�������ͳ����ӡ������Ļ��ͻ��ж��ε�HTTP�����������������汾��Ĭ�ϲ��ر�TCP����Ҳ��������Connection: keep-alive�ֶΡ�����ȷʵҪ�رտ���ָ��Connection: close�ֶΡ��������˹ܵ����ƣ�����˵��һ��TCP����������ͬʱ���Ͷ���HTTP���󣬶����صȴ���һ��������Ӧ�ɹ��ٷ��͡���������PUT��PATCH��HEAD�� OPTIONS��DELETE������ḻ�˿ͻ��˺ͷ����˽�����������������Host�ֶΡ� HTTPЭ�����ص�HTTPЭ������״̬������˵ÿ��HTTP�������Ƕ����ģ��κ���������֮��û��ʲô��Ȼ����ϵ��������ʵ��Ӧ�õ��в�������ȫ�����ģ�������Cookie��Session���������������� ����HTTP�����ڿͻ���������ҳʱ���������²�����һ���������ܳɹ��ģ���������������ӦHTMLҳ�棬Ȼ���������յ���Ӧ֮������HTMLҳ�滹��������������Դ�����磬CSS��JS�ļ���ͼƬ�ȵȣ������Զ�����HTTP������Щ��Ҫ����Դ�����ڵ�HTTP�汾֧�ֹܵ����ƣ�����ͬʱ��������Ӧ�������󣬴���������Ч�ʡ� ����TCPЭ��HTTPЭ��Ŀ���ǹ涨�ͻ��˺ͷ��������ݴ����ĸ�ʽ�����ݽ�����Ϊ�������������ݴ�����ϸ�ڡ��ײ��ǻ���TCPʵ�ֵġ�����ʹ�õİ汾������Ĭ�ϳ־����ӵģ�Ҳ���Ƕ���HTTP����ʹ��һ��TCP���ӡ� ����1234567891011public class TcpSever &#123; public static void main(String[] args) throws Exception &#123; ServerSocket ss = new ServerSocket(10000); Socket s = ss.accept(); InputStream in = s.getInputStream(); byte[] by = new byte[1024]; int len = in.read(by); System.out.println(new String(by, 0, len)); &#125;&#125; дһ���򵥵�HTML�ļ�����һ��form������ ����ͷget��������ʽ1&lt;form action="http://127.0.0.1:10000" method="get"&gt; 123456789GET /?userName=jiujiu&amp;pass=123&amp;sex=nan&amp;hobby=sports&amp;country=CN&amp;province=GZ&amp;area=GZ&amp;btn1=%CC%E1%BD%BB%B1%ED%B5%A5 HTTP/1.1Accept: text/html, application/xhtml+xml, */*Accept-Language: zh-Hans-CN,zh-Hans;q=0.8,en-US;q=0.5,en;q=0.3User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; rv:11.0) like GeckoAccept-Encoding: gzip, deflateHost: 127.0.0.1:10000DNT: 1Connection: Keep-Alive Get��ʽ���ص㣺���͵���������URL��ַ�����ƣ�����������ֱ��ƴ��URL��ַ�������ʺſ�ʼ��?�����������ָ��������ſ�ʼ��&amp;����ֱ�Ӵ������Ļ����룬HTTPͷ�ֶ�ֻ����ASCII��ֵ���ݡ�jsp�п���ͨ��URLEncoder.encode()ת����ASCII��ֵ�� post��������ʽ1&lt;form action="http://127.0.0.1:10000" method="post"&gt; 12345678910111213POST / HTTP/1.1Accept: text/html, application/xhtml+xml, */*Accept-Language: zh-Hans-CN,zh-Hans;q=0.8,en-US;q=0.5,en;q=0.3Content-Type: application/x-www-form-urlencodedUser-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; rv:11.0) like GeckoAccept-Encoding: gzip, deflateHost: 127.0.0.1:10000Content-Length: 105DNT: 1Connection: Keep-AliveCache-Control: no-cacheuserName=hehe&amp;pass=4321&amp;sex=nan&amp;hobby=sports&amp;country=CN&amp;province=GZ&amp;area=GZ&amp;btn1=%CC%E1%BD%BB%B1%ED%B5%A5 Post��ʽ���ص㣺���͵������������ơ������������Ƿ����������С� ��������ͷ˵�� ����ͷ���������ķָ�������һ�����и����ġ� ��һ��Ϊ�����У�����������ʽ��HTTPЭ���汾�š� Accept: ��������֧�ֵ��������͡� Accept-Charset: ��������֧�ֵ��������͡� Accept-Encoding: ������֧�ֵ�ѹ����ʽ Accept-Language: ������֧�ֵ����Ի��� Host: ��������̨���� If-Modified-Since: �������ݵ�ʱ�䡣������Ϊ���������ܣ�һ�������Ỻ����һ�ε������������ڻ�������ʱ���ڣ���ֱ���ұ��ػ������ݡ� Referer: �ͻ����Ǵ��ĸ�ҳ�����ġ����ã��������������жϣ����з������� Connection: ���������ǶϿ����Ǳ������ӡ� ��Ӧͷ��ͼ��һ��IE������HttpWatch��׽����һ������������������ͷ���ұ�����Ӧͷ�� ������Ӧͷ˵��1234567891011121314151617181920HTTP/1.1 200 OKServer: bfe/1.0.8.18Date: Wed, 05 Jul 2017 01:49:57 GMTContent-Type: text/html; charset=utf-8Transfer-Encoding: chunkedConnection: keep-aliveVary: Accept-EncodingCache-Control: privateCxy_all: baidu+63b9ff6074957f7dc4b1c7d31442fcfdExpires: Wed, 05 Jul 2017 01:49:46 GMTX-Powered-By: HPHPX-UA-Compatible: IE=Edge,chrome=1Strict-Transport-Security: max-age=172800BDPAGETYPE: 1BDQID: 0xfafa4d1200006790BDUSERID: 0Set-Cookie: BDSVRTM=0; path=/Set-Cookie: BD_HOME=0; path=/Set-Cookie: H_PS_PSSID=1425_21115_17001_23632_20929; path=/; domain=.baidu.comContent-Encoding: gzip ��һ��Ϊ״̬�У�״̬�����ڱ�ʾ�������������Ĵ���������Location: ��ת�����ͨ���Ǹ�״̬��302һ�����֡�Server: �������������������ͺ�Content-Encoding: ���������������ݵ�ѹ����ʽContent-Length: �������������������ݵĳ���Content-Type: �������������������ݵ�����Content-Language: ���Ի���Refresh: ��������������ʱˢ��Content-Dispostion: ���������������ط�ʽ��������Transfer-Encoding: �������Էֿ鷽ʽ���͵�Expires: -1Cache-Control: no-cachePragma: no-cache�����������ǿ�����������Ҫ���档 ������״̬��100��199����ʾ�ɹ�����������Ҫ���ͻ��˼����ύ��һ��������������������������200��299����ʾ�ɹ����������������������������̣�����200��OK��300��399��Ϊ�������󣬿ͻ�����һ��ϸ�����������磬��������Դ�Ѿ��ƶ�һ���µ�ַ������302��304��δ�Ķ�����307����ʱ�ض�����400��499���ͻ��˵������д��󣬳���404���Ҳ�����Դ��500��599���������˳��ִ��󣬳���500���ڲ������������� ��Ӧ����Ӧͷ����Ӧ��֮��Ҳ����һ�����зָ��ġ���Ӧ�������ݶ��Ƕ��������ݣ��������ܽ����� ����HTTP�ĳ������⼰����GET��POST������ ��������˼��HTTP�Ĺ淶������GET���ڻ�ȡ��Դ��Ϣ��POST������������Դ��Ϣ�� GET�ύ����������ʵ��������URL�ĺ��棬��?���ָ������&amp;���ӣ��ٸ����ӣ�/index.html?name=wang&amp;login=1 GET�ύ�����ݳ����������Ƶģ���ΪURL���������ƣ������ĳ�����������������������POSTû�С� GET�ύ�����ݲ���ȫ����Ϊ�������ᱩ¶��URL�ϡ� 408 Request Timeout��504 Gateway Timeout������408��˵������ʱ�����ǽ�������֮����Լ����ʱ���ڿͻ���û�з������󵽿ͻ��˵������ˡ�������ԭ�����ڿͻ��˻�������ӵ����504�����س�ʱ����˵�����������ѿͻ�������ת����Ӧ�÷���������Լ����ʱ����û���յ�Ӧ�÷���������Ӧ��������ԭ�����ڷ����˵���Ӧ������Ҳ�п������������⡣ Cookie��Session����������ϵCookie��Session����Ϊ�˱����ͻ��˺ͷ�����֮���Ľ���״̬��ʵ�ֻ��Ʋ�ͬ��������ȱ�㡣����һ����������������Cookie�Ǳ����ڿͻ��˶�Session�ͱ����ڷ����˵ġ�Cookie�ǿͻ�������������ʱ�������ὫһЩ��Ϣ�Լ�ֵ�Ե���ʽ���ظ��ͻ��ˣ��������������У�������ʱ�����Լ�����ЩCookieֵ����Cookie�Ϳ��Է�������һЩ���档Cookie��ȱ���Ǵ�С�������������ƣ�Cookie�Ǵ��ڿͻ��˵Ŀ��ܱ����á�ɾ�����۸ģ��ǲ���ȫ�ģ�Cookie�����ܴ���ÿ��Ҫ������Ҫ���ϣ�������Ӱ���˴���Ч�ʡ�Session�ǻ���Cookie��ʵ�ֵģ���ͬ����Session���������ڷ����ˣ�����ÿ�δ�����ʱ�򲻻ᴫ�����ݣ�ֻ�ǰѴ���һ���ͻ��˵�ΨһID��ͨ����JSESSIONID��д�ڿͻ��˵�Cookie�У�����ÿ�δ�������ID�Ϳ����ˡ�Session�����ƾ��Ǵ���������С���Ƚϰ�ȫ������SessionҲ��ȱ�㣬��������Session���������Ĵ�������ʧЧ�����ڡ���ʧ����Session���ർ�·������ڴ�����������Ҫʵ��һ���ȶ����ð�ȫ�ķֲ�ʽSession����Ҳ����һ�����Ӷȵġ���ʵ��ʹ���о�Ҫ����Cookie��Session����ȱ�����Բ�ͬ�����������ƽ���������]]></content>
      <categories>
        <category>HTTPЭ��</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[��ס���Լ��Ķ�ʱ��]]></title>
    <url>%2F2018%2F10%2F28%2Ffirst-article%2F</url>
    <content type="text"><![CDATA[���� һֱ���뽨���Լ��ĸ��˲���վ�㡣ֻ���ڽ������¸������ж�������Ҳ������һ�����̱���˳����¼һ���Լ��ĸ��룬�Լ������ҵļƻ�������ǰ�ıʼ����ܽ����������� ÿ������8�㵽10�㣬�����Լ���ѧϰʱ�䡣���顢��һЩ�������޹صĴ��롣���£�ÿ�춼�ڼ��֡��������������� һ����Ŀ�꣬��ϣ����ʮ�����ܳ�Ϊһ������������Сţ�����Լ��ܸ�Ч�������ؽ����������⣬���ǲ�����ҵ��Ч�Ĺ���������������������������������ˮƽ�� 2017�꣬�������䲢���̺ñ��̻�������֪ʶ��Java���Ժ������ԡ�ͬʱ��ϰ�Կ����Ƶ��Ļ�֪ʶ��ÿ���¶�ʱ�ĸ��ٺ͵�������СĿ�꣬�����Լ�ǰ�С� 2019�꣬˳���Կ�����ͨ��������������һ�����¡���������ʹ�����ǣ�һ�����ں����жȹ��� ��һ������ѧϰ�ߣ�ϣ�����˲��͵�����������50����ʱ���㹻�޶���һ��ɢ�����ǡ� ���˲��Ͳ���node.js+hexo+github��ģ�������Ȥ�������аٶȻ������ʼ����ҡ�]]></content>
      <categories>
        <category>����</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[���������ԡ��۲�������ģʽ]]></title>
    <url>%2F2018%2F10%2F28%2Ffactory-design%2F</url>
    <content type="text"><![CDATA[������һ����ǰ�Թ��������ԡ��۲�������ģʽ�Ĵ���ʵ�֡� �򵥹�������ģʽ�򵥹�������ģʽ���������ڱ�׼��23������ģʽ֮һ��12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364//�˹�������service�Ĵ���public class ServiceFactory &#123; private static final ServiceFactory instance = new ServiceFactory(); private ServiceFactory() &#123; &#125; public static ServiceFactory getInstance() &#123; return instance; &#125; //���ؾ��������Ĵ������� public &lt;T&gt; T createService(String className, Class&lt;T&gt; clazz, final User user) &#123; if (null == className || "".equals(className.trim()) || null == clazz) &#123; return null; &#125; try &#123; final T t = (T) Class.forName(className).newInstance(); return (T) Proxy.newProxyInstance(ServiceFactory.class .getClassLoader(), t.getClass().getInterfaces(), new InvocationHandler() &#123; @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable &#123; // 1.�ж��û����õ���ʲô���� String methodName = method.getName(); // 2.��������ʵ����������Ӧ�ķ��� Method m = t.getClass().getMethod(methodName, method.getParameterTypes()); // 3.����ʵ����������Ӧ�ķ����Ƿ���Ȩ��ע�� Permission p = m.getAnnotation(Permission.class); // 4.����û��,�������ʸ÷�������ҪȨ��,ֱ�ӷ��� if (p == null) &#123; return method.invoke(t, args); &#125; // 5.������,�õ��÷�����ҪʲôȨ��, String value = p.value(); Privilege privilege = new Privilege(); privilege.setName(value); // 6.�õ��û���Ȩ�� if (user == null) &#123; throw new PrivilegeException("�Բ���,���ȵ�¼!"); &#125; BusinessService service = (BusinessService) t; List&lt;Privilege&gt; list = service .getUserPrivilege(user.getId()); // 7.�����û��Ƿ���Ȩ��,������Ȩ��,���� if (list.contains(privilege)) &#123; return method.invoke(t, args); &#125; // 8.����û��Ȩ��,���ױ���ʱ�쳣,��ʾweb�����û�һ���Ѻ���ʾ throw new PrivilegeException( "�Բ���,��û������Ӧ�ķ���Ȩ��,����ϵ����Ա!"); &#125; &#125;); &#125; catch (Exception e) &#123; throw new RuntimeException(e); &#125; &#125;&#125; ServiceFactory�ṩһ���������񷽷���createService()����Ҫ�����÷������������ķ����������󡣴�������������ִ�з���ʱ������һ��ҵ���߼���������ʵ���δ�������������������˼�루AOP˼�룩������ҪĿ��ʵ�ֽ����ȡִ�з����ϵ�ע�⡣spring�м������ϵ�@Service��@Controller��@Component���Լ����Լ������Ϻͷ����ϵ�@Transactionalע�⣬ԭ���������Ƶġ� ���ö���ʽ�ļ򵥹���ģʽ123456789101112131415161718192021package cn.utils;//���͹���public class DaoFactory &#123; private DaoFactory()&#123;&#125; private static final DaoFactory instance = new DaoFactory(); public static DaoFactory getInstance()&#123; return instance; &#125; public &lt;T&gt; T createDao(String className,Class&lt;T&gt; clazz)&#123; try &#123; return (T) Class.forName(className).newInstance(); &#125; catch (Exception e) &#123; throw new RuntimeException(e); &#125; &#125; &#125; �۲�������ģʽ��˵�۲�������ģʽ֮ǰ����Ҫ��һ���������¼�������Event�¼�������װ���¼�Դ�������� �¼��������� �¼������漰�����������¼�Դ���¼��������¼������� ���¼�Դ�Ϸ���ĳһ������ʱ�����������¼���������һ�����������ڵ��ø÷���ʱ�����¼����󴫵ݽ�ȥ�� ����ʵ��1234567891011121314151617181920212223242526//�۲�������ģʽpublic class ObserverDemo &#123; public static void main(String[] args) &#123; Person p = new Person(); System.out.println("Person������" + p); //ע��һ�������� p.registerListen(new PersonListen() &#123; //ִ�о����¼��������� @Override public void doeat(Event e) &#123; Person person = e.getSource(); System.out.println("�������¼�Դ��" + person + "������eat()����"); &#125; @Override public void dorun(Event e) &#123; System.out.println("�������¼�Դ������eat()����"); &#125; &#125;); p.eat(); p.run(); &#125;&#125; 123456789101112131415161718192021222324public class Person &#123; //�¼������� private PersonListen personListen; public void eat()&#123; System.out.println("Person eat()"); if (personListen != null) &#123; System.out.println("������personListen doeat()"); personListen.doeat(new Event(this)); &#125; &#125; public void run()&#123; System.out.println("Person run()"); if (personListen != null) &#123; System.out.println("������personListen dorun()"); personListen.dorun(new Event(this)); &#125; &#125; public void registerListen(PersonListen personListen)&#123; this.personListen = personListen; &#125;&#125; 12345//�¼������ӿ�public interface PersonListen&#123; public void doeat(Event e); public void dorun(Event e);&#125; 1234567891011121314151617181920//�¼�����public class Event&#123; private Person source; public Event() &#123; &#125; public Event(Person source) &#123; this.source = source; &#125; public Person getSource() &#123; return source; &#125; public void setSource(Person source) &#123; this.source = source; &#125;&#125; ���н���Java�г��õĸ��ּ������ǹ۲�������ģʽ�� ��������ģʽ���ܲ��������Խ����Ĵ�����ʽ���Խ����Ĵ����ɵ����߽��д��롣��ֻ�ǰѶԽ����Ĵ�����ʽ���ɽӿڣ�ͨ���ӿ���Լ��˫������Ϊ�� ����1234//ͨ���ӿ�Լ��˫������Ϊpublic interface ResultSetHandler &#123; Object handler(ResultSet rs);&#125; 1234567891011121314151617181920212223242526272829303132333435//�����Ե�һ�����ķ�װpublic class BeanHandler implements ResultSetHandler &#123; private Class clazz; //�û���Bean������ public BeanHandler(Class clazz)&#123; this.clazz = clazz; &#125; @Override public Object handler(ResultSet rs) &#123; try&#123; if(!rs.next())&#123; return null; &#125; Object bean = clazz.newInstance(); //��ȡ��������Ԫ��Ϣ ResultSetMetaData metadata = rs.getMetaData(); //�õ����������м������� int ColumnCount = metadata.getColumnCount(); for(int i=0;i&lt;ColumnCount;i++)&#123; //�õ�ÿ�е����� String ColumnName = metadata.getColumnName(i+1); //ͨ��������ȡÿһ�е����� Object ColumnData = rs.getObject(i+1); //������������������Ӧ������ Field f = clazz.getDeclaredField(ColumnName); f.setAccessible(true); f.set(bean, ColumnData); &#125; return bean; &#125;catch (Exception e) &#123; throw new RuntimeException(e); &#125; &#125;&#125; 1234567891011121314151617181920212223242526272829303132//������List�ķ�װpublic class BeanListHandler implements ResultSetHandler &#123; private Class clazz; //�û���Bean������ public BeanListHandler(Class clazz)&#123; this.clazz = clazz; &#125; @Override public Object handler(ResultSet rs) &#123; try&#123; List list = new ArrayList(); while(rs.next())&#123; Object bean = clazz.newInstance(); ResultSetMetaData metadata = rs.getMetaData(); int count = metadata.getColumnCount(); for(int i=0;i&lt;count;i++)&#123; String name = metadata.getColumnName(i+1); Object value = rs.getObject(name); Field f = bean.getClass().getDeclaredField(name); f.setAccessible(true); f.set(bean, value); &#125; list.add(bean); &#125; return list.size() &gt; 0 ? list:null; &#125;catch (Exception e) &#123; throw new RuntimeException(e); &#125; &#125;&#125; ��װ�Է����ľ���ϸ�������Բ�ѯ��һ�Ķ��󣬰Ѿ����Ĵ�����ʽBeanHandler���롣�����Բ�ѯһȺ�Ķ��󣬰Ѿ����Ĵ�����ʽBeanListHandler���롣�������δ����ǲ���JDBC������Ԫ���ݣ�ʵ��һ���򵥵�OR-Mappingӳ�����͵�DB���ܡ� Java�е����� ֮ǰ��˵��TreeSet���ϣ����Զ�Ԫ�ؽ������򡣵�������������֪����Ԫ�ظ���ô�ţ������ɵ����ߣ�ͨ��ʵ��Comparator�ӿڣ��Ѷ�Ԫ�ؽ���������ʽ���д��룬TreeSet���ո����ķ�ʽ���д����� mybatis�ж��ڲ�ѯ�Ĵ�������һ������������������Ҳ��ʹ�ò���ģʽ��ͨ��ʵ��ResultHandler�ӿڶԲ�ѯ�������д�����]]></content>
      <categories>
        <category>����ģʽ</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Ӧ�õı�Ǩ]]></title>
    <url>%2F2018%2F10%2F28%2Fevolution%2F</url>
    <content type="text"><![CDATA[ʱ���ڱ�Ǩ�������ڱ�����������Ļ���Ҳһֱ�ڷ����ű仯��ǳ̸һ�¶�Ӧ�ñ�Ǩ��һ��������֪������ȥ�������ֱ�Ǩ���������ε�ԭ���� ��ͳ��ֱ�ܹ��������ļǵõ�һ�δtomcat����һ����web���񡣴�jsp��servlet��JDBCʵ�ֱ�д�ĵ�һ��������webӦ�á�MVC�����ܹ���������ʵ������Strust2��Spring��SptringMVC��Hibernate��mybatis��ѧϰ�����⡢Ӧ�á������ĳ����㣬Ҳ����ֻ����Ҫ������Щ������������һ�����͵Ĵ�ֱ�ܹ�Ӧ�á�����Ӧ�ü���API���á� �ص㣺 �����Ƚϵ�һ����SSH��SSM�����ļ��ɣ� ѧϰ�ɱ��ͣ����ò����ص㡢�����˽���ԭ���� �������ֽϿ죨һ��������DEMO�����ܶ���ҵ�����п����� ���ԡ���������ά�Ƚϼ򵥣�LAMP�� ����Ӧ��ģ�鶼������ͬһ�������ڣ�һ���������ϣ������ڵ�崻��� ���������ļܹ�����Խ��Խ���Ĵ�ֱ�ܹ����칹ϵͳ֮����ͨ�������ݽ�����Ϊ��������RPC����Ϊ�������������������Ŀ��ܿ�ʼ���С���Dubbo+Zookeeper�ȼ�����RPC����ֻ��һ�ֽ��̼���ͨ�ŷ�ʽ�����������ñ��ط���һ������Զ�̷��񡣸��˾��ñȽ�ԭʼһ�������������ļܹ���Ӧ���ǻ���WebService���ESB����ҵ�������ߣ�������Ҫ�������ı�����һ��������UDDIĿ¼��WSDL˵���顢SOAPЭ�顣ʵ�ֿ�ƽ̨�������Եķ�������Ȼ����RESTful�� ΢�����ܹ�Ŀǰ�ܹ������ģ�Ҳ������ԭ�ӷ�����רע����һ���£������ھۡ������ϡ�������Խ��һ��Ҳ����ζ�Ŷ������Ĺ�������Խ�١������ĸ��ܶȲ��������ݽ�����΢���Σ���ʱû�������� �ܽ��˽���ʷ���ݽ����̣����������Լ������ĸ������С������������������������˳��и�����ȥѡ��ѧϰ���ص㼼�����������������Ƶ�ȥ׷�𡣸��˸о����������������ķ�չ�е����ơ��ӵ�̨���������������������������������Ӿ�������CSMA/CDЭ�飬���������ĵ��Ե�Э�飨PPPЭ�飩��]]></content>
      <categories>
        <category>����</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[װ�Ρ���������ģʽ]]></title>
    <url>%2F2018%2F10%2F28%2Fdesign-pattern%2F</url>
    <content type="text"><![CDATA[֮ǰ��˵��������ģʽ��ʱ���ᵽ��������ģʽ��������������Ч�Ľ��������������ٻع�һ���Լ���Ϥ��װ�Ρ����������������ԡ��۲�������ģʽ����˵װ�Ρ���������ģʽ�� װ������ģʽ����Ҫ�����еĶ������й�����ǿʱ�����Զ����࣬�����ж������룬�������ж����Ĺ��ܣ��ṩ��ǿ���ܡ���ô�Զ����ĸ�����Ϊװ���ࡣװ���ࡣͨ����ͨ�����췽�����ձ�װ�εĶ��󣬲����ڱ�װ�ζ����Ĺ��ܣ��ṩ��ǿ�Ĺ��ܡ�װ��ģʽ�ȼ̳�Ҫ��������˼̳���ϵ��ӷ�ס����ҽ�����������֮���Ĺ�ϵ��װ������Ϊֻ����ǿ���ж��󣬾߱��Ĺ��ܺ����ж�������ͬ�ģ�ֻ�����ṩ�˸�ǿ�Ĺ��ܣ�����װ�����ͱ�װ����ͨ������һ����ϵ�� ����123456789101112131415161718192021222324252627282930313233//װ������ģʽpublic class MyBufferedReader &#123; private Reader r; MyBufferedReader(Reader r) &#123; this.r = r; &#125; public String MyReaderLine() throws IOException &#123; // ����һ����ʱ����,ԭBufferedReader��װ�����ַ����� StringBuilder sb = new StringBuilder(); int ch = 0; while ((ch = r.read()) != -1) &#123; if (ch == '\r') continue; if (ch == '\n') return sb.toString(); else sb.append((char) ch); &#125; if (sb.length() != 0) return sb.toString(); return null; &#125; public int read(char[] cbuf, int off, int len) throws IOException &#123; return r.read(cbuf, off, len); &#125; public void close() throws IOException &#123; r.close(); &#125;&#125; ��ǿReader����ǿһ��MyReaderLine����һ�У��ķ������������ķ������ǵ���ԭ�������ķ����������г��õ���������ͼ��������������д��һ�������෽�������ǹ��ܲ���ǿ���ȽϷ����������ǲ���ֱ��ȥ�����������෽������Ϊ���������෽�������кܶ��ط������˵��á�Ҫôд���������и��ǣ�Ҫô������ǿ����Ҳ��װ�ε�һ���ַ��� ��һ��Java���󷽷������õ�ʱ���������·������������⡣ дһ�����࣬����ĳ�����������������Ѿ���װ����Ϣ�����ٽ���ʹ�ô˷����� дһ�������İ�װ�࣬��ǿĳ������������װ��ʽ�Ƚϸ���ʱ��ʹ�ô���ģʽ�� ʹ�ô���ģʽ������һ������������ȥ������ĳ�������ĵ��ã�������������ǿ�� ����ģʽ����ģʽ�е����������뾭����һ����������Ҫ����̬������ĳ�����ز���˾����ĳ���Ǵ��ԣ�ֱ���Ҹ����ǵľ�����̸������ϸ�ڣ�̸��֮����ʵ�ʵĴ�����������ȥ��������һ��˼·��������������ôʵ�֡�1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768//�����ӿ� public interface Subject &#123; String sing(String name); String dance(String name);&#125;//����public class Star implements Subject &#123; public String sing(String singName) &#123; System.out.println("Star sing()����" + singName + "��!"); return "����!"; &#125; public String dance(String danceName) &#123; System.out.println("Star dance()����" + danceName + "��!"); return "��л�ϰ�!"; &#125;&#125;//���ǵľ�����public class StarProxy &#123; private Subject star = new Star(); public Subject getProxy()&#123; return (Subject) Proxy.newProxyInstance( StarProxy.class.getClassLoader(), star.getClass().getInterfaces(), new InvocationHandler() &#123; /** * proxy:�Ѵ��������Լ����ݽ��� * method:�Ѵ���������ǰ���õķ������ݽ��� * args:�ѷ����������ݽ��� **/ public Object invoke(Object proxy, Method method, Object[] args) throws Throwable &#123; // ����ָ�����ش��������ĸɵĹ��� if(method.getName().equals("sing"))&#123; //ִ��ҵ���߼����� System.out.println("StarProxy����һ����Ǯ��"); return method.invoke(star, args); &#125; if(method.getName().equals("dance"))&#123; //ִ��ҵ���߼����� System.out.println("StarProxy����������Ǯ��"); return method.invoke(star, args); &#125; return null; &#125; &#125;); &#125;&#125;public class Test &#123; public static void main(String[] args)&#123; StarProxy proxy = new StarProxy(); Subject s = proxy.getProxy(); System.out.println(s.dance("����")); &#125;&#125; �������£�Proxy����newProxyInstance()��JDK�Դ��Ķ�̬�����������������������ڽӿڽ��д��������ض���ʵ�����ķ��ʡ�����������Ҫ�߱�����ʵ������ͬ����Ϊ�������������ջ�������ʵ����ʵ�־�������Ϊ��newProxyInstance()��������������������һ���������������ڶ������ĸ��ӿڣ��������Ǹ�ʲô��Ϊ������һ����û�нӿڣ�Ҫʹ�ö�̬��������Ҫʹ��CGLib��spring��AOP�����ֽ����˲��á�JDK���س��Ĵ��������ǻ��ڽӿ����ɵġ�CGLib���س��Ĵ��������ǻ����������ɵģ������಻�ܱ�final���Ρ�]]></content>
      <categories>
        <category>����ģʽ</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[����˲���վ������]]></title>
    <url>%2F2018%2F10%2F28%2Fdecrypt-blog%2F</url>
    <content type="text"><![CDATA[�Դ���˲���վ���Ĳ���������ϸ�عˣ�����¼������ϲ��ͼ�Ĳ�ï���ܽ��Ǽ����Լ���ѧϰЧ���������й��̡� ϵͳ�������� ֮ǰ˵�����˲��Ͳ���node.js+hexo+github���Ҫʹ��hexo����Ҫ������ϵͳ��֧��node.js�Լ�Git��������û�У��Ǿ���Ҫ��װ�� ��װnode.js �����밲װ��ַ��http://www.runoob.com/nodejs/nodejs-install-setup.html �������Լ�����ϵͳ��λ���������أ����ﲻ�ڲ����� ����node.js�Ƿ���װ�ã�����ͼ�� ��װGit �����밲װ��ַ��https://git-scm.com/download/ �������Լ�����ϵͳ��λ���������أ����ﲻ�ڲ����� ����Git�Ƿ���װ�ã�����ͼ�� ��װhexo��װ��Git�����Ҽ�����Git Bash�����뱾��Git����̨��1234567$ cd d:/hexo # �����а�װ������Ŀ¼$ npm install hexo-cli -g # ʹ�ð���������npm��װhexo��-g��ȫ�ְ�װ$ hexo init blog # ��ʼ����blogĿ¼�У�������ѡ��$ cd blog # ����blogĿ¼$ npm install # ���ذ�װ$ hexo g # ����hexo generate�����ڵ�ǰ·��������public�ļ���$ hexo s # ����hexo server��������http://localhost:4000/ �鿴 �����б�Ҫ����Hexo���õļ������123$ hexo generate (hexo g) ���ɾ�̬�ļ������ڵ�ǰĿ¼������һ���µĽ���public���ļ���$ hexo server (hexo s) ��������web���������ڲ��͵�Ԥ��$ hexo deploy (hexo d) ���𲥿͵�Զ�ˣ�����github, heroku��ƽ̨�� ���ü�д1234$ hexo n == hexo new$ hexo g == hexo generate$ hexo s == hexo server$ hexo d == hexo deploy ���ڴ���http://localhost:4000/�Ѿ����Կ���һƪ���õ�blog�ˡ� ��װ���õı��ػ������£�(����ͨ��Git����̨����hexo -v�鿴) hexo������������������yiliaΪ������˵�������԰ٶ�����hexo���⣬�кܶࡣ ��װ����12$ hexo clean$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia ���������޸�blogĿ¼�µ�_config.yml�����ļ��е�theme���ԣ���������Ϊyilia�� ��������12345$ cd d:/hexo/blog/themes/yilia$ git pull # # ȡ��Զ�ֿ̲��ı仯�����뱾�ط�֧�ϲ�$ cd d:/hexo/blog$ hexo g # �����µľ�̬�ļ�$ hexo s # ��������web������ ���ڴ���http://localhost:4000/���ῴ�Ѿ�Ӧ����һ���µ����⡣ GitHubע��GitHub��ַ��http://www.github.com/ע������ username �����䣬����ʮ����Ҫ��GitHub �Ϻܶ�֪ͨ����ͨ�����䷢�͡� ���ú�ʹ�� GitHub ��¼GitHub����������ҳ������Start a project ����ͼʾ������.github.io��β�ֿ⡣��ɫ��̾�ţ�����Ϊ�ҵĲֿ��Ѿ�����ͬ����Ŀ�ˡ������ڻ���ʾ��ɫ����ͼ�� �½��Ĳֿ⣬��Ҫ��һ���ύ��¼�����򲿷־���һ��ʾ������Git����̨�������롣����֮ǰ���ñ��� git ��Ŀ��Զ�̵� GitHub ������ϵ�� ���� SSH keys���� SSH keys������1$ cd ~/.ssh # ���鱾����ssh��Կ ������ʾ��No such file or directory��˵�����ǵ�һ��ʹ�� git�������а�.ssh�ļ��������ļ���ɾ����.ssh·��Ϊ��’C:\Users\your_user_directory\’�������ҵ�’C:\Users\DELL\’ �����µ� SSH Key��12345$ ssh-keygen -t rsa -C &quot;������ַ@youremail.com&quot; # GitHubע����������ַ��-CΪ��д��C$ Generating public/private rsa key pair. # ���÷ǶԳƼ����㷨RSA���ɹ�Կ��˽Կ$ Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa): # �س��ͺ�$ Enter passphrase (empty for no passphrase): # ���δ������������ܴ�$ Enter same passphrase again: # ���δ������ٴ��������ܴ� SSH key���óɹ����棺 ���� SSH Key �� GitHub �򿪱��� id_rsa.pub �ļ����ο���ַ C:\Users\DELL.ssh\id_rsa.pub�������ļ���������Ϊ�ղ����ɵ���Կ�����������������ļ�������Ҫ������ʾ�����ļ���׼ȷ�ĸ��������ļ������ݣ����ܱ�֤���õĳɹ��� ��½ GitHub �˺š��������Ͻǵ� Account Settings—&gt;SSH Public keys —&gt; add another public keys �ѱ������ɵ���Կ���Ƶ����棨 key �ı����У��� ���� add key ��ok�� ʹ��Git����̨���е�һ���ύ�½�һ���ļ��У��Ҽ�����Git Bash�����뱾��Git����̨��123456$ echo &quot;# test&quot; &gt;&gt; README.md$ git init$ git add README.md$ git commit -m &quot;first commit&quot;$ git remote add origin https://github.com/denghuashan/denghuashan.git.io.git$ git push -u origin master ��ʱ��Ҫ������username��password ����GitHub�ֿ�F5ˢ��һ�� �������Ͻ�Fork��ʱ������ͨ������http://denghuashan.github.io/�����ˡ������ڻ�û�����ݣ����ż��� ����hexo��Github���Ǻܹؼ���һ�������ڱ���web������Ԥ�����Ĳ��Ͳ�����github�ϣ�Ȼ���Ϳ���ֱ��ͨ��http://denghuashan.github.io/�����ˡ�12$ cd d:/hexo/blog$ git clone https://github.com/denghuashan/denghuashan.github.io.git .deploy/denghuashan.github.io ��֮ǰ������repo��¡�����أ��½�һ��Ŀ¼����.deploy���ڴ��ſ�¡�Ĵ��롣 ����һ��deploy�ű��ļ�123456789$ hexo generate # �������µľ�̬�ļ�$ cp -R public/* .deploy/denghuashan.github.io # ����public�ļ����µ��ļ������زֿ���ȥ$ cd .deploy/denghuashan.github.io$ git add . # ���ӵ��ݴ���$ git commit -m ��update�� # ˵��Ϊupdate$ git push origin master # ���ͱ��ط�֧��Զ�ֿ̲�master��֧������username��password$ # ��d:/hexo/blog�½�һ��deploy.sh���ļ�������������ָ���shell�ű����´����͵��ֿ���ʱ����ֱ����Git����̨���á�$ cd d:/hexo/blog$ sh deploy.sh �ٷ���http://denghuashan.github.io���ͻῴ��hexo��webҳ���ˡ� blogĿ¼ ���ļ��м��ļ������� .deploy�����زֿ� node_modules��nodejs��hexo��֧�֣���Ҫɾ�� public��hexo���ɵľ�̬�ļ� source�������Ǹ�webappĿ¼����Ŀ¼�µ�_posts�ļ��о��Ǵ������µġ�Markdown�ļ������㲩�͵ı�д���༭�� themes�������ļ����Ŵ� blogĿ¼��_config.yml�ļ�����˵��1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: DreamMaker-HS # ���˲��͵ı��⡣html��head��ǩ�е�titlesubtitle: ��˼���ʣ��ɵ���ʦ���ѡ�# �ӱ���description: ��ѧ����־�����ʶ���˼.! # ����author: HuaShan # ������language: timezone:# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: http://dhsmp.com # ��������root: /permalink: :year/:month/:day/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace: # Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format ## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: yilia # ���⣬���Ը������⡣Ĭ����landscape# Deployment## Docs: https://hexo.io/docs/deployment.html# ������������Ҫ����deploy: # ����` type:github # ��������` repository:https://github.com/denghuashan/denghuashan.github.io.git # �ֿ���ַ` branch:master # ��֧` �󶨶�������123456$ cd d:/hexo/blog/source/$ touch CNAME$ vim CNAME # ������������$ git add CNAME$ git commit -m &quot;add CNAME&quot;$ sh deploy.sh # �������ɲ��ύ �����ڰ���������������������������һ���ġ���ȡGitHub��IP��ַ������sourceĿ¼�£�����CNAME�ļ���������ע���ṩ����������DNS������ �����߼����� �����Ѿ������ö����������з����ˣ�������һЩ�޸ġ���themes/(��ǰʹ������)/_config.yml�ļ������޸����á����ﲻ�ڲ�����������һЩ���ԣ�������ֻ���ᵽ����������ʹ�ã������������� ����Markdown�������µı༭����д ʹ�õ�ͼ��Ϊ��ţ�ƴ洢 + ����ͼ����https://portal.qiniu.com/signup?code=3lmipeyx3j782������������ע�ᣬ���Ը������Ӵ洢�ռ䡣лл�ˡ� ����404����ҳ�棬�Ƽ�ʹ����Ѷ����404��http://www.qq.com/404/ ����������һЩ�����Ĳ�������ͳ�Ʒ���������������ͳ�ơ������������ظ������֣��ȵȡ�]]></content>
      <categories>
        <category>����</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[�ع����ݽṹ�Ļ���֪ʶ]]></title>
    <url>%2F2018%2F10%2F28%2Fdata_struct%2F</url>
    <content type="text"><![CDATA[֮ǰ��дJava�е�����ʱ����д��һЩ�������ݽṹ�Ĳ��֣����Բο���Java��List��Set��Map������һ�ġ���������ϸ�ع�һ�¶����ݽṹ��ѧϰ�� C���Լ�ָ���ع��ֽڣ��洢���ݵĵ�Ԫ����Ӳ�����ܷ��ʵ���С��λ��1�ֽ�=8λ��1k=1024�ֽڣ�1M=1024k��1G=1024M������4G�ڴ��ĵ�����˵�����ܴ������������ǣ�4*1024*1024*1024*8��λ�Ķ��������ݡ������ڴ���ַ���ڴ浥Ԫ�ı��ţ����㿪ʼ�ķǸ�����ָ�룺ָ�����ǵ�ַ����ַ����ָ�롣ָ�������������ڴ浥Ԫ���ŵı��������Ǵ��ŵ�ַ�ı������ṹ�壺��һЩ������������������һ�����γ�һ���µĸ����������͡�һ��ָ��������������ָ���ı���ռ�����ֽڣ���ָ����������ֻռ4���ֽڡ��õ�һ���ֽڵĵ�ַ��ʾ���������ĵ�ַ��һ�������ĵ�ַ���øñ������ֽڵĵ�ַ����ʾ��CPUͨ����ַ���ߡ��������ߡ��������ߣ��׳��������ߣ������������ڴ档 ����һ���������������� ���������� ÿ�������Ĺ��� ���� ������ģ�����ӣ��㷨�����㴦������������123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960package datastructure.part.one;import java.util.Arrays;/** * @description * @author Denghs * @version 1.0,2017��11��23�� ����2:43:18 * @remark */public class TestOn &#123; public static void main(String[] args) &#123; long n = 10000; method1(n); method2(n); long start = System.currentTimeMillis(); long sum = method3(n); System.out.println("method3��" + (System.currentTimeMillis() - start) + "���룬sum=" + sum); &#125; /** * ��forѭ������1+2+3+...+100�ļ��㡣 �÷�����ʱ�临�Ӷ���O��n�� * @param n */ public static void method1(long n) &#123; long start = System.currentTimeMillis(); long sum = 0; for (long i = 1; i &lt;= n; i++) &#123; sum += i; &#125; System.out.println("method1�� " + (System.currentTimeMillis() - start) + "���룬sum=" + sum); &#125; /** * �ø�˹��ʽ����1+2+3+...+100�ļ��㡣 �÷�����ʱ�临�Ӷ���O��1�� * @param n */ public static void method2(long n) &#123; long start = System.currentTimeMillis(); long sum = (n + 1) * n / 2; System.out.println("method2�� " + (System.currentTimeMillis() - start) + "���룬sum=" + sum); &#125; /** * �õݹ��ķ�ʽ����1+2+3+...+100�ĺ͡���ֵ���󣬻ᵼ���ڴ��������ݹ鱾���Ǻ����Ĳ�ͣ��ѹջ����ջ�Ĳ��� * @param n */ public static long method3(long n) &#123; if(n == 1)&#123; return 1; &#125;else&#123; return n + method3(n-1); &#125; &#125;&#125; ����ͼ�����н����������ԵĿ����������������Ĺ�ģn=10000ʱ������method1��method2��method3�˴˵ļ�����ʱ����0���롣���ǵ�n������10��ʱ��method1����2���룬method3ֱ�����쳣�ˣ���method2��Ȼ��0���롣method1����forѭ���ķ�ʽ��method2���Ǹ�˹��ʽ��method3���õݹ��ķ�ʽ�������ݽṹ���򣬹����㷨��ʱ�临�Ӷȣ���һ�����㹫ʽ����O��ʾ�������ﲻ������˵�����̿������иù�ʽ�ļ��㷽�������ۡ� ���Խṹ���ݽṹ�й������ݵ��߼��ṹ��ֻ��Ϊ���Խṹ�����߳̽ṹ����ν�����Խṹ�����ǿ�����һ������ĳ��������������ô����ߵ����ܹ�һ�ΰ�Ԫ�ض������������Խṹ��ָԪ��ֻ����һ�����㡢һ���˵㣬�м���Ԫ��ֻ��һ��ǰ����һ�����̡� ˳�������԰Ѵ���һ����Ԫ�أ������ļ�ѹ��һ����������Ԫ�ؽ�����Ԫ�ء����Ϳ�����������һ��˳������˳������ʵ�������飬һ�θ�һƬ�����Ŀռ䣬Ȼ���ѿռ䰴һ��һ����С���ӻ��ֺá����ص��ǣ���CPU���ڴ����Ҳ�������һƬ�ķ���Ҫ���Ŀռ䣬�ᵼ�·���ʧ�ܡ�����ͨ������Ԫ�ظ��ӵĿ��ȣ�Ҳ����ƫ�������Եڼ���Ԫ�أ���ȡָ����ַ�ռ��ϵ�Ԫ�ء� ����ʾ��123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200#include &lt;stdio.h&gt;#include &lt;malloc.h&gt;#include &lt;stdlib.h&gt;//�����洢�������㷨struct Arr&#123; int * pBase; //�洢�����е�һ��Ԫ�صĵ�ַ int capacity; //��������Ԫ�ص��������� int length; //��ǰ��ЧԪ�صĸ���&#125;;void init_arr(struct Arr *, int capacity);//��ʼ������bool append_arr(struct Arr *, int value);//׷��Ԫ��bool insert_arr(struct Arr *, int index, int value);//��ָ���ĽǱ괦����Ԫ��bool delete_arr(struct Arr *, int index, int * delete_value);//ɾ��ָ���Ǳ괦��Ԫ�أ������ر�ɾ����Ԫ�ص�ֵint get(struct Arr *, int index);//��ȡָ���Ǳ���Ԫ��bool is_empty(struct Arr *);//�����Ƿ���bool is_full(struct Arr *);//�����Ƿ�����void sort_arr(struct Arr *);//��Ԫ�ص�ֵ��Ȼ����void print_arr(struct Arr *);//����Ԫ�ص�ֵvoid invert_arr(struct Arr *);//Ԫ��ֵǰ������void main()&#123; int delete_value; int get_value; struct Arr array; init_arr(&amp;array, 10); print_arr(&amp;array); printf("\n-------�ָ���-׷��-----\n"); append_arr(&amp;array, 10); append_arr(&amp;array, 6); append_arr(&amp;array, 2); append_arr(&amp;array, -1); append_arr(&amp;array, 9); print_arr(&amp;array); printf("\n-------�ָ���-����-----\n"); insert_arr(&amp;array, 0, 7); //insert_arr(&amp;array, 6, -18); //insert_arr(&amp;array, 1, 72); print_arr(&amp;array); /**printf("\n-------�ָ���-ɾ��-----\n"); bool flag = delete_arr(&amp;array, 5, &amp;delete_value); print_arr(&amp;array); if(flag)&#123; printf("��ɾ����Ԫ�ص�ֵ��%d\n", delete_value); &#125; printf("\n-------�ָ���-��ȡ-----\n"); get_value = get(&amp;array, 5); printf("�Ǳ� %d ��Ԫ��ֵ��%d\n", 5 ,get_value); get_value = get(&amp;array, 0); printf("�Ǳ� %d ��Ԫ��ֵ��%d\n", 0 ,get_value); printf("\n-------�ָ���-����-----\n"); invert_arr(&amp;array); print_arr(&amp;array); printf("\n-------�ָ���-����-----\n"); sort_arr(&amp;array); print_arr(&amp;array);*/ &#125;//��ʼ������void init_arr(struct Arr * pArr, int capacity)&#123; pArr-&gt;pBase = (int *)malloc(sizeof(int) * capacity);//��̬�����ڴ� if(NULL == pArr-&gt;pBase)&#123; printf("��̬�����ڴ�ʧ�ܣ�\n"); exit(-1);//�����˳�����Java�е�System.exit(-1);һ�� &#125; pArr-&gt;capacity = capacity; pArr-&gt;length = 0;//δ�洢Ԫ�أ���ЧԪ��Ϊ0��&#125;//����Ԫ�ص�ֵvoid print_arr(struct Arr * pArr)&#123; printf("������СΪ��%d����ЧԪ�ظ���Ϊ��%d\n", pArr-&gt;capacity, pArr-&gt;length); if(is_empty(pArr))&#123; printf("��������\n"); &#125;else&#123; for(int i=0; i&lt;pArr-&gt;length; i++)&#123; printf("%d ", pArr-&gt;pBase[i]); &#125; printf("\n"); &#125;&#125;//�����Ƿ���bool is_empty(struct Arr * pArr)&#123; //��ЧԪ�صĸ���Ϊ0 return pArr-&gt;length == 0 ? true:false;&#125;//�����Ƿ�����bool is_full(struct Arr * pArr)&#123; //��ЧԪ�صĸ���=�����ĳ��� return pArr-&gt;length == pArr-&gt;capacity ? true:false;&#125;//׷��bool append_arr(struct Arr * pArr, int value)&#123; //������������ if(is_full(pArr))&#123; return false; &#125; //�ڵ�ǰ����������һ��λ�ô�׷��Ԫ�� pArr-&gt;pBase[pArr-&gt;length] = value; pArr-&gt;length++; return true;&#125;//��ָ���ĽǱ괦����Ԫ��bool insert_arr(struct Arr * pArr, int index, int value)&#123; int i = 0; //������������ if(is_full(pArr))&#123; printf("����������\n"); return false; &#125; //index��ֵ�����Ǹ��������ǳ��������洢����ЧԪ�ظ��� //index=��ЧԪ�ظ���ʱ����ʾ������һ��Ԫ�ش�׷��һ��Ԫ��ֵ if(index &lt; 0 || index &gt; pArr-&gt;length)&#123; return false; &#125; //����λ����ָ���Ǳ�λ���ýǱ�֮�����ŵ�Ԫ�أ�����Ųһ��λ�Ӵ��� for(i = pArr-&gt;length - 1; i &gt;= index; i--)&#123; pArr-&gt;pBase[i+1] = pArr-&gt;pBase[i]; &#125; //��ֵ����ָ���Ǳ괦 pArr-&gt;pBase[index] = value; pArr-&gt;length++; return true;&#125;//ɾ��ָ���Ǳ괦��Ԫ�أ������ر�ɾ����Ԫ�ص�ֵbool delete_arr(struct Arr * pArr, int index, int * delete_value)&#123; int i; //������������ if(is_empty(pArr))&#123; printf("�����ѿգ�\n"); return false; &#125; //index��ֵ�����Ǹ��������ǳ��������洢����ЧԪ�ظ��� if(index &lt; 0 || index &gt; pArr-&gt;length-1)&#123; return false; &#125; //��Ҫɾ����ָ���Ǳ괦��ֵȡ���� *delete_value = pArr-&gt;pBase[index]; //��Ҫ��λ��Ҫɾ����ָ���Ǳ�֮����ֵ��Ҫ��ǰ�ƶ�һλ for(i = index + 1; i &lt; pArr-&gt;length; i++)&#123; pArr-&gt;pBase[i-1] = pArr-&gt;pBase[i]; &#125; pArr-&gt;length--; return true;&#125;//��ȡָ���Ǳ�λ�õ�Ԫ��ֵint get(struct Arr * pArr, int index)&#123; //index��ֵ�����Ǹ��������ǳ��������洢����ЧԪ�ظ��� if(index &lt; 0 || index &gt; pArr-&gt;length-1)&#123; //Ӧ����Java�е������Ǳ�Խ���쳣������ȷ���˴����ص�ֵ�Ƿ���һ����Ч��ֵ return -1; &#125; return pArr-&gt;pBase[index];&#125;//Ԫ��ֵǰ������void invert_arr(struct Arr * pArr)&#123; int start = 0; int end = pArr-&gt;length-1; int temp; while(start &lt; end)&#123; temp = pArr-&gt;pBase[start]; pArr-&gt;pBase[start] = pArr-&gt;pBase[end]; pArr-&gt;pBase[end] = temp; start++; end--; &#125;&#125;//��Ԫ�ص�ֵ��Ȼ����void sort_arr(struct Arr * pArr)&#123; int i, j, temp; for(i = 0; i&lt;pArr-&gt;length; i++)&#123; for(j=i+1; j&lt;pArr-&gt;length; j++)&#123; if(pArr-&gt;pBase[i] &gt; pArr-&gt;pBase[j])&#123; temp = pArr-&gt;pBase[j]; pArr-&gt;pBase[j] = pArr-&gt;pBase[i]; pArr-&gt;pBase[i] = temp; &#125; &#125; &#125;&#125; ��ʽ�ṹ���԰Ѵ���һ����Ԫ�أ��м����߻�����һ��������ֻҪ˳�������ҵ�Ԫ�ء����Ϳ�����������һ����ʽ�ṹ��ÿһ������Ԫ�صĵ�ַ�����Ƿ�ɢ�����ģ���̬���䣬�˴�ͨ��ָ��������ÿ������ֻ��һ���������㣬�׽���û��ǰ����β����û�к�������ʽ�ṹ��Ҳ�����׳Ƶ����������������Ĳ�������������һ��ͷ���㣬�Է��������������Ĳ�����ͷ������ͷָ����������ͬ�ĸ��ͷ�����������򲿷��ǿյġ� �������ڵ������Ľṹ�У�����Ԫ��Ҫ�������֣�һ���ִ�������Ԫ�ص����ݲ��֣�һ���ִ�����һ������Ԫ�صĵ�ַ�� ����ʾ��123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194#include &lt;stdio.h&gt;#include &lt;malloc.h&gt;#include &lt;stdlib.h&gt;typedef struct Node&#123; int data;//������ struct Node * pNext;//ָ����&#125;NODE, *PNODE;//��������PNODE creat_list();//��������void print_list(PNODE);//�Ƿ�Ϊ������bool is_empty(PNODE);//��ȡ�����ĳ���int get_len(PNODE);//�������������򣺰���Ȼ˳��void sort_list(PNODE);//��������bool insert_node(PNODE,int,int);//ɾ������bool delete_node(PNODE,int,int*);void main()&#123; int len; int deleteVal; PNODE pHead = NULL; pHead = creat_list(); //����ֵ print_list(pHead); if(is_empty(pHead))&#123; printf("������\n"); &#125;else&#123; printf("������Ϊ��\n"); &#125; //��ȡ�������� len = get_len(pHead); printf("�����ĳ���Ϊ��%d\n", len); //���� sort_list(pHead); print_list(pHead); //���� if(insert_node(pHead, 1, 33))&#123; printf("�����ɹ���\n"); &#125;else&#123; printf("����ʧ�ܣ�\n"); &#125; print_list(pHead); //ɾ�� if(delete_node(pHead, 0, &amp;deleteVal))&#123; printf("ɾ���ɹ���\n"); &#125;else&#123; printf("ɾ��ʧ�ܣ�\n"); &#125; print_list(pHead);&#125;//��������PNODE creat_list()&#123; int len; int value; int i; //����ͷ���� PNODE pHead = (PNODE)malloc(sizeof(NODE)); if(NULL == pHead)&#123; //����ʧ�� printf("�����ڴ�ʧ�ܣ�������ֹ!\n"); exit(-1); &#125; printf("�����������Ľ���������"); scanf("%d", &amp;len); PNODE pTail = pHead; pTail-&gt;pNext = NULL; //ѭ������������ÿ���ڵ� for(i=0; i&lt;len; i++)&#123; printf("��������%d��������ֵ��", i+1); scanf("%d", &amp;value); //����һ���µĽ��� PNODE pNew = (PNODE)malloc(sizeof(NODE)); pNew-&gt;data = value; pTail-&gt;pNext = pNew; pNew-&gt;pNext = NULL; pTail = pNew; &#125; return pHead;&#125;//��������void print_list(PNODE pHead)&#123; PNODE p = pHead-&gt;pNext; while(NULL != p)&#123; printf("%d ", p-&gt;data); p = p-&gt;pNext; &#125; printf("\n");&#125;//�Ƿ�Ϊ������bool is_empty(PNODE pHead)&#123; return NULL == pHead-&gt;pNext ? true:false;&#125;//��ȡ�����ĳ���int get_len(PNODE pHead)&#123; int len = 0; PNODE p = pHead-&gt;pNext; while(NULL != p)&#123; p = p-&gt;pNext; len++; &#125; return len;&#125;//�������������򣺰���Ȼ˳��void sort_list(PNODE pHead)&#123; int i, j, temp; //�ܳ��� int len = get_len(pHead); //һ����ǰ�ڵ㣬һ����ǰ�ڵ�����һ���ڵ� PNODE pNow, pNext; for(i=0, pNow=pHead-&gt;pNext;i&lt;len-1;i++, pNow = pNow-&gt;pNext)&#123; for(j=i+1, pNext = pNow-&gt;pNext;j&lt;len;j++, pNext = pNext-&gt;pNext)&#123; if(pNow-&gt;data &gt; pNext-&gt;data)&#123; //a[i] &gt; a[j] temp = pNow-&gt;data; //temp = a[i] pNow-&gt;data = pNext-&gt;data; //a[i] = a[j] pNext-&gt;data = temp; //a[j] = temp; &#125; &#125; &#125; &#125;//��ָ��λ�ò������㣬position��0��ʼbool insert_node(PNODE pHead, int position, int value)&#123; //��ȡ�������ܳ��� //int len = get_len(pHead); //�ж�position�Ƿ���һ����Ч����������5��positionΪ6����ʾ����ĩβ�����ӡ�indexΪ7��������Чֵ //if(position &gt; len + 1)&#123; //return false; //&#125; int len = 0; //ֱ�Ӷ�λ����Ҫ����������ǰһ���� PNODE p = pHead; while(NULL != p &amp;&amp; len &lt; position)&#123; p = p-&gt;pNext; len++; &#125; //���㲻���� if(len &gt; position || NULL == p)&#123; return false; &#125; //����һ���½��� PNODE pNew = (PNODE)malloc(sizeof(NODE)); if(NULL == pNew)&#123; printf("��̬�ڴ�����ʧ�ܣ������˳�\n"); exit(-1); &#125; pNew-&gt;data = value; pNew-&gt;pNext = p-&gt;pNext; p-&gt;pNext = pNew; return true;&#125;//ɾ��ָ��λ�õĽ��㣬position��0��ʼbool delete_node(PNODE pHead, int position ,int* deleteVal)&#123; int len = 0; //ֱ�Ӷ�λ����Ҫ����������ǰһ���� PNODE p = pHead; while(NULL != p-&gt;pNext &amp;&amp; len &lt; position)&#123; p = p-&gt;pNext; len++; &#125; if(len &gt; position || NULL == p-&gt;pNext)&#123; return false; &#125; //Ҫɾ���Ľ��� PNODE q = p-&gt;pNext; *deleteVal = q-&gt;data; //��p��ָ����ָ��Ҫɾ����������һ���ڵ� p-&gt;pNext = p-&gt;pNext-&gt;pNext; //�ͷ�ɾ���������ڴ��ռ� free(q); q = NULL; return true;&#125; ˫������˫�����Ľṹ�У�����Ԫ��Ҫ�������֣�һ���ִ�������Ԫ�ص����ݲ��֣�һ���ִ�����һ������Ԫ�صĵ�ַ��һ���ִ�����һ������Ԫ�صĵ�ַ�� ���Խṹ��Ӧ��-���С�ջ�����������޵����Ա���Ҳ���Ƚ��ȳ�������β���룬��ͷȡ��Ԫ�ء��ڷǿն����У���ͷָ��ʼ��ָ����ͷԪ�أ���βָ��ʼ��ָ����βԪ�ص���һ��λ���� ѭ������123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116#include &lt;stdio.h&gt;#include &lt;malloc.h&gt;//ѭ�����У��Ƚ��ȳ�typedef struct Queue&#123; int * pBase;//��̬���� int front;//��������ЧԪ�ص�ͷԪ�� int rear;//��������ЧԪ�ص�βԪ��&#125;QUEUE;//��ʼ��ѭ������void init(QUEUE *);//���ӣ��ڶ�����ЧԪ�ص�β������bool add(QUEUE *, int);//���ӣ��Ӷ�ͷ��ʼ��ȡbool get(QUEUE *, int *);//�Ƿ��Ѿ���bool isFull(QUEUE *);//�Ƿ��Ѿ���bool isEmpty(QUEUE *);//��ӡԪ��void print(QUEUE *);void main()&#123; QUEUE q; int delValue; init(&amp;q); add(&amp;q, 1); add(&amp;q, 2); add(&amp;q, 3); add(&amp;q, 4); add(&amp;q, 5); add(&amp;q, 6); add(&amp;q, 7); add(&amp;q, 8); print(&amp;q); get(&amp;q, &amp;delValue); printf("1���ӵ�ֵΪ��%d\n", delValue); get(&amp;q, &amp;delValue); printf("2���ӵ�ֵΪ��%d\n", delValue); get(&amp;q, &amp;delValue); printf("3���ӵ�ֵΪ��%d\n", delValue); get(&amp;q, &amp;delValue); printf("4���ӵ�ֵΪ��%d\n", delValue); get(&amp;q, &amp;delValue); printf("5���ӵ�ֵΪ��%d\n", delValue); get(&amp;q, &amp;delValue); printf("6���ӵ�ֵΪ��%d\n", delValue); add(&amp;q, 8); add(&amp;q, 9); get(&amp;q, &amp;delValue); printf("7���ӵ�ֵΪ��%d\n", delValue);&#125;//��ʼ��ѭ������void init(QUEUE * pQueue)&#123; pQueue-&gt;pBase = (int *) malloc(sizeof(int) * 6); pQueue-&gt;front = 0; pQueue-&gt;rear = 0;&#125;//���ӣ��ڶ�����ЧԪ�ص�β������bool add(QUEUE * pQueue, int value)&#123; if(isFull(pQueue))&#123; printf("�����Ѿ������ˣ�\n"); return false; &#125;else&#123; pQueue-&gt;pBase[pQueue-&gt;rear] = value; pQueue-&gt;rear = (pQueue-&gt;rear + 1) % 6; return true; &#125;&#125;//���ӣ��Ӷ�ͷ��ʼ��ȡbool get(QUEUE * pQueue, int * delValue)&#123; if(isEmpty(pQueue))&#123; printf("�����Ѿ����ˣ�\n"); return false; &#125;else&#123; *delValue = pQueue-&gt;pBase[pQueue-&gt;front]; pQueue-&gt;front = (pQueue-&gt;front + 1) % 6; return true; &#125;&#125;//�Ƿ��Ѿ���bool isFull(QUEUE * pQueue)&#123; if((pQueue-&gt;rear+1) % 6 == pQueue-&gt;front)&#123; return true; &#125; return false;&#125;//�Ƿ��Ѿ���bool isEmpty(QUEUE * pQueue)&#123; if(pQueue-&gt;rear == pQueue-&gt;front)&#123; return true; &#125; return false;&#125;//��ӡԪ��void print(QUEUE * pQueue)&#123; int front = pQueue-&gt;front; //��ͷ�������ڶ�β��������ʾһֱ����Ԫ�� while(front != pQueue-&gt;rear)&#123; printf("%d ", pQueue-&gt;pBase[front]); front = (front+1) % 6; &#125; printf("\n");&#125; ��ʽջջ���޶��ڱ���һ�˽��в�����ɾ�����������Ա���ͨ�������롢ɾ����һ�˳�Ϊջ������ʽջ�����������Ĳ�������һ�������ƣ���һ�˽��в��롢ɾ�����ɡ���ʽջ���ʺϿ������ϻ����µĲ�����ջ�����ֲ�ͬ������ʽ��123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125#include &lt;stdio.h&gt;#include &lt;malloc.h&gt;#include &lt;stdlib.h&gt;//�����Ľڵ����ݶ���typedef struct Node&#123; int data;//������ struct Node * pNext;//ָ����&#125;NODE, * PNODE;//ջ--&gt;�������ӣ��Ƚ�����typedef struct Stack&#123; PNODE pTop; PNODE pBottom;&#125;STACK, * PSTACK;//��ʼ��ջvoid init(PSTACK);//ѹջbool push(PSTACK, int);//����ջ�е�����void print(PSTACK);//��ջbool pop(PSTACK, int*);//����void clear(PSTACK);//�Ƿ��ǿ�ջbool isEmpty(PSTACK);void main()&#123; STACK stack; int value; int i = 0; init(&amp;stack); push(&amp;stack, 1); push(&amp;stack, 2); push(&amp;stack, 3); push(&amp;stack, 4); push(&amp;stack, 5); push(&amp;stack, 6); print(&amp;stack); clear(&amp;stack); if(pop(&amp;stack, &amp;value))&#123; printf("��ջ�ɹ���Ԫ��ֵΪ��%d\n", value); &#125;else&#123; printf("��ջʧ�ܣ�"); &#125; print(&amp;stack);&#125;//��ʼ��ջvoid init(PSTACK pStack)&#123; pStack-&gt;pTop = (PNODE)malloc(sizeof(NODE)); if(NULL == pStack-&gt;pTop)&#123; printf("�����ڴ�ʧ��!\n"); exit(-1); &#125;else&#123; pStack-&gt;pBottom = pStack-&gt;pTop; pStack-&gt;pTop-&gt;data = NULL; &#125;&#125;//ѹջbool push(PSTACK pStack, int value)&#123; //����һ���ڵ����� PNODE pNew = (PNODE)malloc(sizeof(NODE)); if(NULL == pNew)&#123; printf("�����ڴ�ʧ��!\n"); return false; &#125;else&#123; pNew-&gt;data = value; pNew-&gt;pNext = pStack-&gt;pTop; pStack-&gt;pTop = pNew; return true; &#125;&#125;//����ջ�е�����void print(PSTACK pStack)&#123; PNODE node = pStack-&gt;pTop; while(node != pStack-&gt;pBottom)&#123; printf("%d ", node-&gt;data); node = node-&gt;pNext; &#125; printf("\n");&#125;//��ջbool pop(PSTACK pStack, int * value)&#123; if(isEmpty(pStack))&#123; printf("�Ѿ��ǿ�ջ��\n"); return false; &#125;else&#123; //Ҫ��ջ�Ľڵ� PNODE node = pStack-&gt;pTop; //��ջ�ڵ���ֵ *value = node-&gt;data; //pTop������һ�� pStack-&gt;pTop = node-&gt;pNext; //�ͷų�ջ�ڵ����ڴ� free(node); return true; &#125;&#125;//�Ƿ��ǿ�ջbool isEmpty(PSTACK pStack)&#123; return pStack-&gt;pTop == pStack-&gt;pBottom ? true : false;&#125;//����void clear(PSTACK pStack)&#123; PNODE p = pStack-&gt;pTop; PNODE q = NULL; while(p != pStack-&gt;pBottom)&#123; q = p-&gt;pNext; //�ͷ��ڴ� free(p); p = q; &#125; pStack-&gt;pTop = pStack-&gt;pBottom;&#125; ˳����ջ˳����ջ���ʺϿ������������ҵĲ�����˳���洢�ṹ����������ʵ�֡�1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374package datastructure.part.one;/** * @description * @author Denghs * @version 1.0,2018��2��8�� ����9:37:53 * @remark �����ṹ��˳��ջ */public class Stack&lt;T&gt; &#123; private int maxSize; // ջ�ռ��Ĵ�С private T[] stackArray;// ˳��ջ�����÷���ȷ��ջ�ռ��Ĵ��ŵ��������� private int top; // ջ��ָ�� public Stack(int size) &#123; maxSize = size; stackArray = (T[]) new Object[maxSize]; top = -1; &#125; /** * ��ջ * @param element */ public void push(T element) &#123; stackArray[++top] = element; if (top &gt; (maxSize - 1))&#123; top = maxSize - 1; &#125; &#125; public void pretendedPush() &#123; ++top; if (top &gt; (maxSize - 1)) &#123; top = maxSize - 1; &#125; &#125; /** * ��ջ * @return */ public T pop() &#123; if (top == -1) &#123; return null; &#125; else &#123; return stackArray[top--]; &#125; &#125; /** * �鿴ջ��Ԫ�أ����ǲ���ջ * @return */ public T peek() &#123; return stackArray[top]; &#125; /** * �ж�ջ�Ƿ��� * @return */ public boolean isEmpty() &#123; return top == -1; &#125; /** * �ж�ջ�Ƿ��� * @return */ public boolean isFull() &#123; return top == maxSize - 1; &#125;&#125; 12345678910111213141516171819202122232425package datastructure.part.one;/** * @description * @author Denghs * @version 1.0,2018��4��5�� ����12:06:32 * @remark */public class TestStack &#123; public static void main(String[] args) &#123; Stack&lt;Student&gt; stack = new Stack&lt;Student&gt;(10); stack.push(new Student("����")); stack.push(new Student("����")); stack.push(new Student("����")); stack.push(new Student("����")); stack.push(new Student("����")); System.out.println(stack.pop().getName()); System.out.println(stack.pop().getName()); System.out.println(stack.pop().getName()); &#125;&#125;]]></content>
      <categories>
        <category>���ݽṹ</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[��ϵ�����ݿ�������]]></title>
    <url>%2F2018%2F10%2F28%2Fdatabase-transaction%2F</url>
    <content type="text"><![CDATA[������ָ�߼��ϵ�һ���������������������ĸ�����ԪҪôȫ���ɹ���Ҫôȫ��ʧ�ܡ��������������þ��ǰѶ���SQL������Ϊһ��������ִ�С� �������Ĵ����ԣ�ACID�� ԭ���� Atomicty��������һ�����ɷָ��ĵ�Ԫ��Ҫôȫ���ɹ���Ҫôȫ��ʧ�ܡ� һ���� Consistency����������ʹ���ݿ���һ��һ����״̬�任����һ��һ����״̬������ת�ˣ�ǰ���ܶ�Ҫһ�¡� ������ Isolation�������������ݿ�ʱ��ÿһ�����������񣬲��ܱ����������Ĳ������������š���������֮��Ҫ���롣 �־��� Durability��һ������һ�����ύ���������ݿ������ݵĸı����ǳ־��Եġ� MySQL���ݿ���������֧�� start transaction��—-�������� sql���䣻—-���� commit;—-�ύ���� rollback��—-�ع����񣬿��ֶ��ع������� ���ݿ��ع����ع���������ʼ֮ǰλ�á�״̬�� ģ��һ���쳣�ع�ʾ����Oracle���ݿ���������֧����MySQL���������컯�ġ�������MySQLΪ����˵��һ��������start transaction��MySQL�������Ŀ�����Oracle�������������ɵ�һ��DML���������ġ���һ���򵥵�ת��Ϊ������һ������ͷ�������������ڶ�������ͷ��ģ��aaa�˻���100��û��ִ��commit�����������������쳣�ˡ��ص��������ڣ����½����鿴��update���䲢û�������ı����ݡ� ģ��һ������ִ��ʾ����һ������ͷ�������������м�ִ��������update����������commit���ύ�����񡣲Ż����õı��������ݿ��С�û���յ�commit�����ݿ����Զ��ع��ˡ� �����Ĵ������еĸ�����Isolation���������Ǹ����ԣ����ܻ������������⣺ ������һ��������ȡ������һ������δ�ύ�����ݡ� �����ظ�������һ�������ڣ���ȡ���е�ĳһ�����ݣ����˶�ȡ�Ľ�����ͬ������ȡͬһ����¼����һ�ζ����ڶ��ζ�������һ���� �������ö�������һ�������ڶ�ȡ���˱����������������ݣ�����ǰ����ȡ��һ�¡�����ȡͬһ�����������ظ�����Щ��������ȷ�ģ���Щ�����ǲ���ȷ�ġ����ݿⶨ�������ָ��뼶�� Serializable���ɱ��������������ظ��������������������������ƻ��⣩ Repeatable read���ɱ��������������ظ���������������MySQL���ݿ�Ĭ�ϵĸ��뼶���� Read committed���ɱ�����������������Oracle���ݿ�Ĭ�ϵĸ��뼶�� Read uncommitted�����ͼ����������������޷���֤�� ���뼶��Խ�ߣ�����Խ����ݿ����ø��뼶����set transaction isolation level ‘���뼶���ȼ��ֶ�’;��ѯ��ǰ�����ĸ��뼶����select @@tx_isolation;�����Ͳ�����ȥ��ʵ���ˡ������������ò�ͬ�ĸ��뼶������������̨ȥ��ʵ�顣Oracle���ݿ�֧��Read committed��Serializable�����������뼶���� ����ʽ����������ʽ���� ����ʽ�����������Ŀ������ύ���ɳ���Ա�ڴ����п��ơ���ͳ��JDBC�������񡢻ع��������ύ�����Ĳ�������д����ʽ�������������������Ķ��������ı߽磬����ʵ��ϸ���ȵ��������ƣ� ����ʽ�����������Ŀ������ύ�����ɳ���Ա���ƣ������ⲿ����������spring��������֧�֣��������ļ�������������ע�⼴�ɡ������������ʹ���֮�������ϡ�����������ȫ������ �����������ڵ���EIS�����ݿ��ı��أ����������ڵ��������ڵ����񡣱����������漰����������Դ�� ȫ����������Դ��������Э�������񣬿��Կ�Խ�������ݿ��ͽ��̡����ö��׶��ύЭ�鱣֤�����ĳɹ��� �ֲ�ʽ���� �ֲ�ʽ�������ڶ��׶��ύʵ�֣������ύЭ�顣���׶��ύ���õ��Ǳ��������ԣ����ڸ���������������Ҫ�ȴ���Ӧ�����Ĳ����ߣ��������ܱȽϲ��ʵ��ҵ��ʹ�ù����У�ʹ����������һ����������ͳ������ǿһ���ԡ�ʹ�ô����������ܵ�MQ���м��˽�ɫ�� ���׶��ύ ׼���׶Σ��ֳ�ͶƱ�׶Ρ�Э����ѯ�����в������Ƿ�׼�����ύ��׼���ûָ�prepared�������ָ�non-prepared �ύ�׶Σ��ֳ�ִ�н׶Ρ�Э������������һ�׶��յ������߻ظ���prepared�����˽׶������в����߷���commitָ���������rollbackָ� ����һ��ģ�ͣ��򵥵�˵���֣� Weak ��һ���ԣ�����д��һ����ֵ�󣬶��Ĳ��������ݸ����Ͽ��ܻ���������Ҳ���ܻ����������� Eventually ����һ���ԣ�����д��һ����ֵ�����п��ܶ�������������ĳ��ʱ�䱣֤�����ܶ������� Strong ǿһ���ԣ��µ�����һ��д�룬�����⸱��ʱ�̶��ܶ�����ֵ�� ������ һ�����񻨷Ѻܳ�ʱ�䲻�ܹ�����������һ���������񣬼��Ƴ������� �ֲ�ʽ�������ᵽ��һ�㣬���׶��ύ��Ҫ�ȴ���Ӧ�����Ĳ����ߡ����п��ܻ�����һ���������� Spring�У���ҵ�񷽷���������@Transactionʱ����������forѭ������dao����insert��updateҲ���ܻ����ɳ������� Spring�У���service����ҵ�񷽷���������@Transactionʱ��������һ��service��ҵ�񷽷�������ȥǶ�׷������ã�Ҳ���ܻ����ɳ�������Spring�����������ύ���Ƿ���ִ�����ϡ���Ƕ�׵����У�������ʱ����������ҵ�񷽷�ִ�е�����ʱ�䡣]]></content>
      <categories>
        <category>SQL</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ʹ��ReentrantReadWriteLockʵ��һ���򵥵Ļ���ԭ��]]></title>
    <url>%2F2018%2F10%2F28%2Fcache-system%2F</url>
    <content type="text"><![CDATA[֮ǰ˵��Lock��ReentrantReadWriteLock��Lock��ʵ���࣬���Ի�ȡ������д����������ReentrantReadWriteLock��һ���򵥵Ļ���ϵͳԭ��ʵ�֡� ������ע������1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859public class CacheSystem &#123; public static void main(String[] args) &#123; CacheUtil cacheUtil = new CacheUtil(); cacheUtil.getObject("1"); &#125;&#125;class CacheUtil &#123; // ���ش��Ż��������ļ��� private Map&lt;String, Object&gt; cacheMap = new HashMap&lt;String, Object&gt;(); // ��д�� private ReadWriteLock rwl = new ReentrantReadWriteLock(); // ��ȡ���� public Object getObject(String id) &#123; // ���϶��� rwl.readLock().lock(); Object object = null; try &#123; object = cacheMap.get(id); if (null == object) &#123; // ���ֻ��漯����û�����ݣ��ͷŶ��� rwl.readLock().unlock(); // ��д�� rwl.writeLock().lock(); try &#123; if (null == object) &#123; object = "�����ݿ���ѯ������"; cacheMap.put(id, object); &#125; &#125; finally &#123; rwl.writeLock().unlock(); System.out.println("д���ͷ��ˣ�"); &#125; // �����϶��� System.out.println("�����϶����ˣ�"); rwl.readLock().lock(); &#125; &#125; finally &#123; System.out.println("�����ͷ��ˣ�"); rwl.readLock().unlock(); &#125; return object; &#125; // �������� public void updateObject(Object obj) &#123; //��ȡ���¶�����ID String id = "1";//α����obj.getId(); Object object = getObject(id); //�����������ݣ��������ݲ�һ�¡����ջ��汣�������� if(null != object)&#123; cacheMap.remove(id); &#125; System.out.println("�������ݿ�������"); &#125;&#125; mybatis�еĻ��� һ��������SqlSession�����Ļ��档�ڲ������ݿ�ʱ��Ҫ���� sqlSession�������ڶ�������һ�����ݽṹ��HashMap�����ڴ洢�������ݡ���ͬ��sqlSession֮���Ļ�������������HashMap���ǻ��಻Ӱ���ġ� ����������mapper�����Ļ��棬����SqlSessionȥ����ͬһ��Mapper��sql���䣬����SqlSession���Թ��ö������棬���������ǿ�SqlSession�ġ�������������namespace�����ֵģ�һ��namespace��һ���������档 һ�����湤��ԭ����ѯʱ�ᴴ��һ��Ψһ��Key����ѯ����Map���Ƿ��ж�������ʱ��ִ��ɾ���������� һ������ʵ����PerpetualCache�� ����������Ҫ�������ã���������˵��mybatis�ṩ��Cache�ӿڣ��ɶԽӲ�ͬ�Ļ��泧�̡���redis��memcached��ehcache��]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[�������е�ʵ��ԭ��]]></title>
    <url>%2F2018%2F10%2F28%2Fblocking-queue%2F</url>
    <content type="text"><![CDATA[��������һ���н�����������ʵ�ִ��룬�ܽ�һ���Լ������⡣�ײ��õ������飬��ʵ����һ��ѭ�����С��ʺ϶Բ���ʱ�����ݴ����� ����123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657package thread;import java.util.concurrent.locks.Condition;import java.util.concurrent.locks.Lock;import java.util.concurrent.locks.ReentrantLock;public class BoundedBuffer &#123; //������ private final Lock lock = new ReentrantLock(); private final Condition notFull = lock.newCondition(); private final Condition notEmpty = lock.newCondition(); //����������������ֵΪ100 private final Object[] items = new Object[100]; private int putptr, takeptr, count; //�������Ŷ��� public void put(Object x) throws InterruptedException &#123; lock.lock(); try &#123; while (count == items.length)&#123; //���ˣ����еȴ� notFull.await(); &#125; items[putptr] = x; if (++putptr == items.length)&#123; //����λ�õ�ָ��Ҫ��������ֵ�ˣ����ص�ԭ�� putptr = 0; &#125; ++count; //���źţ��ÿյ��� notEmpty.signal(); &#125; finally &#123; lock.unlock(); &#125; &#125; public Object take() throws InterruptedException &#123; lock.lock(); try &#123; while (count == 0)&#123; //���ˣ����еȴ��������Ѿ�ȡ���ˡ� notEmpty.await(); &#125; Object x = items[takeptr]; if (++takeptr == items.length)&#123; //ȡ��λ�õ�ָ��Ҫ��������ֵ�ˣ����ص�ԭ�� takeptr = 0; &#125; --count; //���źţ��������� notFull.signal(); return x; &#125; finally &#123; lock.unlock(); &#125; &#125;&#125; ��������ȡ���Σ���һ�ξ�ȡ���ˣ��ڶ��ξ��ڵȴ��������ݡ� ������һ���򵥵�����˵���������������������ṩ�Ľӿڲ��������߷�ֵ������60����ʱͻȻ��80������������Ҫ�������������е�Ӧ�ó����ͳ����ˡ���Ҫ��������Ŀ�ģ������𵽻��������á���һ����ȡһ�����ڴ���ʵ��ʱ���ж϶����Ƿ��Ѿ������˺��ж϶����Ƿ��Ѿ�ȡ����ʱ����while������һ��СС��ϸ�ڡ��ڵȴ� Condition ʱ���������������ٻ��ѡ�����ͨ����Ϊ�Ի���ƽ̨�������ò���]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[����Java�з��͵���֪������]]></title>
    <url>%2F2018%2F10%2F28%2Fabout-generics%2F</url>
    <content type="text"><![CDATA[���ڿ��ˡ���������Java���������ж��﷨�ǡ����ͣ���α���ͣ���һЩ���ܣ�˳���ܽ�����һ����ǰ��JDK1.5�����ķ��͵�������ʹ�á� Ϊ�λ����뷺��12345678910111213141516171819public class Tools&#123; private Object obj; public Object getObj() &#123; return obj; &#125; public void setObj(Object obj) &#123; this.obj = obj; &#125; public static void main(String[] args) &#123; Tools tools = new Tools(); tools.setObj("����Object"); Object obj2 = tools.getObj(); Integer i = (Integer) obj2; System.out.println(i); &#125;&#125; �������δ��룬��΢�е㾭�飬��֪�������쳣java.lang.ClassCastException���������쳣��ʱ��ȴ���������ڡ�JVM�ڱ������δ���ʱ���ǿ���ͨ���ġ�tools.getObj()��ȡ������ʱ����Ҫ����Ա�ֶ���������ת�����������ڹ���Object���������ԣ�����������������֮�ء� ������12345678910111213141516171819202122232425public class Utils&lt;T&gt; &#123; private T t; public void setObject(T t) &#123; this.t = t; &#125; public T getObject() &#123; return t; &#125; public static void main(String[] args) &#123; Utils&lt;Singer&gt; utils1 = new Utils&lt;Singer&gt;(); utils1.setObject(new Singer()); Singer s = utils1.getObject(); &#125;&#125;class Singer &#123; &#125;class Worker &#123;&#125; utils1.getObject()ʱ���ý�������ǿת����Ϊ������������new Utils()ʱ���Ѿ�ȷ���ˡ�ֱ���ڱ����ھͽ����˰�ȫ��ʾ�� ���ͷ���123456789101112public class Demo &#123; // ���ͷ��� public &lt;T&gt; void show(T t) &#123; System.out.println("show:::" + t); &#125; public static void main(String[] args) &#123; Demo demo = new Demo(); demo.show("haha"); demo.show(new Tools()); &#125;&#125; ���ͷ��������������ǵ��÷���ʱ����ʵ�ξ����ġ� �����࣬���ͷ���12345678910111213141516171819202122232425public class Demo&lt;T&gt; &#123; // �÷������Ŷ����ķ������ߣ��̶����� public void show(T t) &#123; System.out.println("show---&gt;" + t); &#125; // ���ͷ��� public &lt;W&gt; void print(W w) &#123; System.out.println("print---&gt;" + w); &#125; // ��̬���ͷ��� public static &lt;Q&gt; void say(Q q) &#123; System.out.println("say---&gt;" + q); &#125; public static void main(String[] args) &#123; Demo&lt;String&gt; demo = new Demo&lt;String&gt;(); demo.show("haha1"); demo.print(2008); demo.print("haha2"); Demo.say(3.1415926); Demo.say("haha3"); &#125;&#125; ʵ�����н������£�show()�����������Ǹ���Demo���涨����T�ߵģ����Կ������ظ÷����ķ��͡�print()��������������ʵ�ξ����ġ�say()����������Ҳ����ʵ�ξ����ġ� ���ڷ��͵��ܽ� ���ڽ�����ȫ���⣬��һ����ȫ���ơ����Ͱ�ȫ���ơ� ������ʱ�ڳ��ֵ�����java.lang.ClassCastExceptionת�Ƶ��˱����ڡ� ����ǿ������ת�����鷳�� ���͵����ͱ���Ϊ�������ͣ������ǻ������͡� ʲôʱ�����巺�� ������Ҫ�����������������Ͳ�ȷ����ʱ�������ڶ���Object��������չ�����ڶ��巺����������չ�� �����ඨ���ķ��ͣ�������������Ч�������÷��ͱ�����ʹ�ã���ô�������Ķ�������ȷҪ�����ľ������ͺ󣬸÷���Ҫ�������������;��Ѿ��̶��ˡ� Ϊ���ò�ͬ�ķ������Բ�����ͬ���ͣ��������Ͳ�ȷ������ô���Խ����Ͷ����ڷ����ϡ� ��̬�����ǲ����Է������϶����ķ��͡�������̬�����������������Ͳ�ȷ�������Խ����Ͷ����ڸ÷����ϡ� ������ÿ�ζ����ڽ�������ʱ�Żᱻ��ȷ���ɶ�����������ȥ���С� ʵ��ʹ�ó���һ123456789101112131415161718public class WebUtils &#123; //��request�е����ݷ�װ��bean�� public static &lt;T&gt; T request2Bean(HttpServletRequest request,Class&lt;T&gt; clazz)&#123; try&#123; T t = clazz.newInstance(); Enumeration e = request.getParameterNames(); while(e.hasMoreElements())&#123; String name= (String) e.nextElement(); String value = request.getParameter(name); BeanUtils.setProperty(t, name, value); &#125; return t; &#125;catch (Exception e) &#123; throw new RuntimeException(e); &#125; &#125;&#125; ʹ�þ�̬���ͷ�����request�е�����������ͨ������+BeanUtils��ֱ�ӷ�װ�ɶ��󲢷��ء� ʵ��ʹ�ó�����123456789101112131415161718public class DaoFactory &#123; private DaoFactory()&#123;&#125; private static final DaoFactory instance = new DaoFactory(); public static DaoFactory getInstance()&#123; return instance; &#125; public &lt;T&gt; T createDao(String className,Class&lt;T&gt; clazz)&#123; try &#123; return (T) Class.forName(className).newInstance(); &#125; catch (Exception e) &#123; throw new RuntimeException(e); &#125; &#125; &#125; ʹ�ù�������ģʽ+���ͷ����� ʵ��ʹ�ó�����1234567891011121314class BaseDao&lt;T&gt; &#123; // ����Եķ�������ȡ���û������� public List&lt;T&gt; findAll() &#123; System.out.println("findAll---&gt;"); return new ArrayList&lt;T&gt;(); &#125;&#125;public class DemoDao extends BaseDao&lt;Demo&gt; &#123; public static void main(String[] args) &#123; DemoDao demoDao = new DemoDao(); System.out.println(demoDao.findAll()); &#125;&#125; ��new DemoDao��ʱ����DemoDao�̳л����е�findAll()��������ȷ�ǲ���Demo�������͵������ˡ� �����е�ͨ�������޶������ڷ�����չ�� ?ͨ��������������Ϊռλ����?��ʾ��ȷ�����͡�T��ʾΪ�������ͣ���ʲô����ʲô���͡� ? extends E����ʾ���Խ���E���ͻ���E���͵������͡���Ϊ���͵����ޡ� ? super E����ʾ���Խ���E���ͻ���E���͵ĸ����͡���Ϊ���͵����ޡ�]]></content>
      <categories>
        <category>����</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[2018�����ܽ�]]></title>
    <url>%2F2018%2F10%2F15%2Fannual-summary-2018%2F</url>
    <content type="text"><![CDATA[2018��Ŀ��1��Ŀ�� �����Կ�4�±��� �Ķ�����ѧ֮·����һ�� �Ķ�������֮�⡷�ڶ��� �Ķ��̲ġ����ݽṹ�� 1�½�չ ����һƪ�������µ����� �����Կ�4�±��� �Ķ�����ѧ֮·����һ�� �Ķ�������֮�⡷�ڶ��� �Ķ��̲ġ����ݽṹ�� 2��Ŀ�� ˢ�⡶���ݽṹ���������ص�֪ʶ �Ķ��̲ġ����繤�̡� �Ķ��̲ġ����������簲ȫ�� �������⡶����������ԭ�����ص�֪ʶ �Ķ�����ѧ֮·���ڶ��� �Ķ�������֮�⡷������ 2�½�չ ����һƪ�������µ����� ˢ�⡶���ݽṹ���������ص�֪ʶ �Ķ��̲ġ����繤�̡� �Ķ��̲ġ����������簲ȫ�� �������⡶����������ԭ�����ص�֪ʶ �Ķ�����ѧ֮·���ڶ��� �Ķ�������֮�⡷������ 3��Ŀ�� ˢ�⡶���������簲ȫ���������ص�֪ʶ ˢ�⡶���繤�̡��������ص�֪ʶ �������⡶����������ԭ�����ص�֪ʶ �������⡶���ݽṹ���ص�֪ʶ �Ķ�����ѧ֮���� �Ķ�������֮�⡷���Ĳ� �Ķ�����ʶ�� �Ķ�������ʱ���� �������������ݽṹ�� 3�½�չ ����һƪ�������µ����� ˢ�⡶���������簲ȫ���������ص�֪ʶ ˢ�⡶���繤�̡��������ص�֪ʶ �������⡶����������ԭ�����ص�֪ʶ �������⡶���ݽṹ���ص�֪ʶ �Ķ�����ѧ֮���� �Ķ�������֮�⡷���Ĳ� �Ķ�����ʶ�� �Ķ�������ʱ���� �������������ݽṹ�� 4��Ŀ�� ˢ�⡶���������簲ȫ���������ص�֪ʶ �������⡶���������簲ȫ���ص�֪ʶ �μ�4����ѧ���� �ٴ��Ķ�����������Java������:JVM�߼�����������ʵ���� 4�½�չ ����һƪ�������µ����� ˢ�⡶���������簲ȫ���������ص�֪ʶ �������⡶���������簲ȫ���ص�֪ʶ �μ�4����ѧ���� �ٴ��Ķ�����������Java������:JVM�߼�����������ʵ���� 5��Ŀ�� �Ķ�������������ԭ���� �Ķ�����ʶ���ӣ��������ӵ��ִ��ˡ� �Ķ������֣���Ӣ�ļ�ʶ�����ǵ�ʱ���� �Ķ���������Ч�Ķ�һ���顷 �Ķ���ѧ��ѧϰ������֪���ҵ���Чѧϰ�� �Ķ�����ѹ�����澳���������� 5�½�չ ����һƪ�������µ����� �Ķ�������������ԭ���� �Ķ�����ʶ���ӣ��������ӵ��ִ��ˡ� �Ķ������֣���Ӣ�ļ�ʶ�����ǵ�ʱ���� �Ķ���������Ч�Ķ�һ���顷 �Ķ���ѧ��ѧϰ������֪���ҵ���Чѧϰ�� �Ķ�����ѹ�����澳���������� 6��Ŀ�� �Ķ��̲ġ����ݿ�ϵͳԭ���� �Ķ��̲ġ�����������Ӧ�á� 6�½�չ �Ķ��̲ġ����ݿ�ϵͳԭ���� �Ķ��̲ġ�����������Ӧ�á� ����һƪ�������µ����� ���¸���Ӣ��һ����չ�ĺܻ�������ĿǰΪֹ�ƽ�����55�Ρ� 7��Ŀ�� �Ķ��̲ġ���������ϵͳ�� ���������ݿ�ϵͳԭ�����ص�֪ʶ �Ķ���̤̤ʵʵѧӢ� �Ķ������������š� �Ķ���ѧϰ���ڿ��ϡ� ����10�¿��ԡ���������ϵͳ�������ݿ�ϵͳԭ����������������������������������Ӧ�á� 7�½�չ �Ķ��̲ġ���������ϵͳ�� ���������ݿ�ϵͳԭ�����ص�֪ʶ �Ķ���̤̤ʵʵѧӢ� �Ķ������������š� �Ķ���ѧϰ���ڿ��ϡ� 8��Ŀ�� ��������������ϵͳ���ص�֪ʶ ˢ�⡶���ݿ�ϵͳԭ���� �Ķ��̲ġ����������������� �Ķ������ȸ������� �Ķ������������ڡ� �Ķ��������������� �Ķ�������˼���� 8�½�չ ��������������ϵͳ���ص�֪ʶ ˢ�⡶���ݿ�ϵͳԭ���� �Ķ������ȸ������� �Ķ������������ڡ� �Ķ��������������� �Ķ�������˼���� 9��Ŀ�� ˢ�⡶��������ϵͳ�������������ص�֪ʶ�� ˢ�⡶���ݿ�ϵͳԭ���������������ص�֪ʶ�� �Ķ����׾�:������Ҫ�ҵ�ͻΧ�� �Ķ������������ҵ�˼�������� �Ķ�����������ְ��ѵ��һ�Ρ� 9�½�չ ˢ�⡶��������ϵͳ�������������ص�֪ʶ�� ˢ�⡶���ݿ�ϵͳԭ���������������ص�֪ʶ�� �Ķ����׾�:������Ҫ�ҵ�ͻΧ�� �Ķ������������ҵ�˼�������� �Ķ�����������ְ��ѵ��һ�Ρ� 10��Ŀ�� �������⡶��������ϵͳ���ص�֪ʶ�� �������⡶���ݿ�ϵͳԭ�����ص�֪ʶ�� �������⡶����������Ӧ�á��ص�֪ʶ�� �Ķ���������ʷ�� �μ�10����ѧ����]]></content>
      <categories>
        <category>����</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[���ݽṹ֮���νṹ]]></title>
    <url>%2F2018%2F08%2F26%2Fdata_struct_tree%2F</url>
    <content type="text"><![CDATA[���ع����ݽṹ�Ļ���֪ʶ�� �����Խṹ-�����νṹ���ڷ����Խṹ�����н���֮��������ȷ�Ĳ��ι�ϵ�����ҽ���֮���з�֧������Ȩ�ޡ�������֯�����׵ȡ����νṹ�������ص��ǣ�����һ���ݹ��ṹ���ȡ����ȡ������������ӡ��Һ��ӡ�ɭ��֮�������ʣ����ﲻ���ٽ����ˡ� ������������������ֻ�������νṹ�зǳ���Ҫ����ʵ���������������У�����Ҳ��ת��Ϊ����������ʽ�����ġ�������Java�е�HashMap���������������ݽṹ�Ǻ�������TreeMap���������������ݽṹ�Ƕ��������������ڶ��壬�����Ͳ���˵�ˡ����������ص�����ÿ����������ֻ�������������������Ĵ洢��ʽ����Ϊ˳���洢�ṹ����ʽ�洢�ṹ��˳���洢�ṹ�Ƚ��˷ѿռ䣬�������ǲ�����ʽ�洢��˳���洢�ṹ�ǰѶ�����������һ����ȫ������������һЩʵ���ϲ����ڵ����ڵ㣬�Ӹ��ڵ㿪ʼ��һ��һ�������������δ��ŵ�˳�����С��������ı�����Ҫ�����֡���������������������������������ν���ȡ��С��󣬶��������ڶ�Ӧ���������ĸ��ڵ����Եġ������������������Ǹ��������ҡ��������������������󡢸����ҡ������������������������ҡ����� C����include &lt;stdio.h&gt;#include &lt;malloc.h&gt;typedef struct TreeNode&#123; //������ char data; //������ struct TreeNode * pLeftChild; //�Һ��� struct TreeNode * pRightChild;&#125;TREENODE, *PTREENODE;//����һ����PTREENODE createTree();//��������void printXianXu(PTREENODE);//��������void printZhongXu(PTREENODE);//��������void printHouXu(PTREENODE);//��������int binTreeDepth(PTREENODE);//�õ����еĽڵ���int sumNodes(PTREENODE rootNode);//�õ����е�Ҷ�ӽڵ���int sumLeafNodes(PTREENODE rootNode);//copyһ����PTREENODE copyTree(PTREENODE);//ʹ��#�Ŵ�����������һ����PTREENODE createTree1();void main()&#123; int depth, sum, sumLeaf; PTREENODE tree; PTREENODE rootNode = createTree(); printXianXu(rootNode); //printZhongXu(rootNode); //printHouXu(rootNode); depth = binTreeDepth(rootNode); printf(&quot;��������Ϊ��%d\n&quot;, depth); sum = sumNodes(rootNode); printf(&quot;���Ľڵ�����Ϊ��%d\n&quot;, sum); sumLeaf = sumLeafNodes(rootNode); printf(&quot;����Ҷ�ӽڵ�����Ϊ��%d\n&quot;, sumLeaf); tree = copyTree(rootNode); printXianXu(tree); tree = createTree1(); printXianXu(tree);&#125;//������PTREENODE createTree()&#123; PTREENODE pNodeA = (PTREENODE)malloc(sizeof(TREENODE)); PTREENODE pNodeB = (PTREENODE)malloc(sizeof(TREENODE)); PTREENODE pNodeC = (PTREENODE)malloc(sizeof(TREENODE)); PTREENODE pNodeD = (PTREENODE)malloc(sizeof(TREENODE)); PTREENODE pNodeE = (PTREENODE)malloc(sizeof(TREENODE)); pNodeA-&gt;data = &apos;A&apos;; pNodeB-&gt;data = &apos;B&apos;; pNodeC-&gt;data = &apos;C&apos;; pNodeD-&gt;data = &apos;D&apos;; pNodeE-&gt;data = &apos;E&apos;; pNodeA-&gt;pLeftChild = pNodeB; pNodeA-&gt;pRightChild = pNodeC; pNodeB-&gt;pLeftChild = pNodeB-&gt;pRightChild = NULL; pNodeC-&gt;pLeftChild = pNodeD; pNodeC-&gt;pRightChild = NULL; pNodeD-&gt;pLeftChild = NULL; pNodeD-&gt;pRightChild = pNodeE; pNodeE-&gt;pLeftChild = pNodeE-&gt;pRightChild = NULL; return pNodeA;&#125;//��������void printXianXu(PTREENODE rootNode)&#123; if(NULL != rootNode)&#123; //�������ʸ��ڵ� printf(&quot;%c\n&quot;, rootNode-&gt;data); if(NULL != rootNode-&gt;pLeftChild)&#123; //���������������� printXianXu(rootNode-&gt;pLeftChild); &#125; if(NULL != rootNode-&gt;pRightChild)&#123; //���������������� printXianXu(rootNode-&gt;pRightChild); &#125; &#125;&#125;//��������void printZhongXu(PTREENODE rootNode)&#123; if(NULL != rootNode)&#123; if(NULL != rootNode-&gt;pLeftChild)&#123; //�������������� printZhongXu(rootNode-&gt;pLeftChild); &#125; //���������ʸ��ڵ� printf(&quot;%c\n&quot;, rootNode-&gt;data); if(NULL != rootNode-&gt;pRightChild)&#123; //���������������� printZhongXu(rootNode-&gt;pRightChild); &#125; &#125;&#125;//��������void printHouXu(PTREENODE rootNode)&#123; if(NULL != rootNode)&#123; if(NULL != rootNode-&gt;pLeftChild)&#123; //�������������� printHouXu(rootNode-&gt;pLeftChild); &#125; if(NULL != rootNode-&gt;pRightChild)&#123; //�ٺ������������� printHouXu(rootNode-&gt;pRightChild); &#125; //�ٺ������ʸ��ڵ� printf(&quot;%c\n&quot;, rootNode-&gt;data); &#125;&#125;//����int binTreeDepth(PTREENODE rootNode)&#123; int depL, depR; if(rootNode ==NULL)&#123; return 0; &#125;else&#123; //���������������� depL = binTreeDepth(rootNode-&gt;pLeftChild); //���������������� depR = binTreeDepth(rootNode-&gt;pRightChild); if(depL &gt; depR)&#123; return depL + 1; &#125;else&#123; return depR + 1; &#125; &#125;&#125;//���еĽڵ�int sumNodes(PTREENODE rootNode)&#123; int sumNodesL, sumNodesR; if(rootNode ==NULL)&#123; return 0; &#125;else&#123; sumNodesL = sumNodes(rootNode-&gt;pLeftChild); sumNodesR = sumNodes(rootNode-&gt;pRightChild); return sumNodesL + sumNodesR + 1; &#125;&#125;//�õ����е�Ҷ�ӽڵ���int sumLeafNodes(PTREENODE rootNode)&#123; int sumNodesL, sumNodesR; if(rootNode ==NULL)&#123; return 0; &#125; if(rootNode-&gt;pLeftChild == NULL &amp;&amp; rootNode-&gt;pRightChild == NULL)&#123; return 1; &#125;else&#123; sumNodesL = sumLeafNodes(rootNode-&gt;pLeftChild); sumNodesR = sumLeafNodes(rootNode-&gt;pRightChild); return sumNodesL + sumNodesR; &#125;&#125;//copyһ����PTREENODE copyTree(PTREENODE rootNode)&#123; PTREENODE newNode; PTREENODE leftNode; PTREENODE rightNode; if(rootNode == NULL)&#123; return NULL; &#125; //copy������ if(rootNode-&gt;pLeftChild != NULL)&#123; leftNode = copyTree(rootNode-&gt;pLeftChild); &#125;else&#123; leftNode = NULL; &#125; //copy������ if(rootNode-&gt;pRightChild != NULL)&#123; rightNode = copyTree(rootNode-&gt;pRightChild); &#125;else&#123; rightNode = NULL; &#125; //����һ���½ڵ� newNode = (PTREENODE)malloc(sizeof(TREENODE)); newNode-&gt;pLeftChild = leftNode; newNode-&gt;pRightChild = rightNode; newNode-&gt;data = rootNode-&gt;data; return newNode;&#125;/**//�������ķǵݹ������㷨void inorder(PTREENODE rootNode)&#123; //����ָ������ PTREENODE node; //��ʼ��һ��ջ STACK stack; init(&amp;stack); //�Ѹ��ڵ�ѹջ push(&amp;stack, rootNode); //ջ��Ϊ�գ���һֱѭ����֪��ջΪ�� while(!isEmpty(&amp;stack))&#123; //ջ����Ԫ�ز����գ���һֱѭ�� while(getTop(&amp;stack)&#123; //��������һֱѹ��ջ�� push(&amp;stack, getTop(&amp;stack)-&gt;pLeftChild); &#125; //ִ�е����˵��ջ����һ��NULLԪ�ء�������Ϊ�յĽڵ� //��ջ���Ŀ�Ԫ�أ���ջ node = pop(&amp;stack); //ջ��Ϊ��ʱ��˵����û�н��� if(!isEmpty(&amp;stack))&#123; //������û�У����ʸ��ڵ㡣ջ�����Ǹ�Ԫ�����Ǹ��ڵ� printf(&quot;%c\n&quot;, getTop(&amp;stack)-&gt;data); //���������ڵ㣬���ڵ�����ջ node = pop(&amp;stack); //��������ѹ��ջ�С�ִ������һ�䣬��������һ��ѭ���ˡ� push(&amp;stack, node-&gt;pRightChild); &#125; &#125;&#125;*///ʹ��#�Ŵ�����������һ����PTREENODE createTree1()&#123; PTREENODE node = NULL; PTREENODE leftNode = NULL; PTREENODE rightNode = NULL; char ch; scanf(&quot;%c&quot;, &amp;ch); //#�ţ��򲻴������ڵ� if(ch == &apos;#&apos;)&#123; return NULL; &#125;else&#123; //����һ���ڵ� node = (PTREENODE)malloc(sizeof(TREENODE)); node-&gt;data = ch; node-&gt;pLeftChild = createTree1(); node-&gt;pRightChild = createTree1(); return node; &#125;&#125; Java����123456789101112131415161718192021222324252627282930313233package datastructure.part.tree;/** * @description * @author Denghs * @version 1.0,2018��6��30�� ����10:16:49 * @remark ���ڵ� */public class TreeNode&lt;T&gt; &#123; private TreeNode&lt;T&gt; leftNode;//������ private TreeNode&lt;T&gt; rightNode;//������ private T data;//���ݲ��� public TreeNode&lt;T&gt; getLeftNode() &#123; return leftNode; &#125; public void setLeftNode(TreeNode&lt;T&gt; leftNode) &#123; this.leftNode = leftNode; &#125; public TreeNode&lt;T&gt; getRightNode() &#123; return rightNode; &#125; public void setRightNode(TreeNode&lt;T&gt; rightNode) &#123; this.rightNode = rightNode; &#125; public T getData() &#123; return data; &#125; public void setData(T data) &#123; this.data = data; &#125; &#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199package datastructure.part.tree;/** * @description * @author Denghs * @version 1.0,2018��6��30�� ����10:22:57 * @remark */public class TreeUtils &#123; /** * @param node * @return */ public static TreeNode&lt;String&gt; createTree() &#123; TreeNode&lt;String&gt; nodeA = new TreeNode&lt;String&gt;(); TreeNode&lt;String&gt; nodeB = new TreeNode&lt;String&gt;(); TreeNode&lt;String&gt; nodeC = new TreeNode&lt;String&gt;(); TreeNode&lt;String&gt; nodeD = new TreeNode&lt;String&gt;(); TreeNode&lt;String&gt; nodeE = new TreeNode&lt;String&gt;(); nodeA.setData(&quot;A&quot;); nodeB.setData(&quot;B&quot;); nodeC.setData(&quot;C&quot;); nodeD.setData(&quot;D&quot;); nodeE.setData(&quot;E&quot;); nodeA.setLeftNode(nodeB); nodeB.setLeftNode(nodeC); nodeA.setRightNode(nodeD); nodeD.setLeftNode(nodeE); return nodeA; &#125; /** * �������� * @param rootNode */ public static &lt;T&gt; void printXianXu(TreeNode&lt;T&gt; rootNode) &#123; if(null != rootNode)&#123; //���������ڵ� System.out.println(rootNode.getData().toString()); //���������� if(null != rootNode.getLeftNode())&#123; printXianXu(rootNode.getLeftNode()); &#125; //���������� if(null != rootNode.getRightNode())&#123; printXianXu(rootNode.getRightNode()); &#125; &#125; &#125; /** * �������� * @param rootNode */ public static &lt;T&gt; void printZhongXu(TreeNode&lt;T&gt; rootNode) &#123; if(null != rootNode)&#123; //���������� if(null != rootNode.getLeftNode())&#123; printZhongXu(rootNode.getLeftNode()); &#125; //�������ڵ� System.out.println(rootNode.getData().toString()); //���������� if(null != rootNode.getRightNode())&#123; printZhongXu(rootNode.getRightNode()); &#125; &#125; &#125; /** * �������� * @param rootNode */ public static &lt;T&gt; void printHouXu(TreeNode&lt;T&gt; rootNode) &#123; if(null != rootNode)&#123; //���������� if(null != rootNode.getLeftNode())&#123; printHouXu(rootNode.getLeftNode()); &#125; //���������� if(null != rootNode.getRightNode())&#123; printHouXu(rootNode.getRightNode()); &#125; //�������ڵ� System.out.println(rootNode.getData().toString()); &#125; &#125; /** * ���ĸ߶� * @param rootNode * @return */ public static &lt;T&gt; int treeDepth(TreeNode&lt;T&gt; rootNode) &#123; if(null == rootNode)&#123; return 0; &#125; else &#123; //���������������� int depL = treeDepth(rootNode.getLeftNode()); //���������������� int depR = treeDepth(rootNode.getRightNode()); if(depL &gt; depR)&#123; return depL + 1; &#125;else&#123; return depR + 1; &#125; &#125; &#125; /** * �������нڵ��� * @param rootNode * @return */ public static &lt;T&gt; int sumNodes(TreeNode&lt;T&gt; rootNode) &#123; if(null == rootNode)&#123; return 0; &#125; //�����������Ľڵ� int sumL = sumNodes(rootNode.getLeftNode()); //�����������Ľڵ� int sumR = sumNodes(rootNode.getRightNode()); return sumL + sumR + 1; &#125; /** * �������е�Ҷ�ӽڵ� * @param rootNode * @return */ public static &lt;T&gt; int sumLeafNodes(TreeNode&lt;T&gt; rootNode) &#123; if(null == rootNode)&#123; return 0; &#125; //û�����������������Ľڵ㣬����Ҷ�ӽڵ� if(null == rootNode.getLeftNode() &amp;&amp; null == rootNode.getRightNode())&#123; return 1; &#125; else &#123; int sumNodesL = sumLeafNodes(rootNode.getLeftNode()); int sumNodesR = sumLeafNodes(rootNode.getRightNode()); return sumNodesL + sumNodesR; &#125; &#125; /** * ����һ���� * @param rootNode * @return */ public static &lt;T&gt; TreeNode&lt;T&gt; copyTree(TreeNode&lt;T&gt; rootNode) &#123; TreeNode&lt;T&gt; newNode = null; TreeNode&lt;T&gt; leftNode = null; TreeNode&lt;T&gt; rightNode = null; if(null == rootNode)&#123; return null; &#125; //���������� if(null != rootNode.getLeftNode())&#123; leftNode = copyTree(rootNode.getLeftNode()); &#125; //���������� if(null != rootNode.getRightNode())&#123; rightNode = copyTree(rootNode.getRightNode()); &#125; newNode = new TreeNode&lt;T&gt;(); newNode.setData(rootNode.getData()); newNode.setLeftNode(leftNode); newNode.setRightNode(rightNode); return newNode; &#125; public static void main(String[] args) &#123; TreeNode&lt;String&gt; treeNode = TreeUtils.createTree(); System.out.println(&quot;��������&quot;); printXianXu(treeNode); System.out.println(&quot;��������&quot;); printZhongXu(treeNode); System.out.println(&quot;��������&quot;); printHouXu(treeNode); System.out.println(&quot;�߶ȣ�&quot; + treeDepth(treeNode)); System.out.println(&quot;�ڵ�����&quot; + sumNodes(treeNode)); System.out.println(&quot;Ҷ�ӽڵ�����&quot; + sumLeafNodes(treeNode)); TreeNode&lt;String&gt; copyTree = copyTree(treeNode); System.out.println(&quot;��������&quot;); printXianXu(copyTree); &#125; &#125; B����B+��ƽ����·�����������Ǻܶ���ֻ֪���������ļ�ϵͳ�����Բ�����MySQL�������������ݽṹ���㷨ԭ����һ�ġ� ����ɭ������������ת��������ɭ��ת���ɳɶ�Ӧ�Ķ���������ת���ɶ������ĺ���˼���Ƕ������Ľ��㣬���߹Һ��ӣ��ұ߹��ֵܡ��Ѷ�������ԭ�ɶ�Ӧ������ɭ�֣�Ҳ����ͬ����ԭ��ȥ��ԭ���ɡ� �����Խṹ-ͼͼ���㷨�Ƚϸ��ӣ��˽���һЩ�����Լ�ͼ�����㷨��ԭ������û��д�����롣����ͼ������ͼ��ǿ��ͨͼ���洢�ṹ���ڽӾ������ڽӱ��������㷨���������Ⱥ͹������ȡ���С������������ķ�㷨����³˹�����㷨������·���ĵϽ�˹�����㷨�����������ȡ��˽�һ����Щ���������ֽ���ܹ����»�������ͼ�������ܽ᲻��ʲô��]]></content>
      <categories>
        <category>���ݽṹ</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[����������ԭ��ѧϰ���ֵ��ܽ�]]></title>
    <url>%2F2018%2F07%2F30%2Fnetwork%2F</url>
    <content type="text"><![CDATA[ǰ����ȥ��9�¿�ʼ�����̲ġ�����������ԭ������4�¿���ͨ����ǰǰ�������˴�����ʱ�䡣�����ó��ϣ��Ҳ�����ͯ��Ҳ����ѧ�ԣ���������һѧ�ͻ������ʡ�������������ԭ�����������ҿе�������Ҳ������Ϊ��������һ���̿��顣�����һ��ǿ���ѧ�����������ˣ�ĥ�������ԡ����ڼ������������������⣬���������˲��٣�������ֻ�Ǳ��̡�����������ѧϰ���������ĵ�Ҫ�󣬸��˾��÷ǳ�����˼��һԻ�����������٣���������̫ª��һԻ�¾��������죬��������������һԻϰ�����к㣬����д������֮���£�ɽ֮��ľ��һԻ�����˿�˼��������������֮�Ʋ����ԣ���֮֫�����С� ���������������ڽ̿����У���һ�λ�����Ҫ���ġ�ʲô�Ǽ��������磿ֻ�е����ܹ���˳�ı����������Ż�ȥ��ζ��ȥ���������ĺ��塣�����ٽ���һ�½̿����ϵ����ݡ����������磬��ָ������λ�ò�ͬ�ľ��ж������ܵĶ�̨�����������ⲿ�豸��ͨ��ͨ����·��������������������ϵͳ��������������������ͨ��Э���Ĺ�����Э���£�ʵ����Դ��������Ϣ���ݵļ�����ϵͳ�����������������緢չʷ�У�����60�����ļ����������������������Ƶ�ARPNET������Ҫ�ǿ��л���Ϊʵ����Դ����������80����������ͳһ�ı�׼-OSI�ο�ģ�͡�Ҳ���ǳ�˵���߲�ģ�͡��̿��鶼�����߲�ģ��������������ʵ�ϵı�׼��TCP/IP�Ĳ�ģ�͡��߲�ģ�ʹӸ����������ǣ�Ӧ�������ᡢ�����������������ǵ�һ���֣��պ���һ�����Ծ���ʫ���������䣩���Ĳ�ģ�ʹӸ��������Σ�Ӧ��������������ÿһ������������Э�飺������ͼ���������ҵģ����̿�����Ҳ��һ���ģ����������췭��һ�£�һ���������죬�����ͼ�ס�ˣ����Ͷ��ڽ����ݽ��з���ʱ����Ҫ����һϵ�еķ�װ�����ն��ڽ������ݵ�ʱ�����ٽ�����Ӧ�Ľ��⡣ �������ܽ��ķ�ʽҲ���̿����½ڵĻ��֣��ӵײ����ϲ���ϰ����������Ҫ��ʵ�ֱ�������͸�����䣬Ϊ������·���ṩ���ݴ���������ֱ������ʵ�ʳе����ݴ������������ʡ���ʵ������ԭʼ�Ķ�����λ���ݵĴ��䡣����������Ҫ�����ߡ����������ࡣ���ߴ�����������˫���ߡ�ͬ�����¡���ǥ��˫���߸�ͬ�����²��ɱ����ľ���Ҫ�Ѷ��������ݣ�ת���ɵ�Ƶ���д��䡣רҵ�����е��ƽ��������׳�è��MODEL�����ڽ��շ��У��ٰѵ��źŻ�ԭ�ɶ��������ݡ������˴������ǹ��źţ���Ҫ���Ͷ˽���ת�ɹ��źţ����ն��ٻ�ԭ�ɵ��źš������ڴ����������޿ɱ����ľͻ����ִ������ʣ��ŵ������������ʣ�ͨ�ŷ�ʽ�����⡣��������ʵ�����У���˾��һ�ѵĻ���Ҫ�˵�ĳ���ط��������������ݣ�������·����ʵ���Ǵ������̣������������仹�ǻ������䣬�������˴���ʱ�䣬�����������ǲ�ͬ�ġ��ڴ��������п��ܻ���������ĳһ����Ʒ�������ܶ࣬��һ��һ�ε����䣬����һ����10��������������…�ȵ���Щ���⡣���ﲻ�ò���һλΰ��-��ũ����ũ��������Ϣ�صĸ��Ϊ��Ϣ�ۺ�����ͨ�ŵ춨�˻���������������Ҫ����ȷ������ý���ӿڵ�һЩ���ԡ���Ҫ�ǻ�е���ԡ��������ԡ��������ԡ��������ԡ� ��е���ԣ����������ӿڵ���Ŀ����״����С�ȡ� �������ԣ���ѹ�ķ�Χ-5V��+5V�� �������ԣ��õ�ѹ��ȡֵ��Χ����ʾ�������ݡ�-5V��0V��ʾ0��+5V��0V��ʾ1. �������ԣ��涨��������ʱ�������ز����Ĺ������衣�źŵı��뷽ʽ����˹�ر��룺bit�м����ź����䣬�ӵ͵��ߵ�������ʾ0���Ӹߵ��͵�������ʾ1����������˹�ر��룺bit�м����ź����䣬bit��bit֮��Ҳ���ź�������ʾ��һbitΪ0��bit��bit֮�����ź����䣬��ʾ��һbitΪ1��������·��������·����Ҫ�Ƕ������㴫��ԭʼbit�����ܵļ�ǿ�����������ṩ�Ŀ��ܳ������������Ӹ�����Ϊ�߼����޲�����������·��ʹ֮������������Ϊһ���޲�������·��������·���Ĵ��͵�λ��Ϊ֡��������·����Ҫ��Ҫ�����������⣺ ��װ��֡��������һ�����ݵ�ǰ���ֱ������ײ���β����Ȼ���͹�����һ��֡��ȷ��֡�Ľ��ޡ��ײ���β����һ����Ҫ���þ��ǽ���֡���硣 ͸�����䣺��ָ��������������ʲô���ı������ϣ���Ӧ���ܹ�����·�ϴ��͡������������еı�������ǡ����ĳһ��������Ϣ��ȫһ��ʱ���ͱ�����ȡ�ʵ��Ĵ�ʩ��ʹ���շ����Ὣ��������������Ϊ��ĳ�ֿ�����Ϣ�� �������ƣ����������п��ܻ��������ز�����1 ���ܻ����� 0 �� 0 Ҳ���ܱ��� 1��Ϊ�˱�֤���ݴ����Ŀɿ��ԣ��ڼ��������紫������ʱ���������ø��ֲ���������ʩ����������·�㴫�͵�֡�У��㷺ʹ����ѭ����������CRC�ļ�����������������������Ŀ����ʵ��������ϵͳ֮��������͸�����ͣ����幦�ܰ���·��ѡ����ӵ�����ơ����ʻ����ȡ� RIPЭ�飺·����ϢЭ�飬�򵥵ľ�������·��Э�顣ÿ��RIP·������������һ��·�ɱ���ÿһ����Ӧ��һ��Ŀ�ĵء�����ÿ��������Ŀ�ĵص�IP��ַ����Ŀ�ĵص�·�������Ķ���1����Ŀ�ĵص�·������һ��·�ɱ���IP��ַ��·�ɸı���־�Լ�������·���йص�һЩ��ʱ���������õľ���������һ�ַǳ��򵥵ĵ�Ŀ�ĵؾ����Ĳ�����ʽ��վ������������Ҳ���Ǹ�·��Ҫ������·���������� OSPFЭ�飺��·״̬·��Э�飬ÿ��·����ͨ��ά�����Լ��ı�����·״̬��Ϣ����·��������������·״̬�Ϳ��Ե������ھ�·������ͨ����ɢ�ķ����Ѹ����˵ı�����·״̬��Ϣ�㲥������ϵͳ�е�ÿ��·����������ÿ��·������֪������ϵͳ�ڲ������˽ṹ����·״̬��Ϣ��·��������������·״̬����������ÿ��Ŀ�ĵص�����·��������·������������ͬ���㷨����������·�ɣ�����������������·�������ؽ��еġ���̬��·���㷨���ܹ��Զ������ٵ���Ӧ���˽ṹ�ı仯�� IPЭ�飺������Э�飬��������������һ�����������Ѹ߲��������Զ������ݱ�����ʽͨ���������ַ���ȥ�� ARPЭ�飺��ַת��Э�顣��TCP/IP���绷���£�ÿ��������������һ��32λ��IP��ַ�����ֻ�������ַ�������ʷ�Χ��ʶ������һ���߼���ַ��Ϊ���ñ������������ϴ��ͣ�����֪���˴˵�������ַ������̫������Ϊ����Ϊ����ȷ����Ŀ��վ���ͱ��ģ�������Ŀ��վ32λIP��ַת����48λ��̫��Ŀ�ĵ�ַ����ʱ����Ҫ��Э������ARPЭ�顣 RARPЭ�飺������ַת��Э�飬ʹ����һ������������������վ����ʼ���Ժ���ֻ���Լ�������������ַ��û��IP��ַ��������ͨ��RARPЭ�鷢���㲥�����������Լ���IP��ַ����RARP�����������ش�����IP��ַ��վ������ͨ��RARPЭ��ȡ���Լ���IP��ַ�� ICMPЭ�飺���������Ʊ���Э�顣 IGMPЭ�飺������������Э�顣������ TCPЭ�飺��Ҫ�����������ݽ��зֶδ��䣬�����Ự���ɿ����䣬�������ơ�������Э����Ӧ�ò�Э��֮���Ĺ�ϵ���˿ںż�ʹ�õĴ�����Э�飬���Ա�ʶӦ�ó������ɿ�����ԭ����ARQ�Զ������ش�������ȷ�Ϻ��ش����ơ�TCP���ĸ�ʽ��TCP���������������ֵĹ��̣�TCP�ͷ������Ĵλ��ֵĹ��̣� UDPЭ�飺һ�����ݰ����ܹ���������ͨ�ţ����ֶΣ�����Ҫ�����Ự������Ҫ�������ƣ����ɿ����䡣]]></content>
      <categories>
        <category>����������</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[2017�����ܽ�]]></title>
    <url>%2F2018%2F06%2F13%2Fannual-summary%2F</url>
    <content type="text"><![CDATA[�п���2017��6�¿�ʼ�������Ϳ�ʼ��������Ҳ�н�һ���ˡ�����ʱ�����Ǻܸп���������һ���Ĳ�����������֪ʶ��ϵ�����⣬ǿ�ȶ�֪ʶ���������������ջ��ܶ࣬�������������ϵ��ջ񡣼�����һ���Լ�����Ͷ�������飬�����ջ������Լ������ĸ��ܡ����ں����翴�������ں����������ں����ۣ������Լ��ĳ��ԣ�֪ʶ�������� 2017��Ŀ��6��Ŀ�� ���˲������� �Ķ���MySQL5.6���㿪ʼѧ��ϵͳ�Ĳ���һ��MySQL����֪ʶ 6�½�չ ���˲������ߣ�����ǰ��ֽ�ʱʼǱ���ժ����һЩ��¼���������ɲ������� �Ķ���MySQL5.6���㿪ʼѧ�� 7��Ŀ�� �Կ����������� �Ķ���MySQL5.6���㿪ʼѧ��ϵͳ�Ĳ���һ��MySQL����֪ʶ �Ķ��̲ġ�Java���Գ�������һ�� 7�½�չ �����Կ�������10�±������д󡶼��������硷רҵ���ƻ���������ѧ�μӿ��� �Ķ���MySQL5.6���㿪ʼѧ��ϵͳ�Ĳ���һ��MySQL����֪ʶ �Ķ��̲ġ�Java���Գ�������һ�� 8��Ŀ�� �Ķ������������γ�Ϊһ�����������ˡ� �Ķ��̲ġ��й�����ʷ��Ҫ�� 8�½�չ ����һƪ�������µ����� �Ķ������������γ�Ϊһ�����������ˡ� �Ķ��̲ġ��й�����ʷ��Ҫ�� 9��Ŀ�� �Ķ�����������Java������:JVM�߼�����������ʵ���� ˢ�⡶Java���Գ�������һ���������ص�֪ʶ ˢ�⡶�й�����ʷ��Ҫ�������������м�����֪ʶ 9�½�չ ����һƪ�������µ����� �Ķ�����������Java������:JVM�߼�����������ʵ���� ˢ�⡶Java���Գ�������һ�� ˢ�⡶�й�����ʷ��Ҫ�� 10��Ŀ�� �Ķ��̲ġ�����������ԭ���� �μ�10����ѧ���� �Ķ���������ϰ�� 10�½�չ ����һƪ�������µ����� �Ķ��̲ġ�����������ԭ���� �μ�10����ѧ���� �����繤�̡�û�а���ԭ�мƻ������Ķ�����Ҫ��һʱû���������Լ��ĺ��ʵ�ѧϰ������������Ŀ��Ҫ������֪ʶ���ϴ� �Ķ���������ϰ�� 11��Ŀ�� Ԥ��10�¿����еġ�����������ԭ�����������繤�̡���û�й��ġ��ٴ��Ķ��̲ġ�����������ԭ���� �Ķ�������֮�ա� ��ʼѧϰ���¸���Ӣ��һ����ÿ��10������ 11�½�չ ����һƪ�������µ����� �Ķ��̲ġ�����������ԭ���� �Ķ�������֮�ա� 12��Ŀ�� ˢ�⡶����������ԭ�����������ص�֪ʶ ��ϰ��C���Գ������ơ���Ϊ�����ݽṹ���Ŀ��Բ��»��� �Ķ��̲ġ����繤�̡� �Ķ�������֮�⡷��һ�� 12�½�չ ����һƪ�������µ����� ˢ�⡶����������ԭ�����������ص�֪ʶ ����̷��ǿ����Ƥ�顶C���Գ������ơ� �Ķ��̲ġ����繤�̡� �Ķ�������֮�⡷��һ��]]></content>
      <categories>
        <category>����</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Shell�ű��Ļع�]]></title>
    <url>%2F2018%2F05%2F12%2Fshell%2F</url>
    <content type="text"><![CDATA[���µı�������ѧϰ��һЩ��������������ϰ��һ��Shell��ϵͳ��ѧϰ��һ�顣������ʵ��ǰ��Shell����������֪����ֻ��ͣ���������õĲ��档��ϸ�����룬�κ�һ�ֱ������Ի�����������֪ʶ��ѧϰ�����˾���Ӧ���벻������Ҫ�ء������������Լ�ѧϰ�У���������֪ʶһ��ϵͳ����֪�� �˽�Shell�Ļ�����ʷ�����Ժܿ��ٵ�����һ�飬�и�����������ӡ���� Shell�����еı��������̡��﷨���������ص㣩 ����֪ʶ������������-&gt;��������ϰ �ص���ʵ���ڵڶ��㣬����һ�ű����������������ĸ��㣬��ʵ�����������ˡ����������̶ȣ��Ƕ��ǿ���ͣ��ʹ�ö��������ġ�������ϵͳ��ѧϰ���̣���������-&gt;�������⣬����֪��Ȼ�� shell��ʷShellĿǰ��һ��ͳ�ƣ�UNIXϵͳ���ж���Shell��Ŀǰ����Linux���а�������Shell����bash��Shell�ű�����Ҫ���룬���ڽ���ִ�еģ�һ��һ�ж�ȡ��ִ����Щ������ƵĽ���ִ�еĻ���JS�ű���HTML�ȣ�����һ��һ��˳��ִ�еġ��ѽ���Linux�ĺڴ�����һ������͸պ���ִ�С���ʵ������Ϊϵͳ��������ʱ�򣬾��Ѿ�������һ��shell�������������û���������������ִ�С� ִ�нű�1234#! /bin/sh#����ע��cd ..ls #��ʾע�ͣ�#!��ʾ�ýű�ָ����ĳ���������н���ִ����д���Ժ󣬵�����һ���ɡ���Linux����ϵͳ�У�����shell�ű���4�ַ�ʽ��1234source ./test.sh. ./test.shsh test.sh./test.sh ����4�ַ�ʽ���������ڣ�source��.������shell���ڽ����Ҳ����˵�������ַ�ʽ�������ǲ��������½��̵ġ���sh������������ڵ�ǰ�����ϲ���һ���ӽ��������иýű�����ʾ��Ȩ�޲�������ʾ���½����ļ�û��ִ��Ȩ����Ҫִ��chmod +x test.sh��Ϊtest.sh����ִ��Ȩ�� �����﷨Shell�еı�����Ҫ�����֡� ���������������ԴӸ����̴����ӽ��̡�env��������ֱ�Ӵ�ӡ�鿴��ǰϵͳ�Ļ������������ر�����ֻ�����ڵ�ǰShell���̣���ʽ�ǣ�VARNAME=value���Ⱥ�֮��û�пո񣩡���ʹ��export�������԰ѱ��ر�������Ϊ����������export VARNAME=value ����������һ���Զ����ı���������ϵͳ������磺DATE=`date`��echo $DATE������ʵ��ֱ��������date��Ч���� ת���ַ���Щ�����������ַ�������ֻ��ȡ������ֵ������\����ת�壬����ȥ�����������ĵ����ַ����������塣 �������ַ����Ľ綨�����������е����ݻ�ԭ��������echo ‘$SHELL’��������$SHELL ˫�����ַ����Ľ綨������˫��������ס�����ݣ�������Ϊ��һ�ִ�������ֹͨ������չ��������������չ��echo “$PATH”����������������PATH��ֵ����Ϊһ�ֺõ�Shell����ϰ�ߣ�Ӧ�����ǰѱ�����ȡֵ����˫����֮�С� ��������test�� [] ���Բ���һ�������Ƿ�������0��ʾ�ɹ���1��ʾʧ�ܡ���������������$?������ ��֧if/then/elif/else/fi��Shell����if��then��elif��else��fi�⼸������ʵ�ַ�֧���ơ�123if [ -f ~/.bashrc ]; then . ~/.bashrcfi 1234567891011#! /bin/shecho &quot;Is it morning? Please answer yes or no.&quot;read YES_OR_NOif [ &quot;$YES_OR_NO&quot; = &quot;yes&quot; ]; then echo &quot;Good morning!&quot;elif [ &quot;$YES_OR_NO&quot; = &quot;no&quot; ]; then echo &quot;Good afternoon!&quot;else echo &quot;Sorry, $YES_OR_NO not recognized. Enter yes or no.&quot;fi read�����������ǵȴ��û�����һ���ַ����������ַ����浽һ��Shell�����С� case/esacShell�ű���case����ƥ���ַ�����Wildcard��ÿ��ƥ����֧���������������ĩβ������;;������ִ��ʱ�ҵ���һ��ƥ���ķ�֧��ִ����Ӧ�����Ȼ��ֱ������esac֮����123456789101112#! /bin/shecho &quot;Is it morning? Please answer yes or no.&quot;read YES_OR_NOcase &quot;$YES_OR_NO&quot; inyes|y|Yes|YES) echo &quot;Good Morning!&quot;;;[nN]*) echo &quot;Good Afternoon!&quot;;;*) echo &quot;Sorry, $YES_OR_NO not recognized. Enter yes or no.&quot;;;esac ѭ��for/do/doneShell�ű���forѭ���ṹ��������ĳЩ�������Ե�foreachѭ����Ҳ���Ǳ�����12345#! /bin/shfor FRUIT in apple banana pear; do echo &quot;I like $FRUIT&quot;done while/do/done12345678#! /bin/shecho &quot;Enter password:&quot;read TRYwhile [ &quot;$TRY&quot; != &quot;secret&quot; ]; do echo &quot;Sorry, try again&quot; read TRYdone ����Shell�еĺ��������䶨������û�з���ֵҲû�в����б���123456#! /bin/shfoo()&#123; echo &quot;Function foo is called&quot;;&#125;echo &quot;-=start=-&quot;fooecho &quot;-=end=-&quot; λ�ò�������������1234567$0 �൱��C����main������argv[0]$1��$2... ��Щ��Ϊλ�ò�����Positional Parameter�����൱��C����main������argv[1]��argv[2]...$# �൱��C����main������argc - 1��ע��������#���治��ʾע��$@ ��ʾ�����б�&quot;$1&quot; &quot;$2&quot; ...��������������forѭ���е�in���档$* ��ʾ�����б�&quot;$1&quot; &quot;$2&quot; ...��ͬ��$? ��һ��������Exit Status$$ ��ǰ���̺� Shell�ű����Է���123-n ��һ���ű��е������ִ�У����ڼ����ű��е��﷨������-v һ��ִ�нű���һ�߽�ִ�й��Ľű�������ӡ����׼����������-x �ṩ����ִ����Ϣ����ִ�е�ÿһ�������ͽ������δ�ӡ������ $ sh -x ./test.sh ��������ʽ��������ʽ��ΪBasic������Extended������Ҳ���ǻ�����������չ������Linux����ϵͳ�У�grep���Ĭ��ʹ�õ��ǻ���������egrep����ʹ�õ�����չ������ �����﷨-�ַ���1234. ƥ������һ���ַ� abc.����ƥ��abcd��abc9��[] ƥ�������е�����һ���ַ� [abc]����ƥ��ad��bd��cd- ��[]�����ڱ�ʾ�ַ���Χ [0-9a-fA-F]����ƥ��һλʮ����������^ λ��[]���ŵĿ�ͷ��ƥ�����������ַ�֮��������һ���ַ� [^xy]����ƥ��a1��b1����ƥ��x1��y1 �����﷨-�����޶���1234567? ������ǰ���ĵ�Ԫ��ƥ�����λ�һ�� [0-9]?\.[0-9]ƥ��0.0��2.3��.5�ȣ�.���������ַ�����\ת��һ�¡�+ ������ǰ���ĵ�Ԫ��ƥ��һ�λ����� [a-zA-z0-9_.-]+@[a-zA-z0-9_.-]+\.[a-zA-z0-9_.-]ƥ��email��ַ* ������ǰ���ĵ�Ԫ��ƥ�����λ����� [0-9][0-9]*ƥ������һλ����&#123;N&#125; �����ţ���ȷƥ��N�� [0-9][0-9]&#123;2&#125;ƥ����100��999������&#123;N,&#125; ƥ������N�� [0-9][0-9]&#123;2,&#125;ƥ����λ���ϵ�����&#123;,M&#125; ƥ������M�� [0-9]&#123;,1&#125;�൱��[0-9]?&#123;N,M&#125; ����N�Σ�����M�� ^[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;$ƥ��IP��ַ �����﷨-λ���޶���12^ ƥ�����׵�λ��$ ƥ����ĩ��λ�� �����﷨-�������ⶨ��123\ ת���ַ�����ͨ�ַ�ת��Ϊ�����ַ��������ַ�ת��Ϊ��ͨ�ַ�() ����������ʽ��һ��������������һ����Ԫ�����Զ�������Ԫʹ�������޶��� ([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1-3&#125;ƥ��IP��ַ| ���������ӱ���ʽ����ʾ���Ĺ�ϵ n(o|either)ƥ��no��neither]]></content>
      <categories>
        <category>Shell</category>
      </categories>
  </entry>
</search>